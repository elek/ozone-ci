<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20190730 20:01:41.004" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/auditparser" id="s1" name="ozone-auditparser">
<suite source="/opt/hadoop/smoketest/auditparser/auditparser.robot" id="s1-s1" name="Auditparser">
<test id="s1-s1-t1" name="Initiating freon to generate data">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190730 20:01:41.057" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 2&gt;&amp;1'.</msg>
<msg timestamp="20190730 20:01:54.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20190730 20:01:54.226" level="INFO">${output} = 2019-07-30 20:01:42 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2019-07-30 20:01:42 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2019...</msg>
<status status="PASS" endtime="20190730 20:01:54.226" starttime="20190730 20:01:41.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190730 20:01:54.228" level="INFO">2019-07-30 20:01:42 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2019-07-30 20:01:42 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2019-07-30 20:01:42 INFO  MetricsSystemImpl:191 - ozone-freon metrics system started
2019-07-30 20:01:43 INFO  RandomKeyGenerator:278 - Number of Threads: 1
2019-07-30 20:01:43 INFO  RandomKeyGenerator:283 - Number of Volumes: 5.
2019-07-30 20:01:43 INFO  RandomKeyGenerator:284 - Number of Buckets per Volume: 5.
2019-07-30 20:01:43 INFO  RandomKeyGenerator:285 - Number of Keys per Bucket: 5.
2019-07-30 20:01:43 INFO  RandomKeyGenerator:286 - Key size: 10240 bytes
2019-07-30 20:01:43 INFO  RandomKeyGenerator:287 - Buffer size: 4096 bytes
2019-07-30 20:01:43 INFO  RandomKeyGenerator:307 - Starting progress bar Thread.

 0.00% |?                                                                                                    |  0/125 Time: 0:00:002019-07-30 20:01:43 INFO  RpcClient:288 - Creating Volume: vol-0-74626, with hadoop as owner.
2019-07-30 20:01:44 INFO  RpcClient:288 - Creating Volume: vol-1-53283, with hadoop as owner.
2019-07-30 20:01:44 INFO  RpcClient:288 - Creating Volume: vol-2-13618, with hadoop as owner.
2019-07-30 20:01:44 INFO  RpcClient:288 - Creating Volume: vol-3-67931, with hadoop as owner.
2019-07-30 20:01:44 INFO  RpcClient:288 - Creating Volume: vol-4-10223, with hadoop as owner.
2019-07-30 20:01:44 INFO  RpcClient:425 - Creating Bucket: vol-0-74626/bucket-0-87055, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 20:01:44 INFO  RpcClient:425 - Creating Bucket: vol-1-53283/bucket-0-27398, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 20:01:44 INFO  RpcClient:425 - Creating Bucket: vol-2-13618/bucket-0-87813, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 20:01:44 INFO  RpcClient:425 - Creating Bucket: vol-3-67931/bucket-0-42723, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 20:01:44 INFO  RpcClient:425 - Creating Bucket: vol-4-10223/bucket-0-55760, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 20:01:44 INFO  RpcClient:425 - Creating Bucket: vol-0-74626/bucket-1-94003, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 20:01:44 INFO  RpcClient:425 - Creating Bucket: vol-1-53283/bucket-1-25334, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 20:01:44 INFO  RpcClient:425 - Creating Bucket: vol-2-13618/bucket-1-78504, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 20:01:44 INFO  RpcClient:425 - Creating Bucket: vol-3-67931/bucket-1-26539, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 20:01:44 INFO  RpcClient:425 - Creating Bucket: vol-4-10223/bucket-1-28463, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 20:01:44 INFO  RpcClient:425 - Creating Bucket: vol-0-74626/bucket-2-14309, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 20:01:44 INFO  RpcClient:425 - Creating Bucket: vol-1-53283/bucket-2-58283, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 20:01:44 INFO  RpcClient:425 - Creating Bucket: vol-2-13618/bucket-2-20730, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 20:01:44 INFO  RpcClient:425 - Creating Bucket: vol-3-67931/bucket-2-59068, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 20:01:44 INFO  RpcClient:425 - Creating Bucket: vol-4-10223/bucket-2-92353, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 20:01:44 INFO  RpcClient:425 - Creating Bucket: vol-0-74626/bucket-3-75160, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 20:01:44 INFO  RpcClient:425 - Creating Bucket: vol-1-53283/bucket-3-99632, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 20:01:44 INFO  RpcClient:425 - Creating Bucket: vol-2-13618/bucket-3-51934, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 20:01:44 INFO  RpcClient:425 - Creating Bucket: vol-3-67931/bucket-3-47378, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 20:01:44 INFO  RpcClient:425 - Creating Bucket: vol-4-10223/bucket-3-91095, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 20:01:44 INFO  RpcClient:425 - Creating Bucket: vol-0-74626/bucket-4-16266, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 20:01:44 INFO  RpcClient:425 - Creating Bucket: vol-1-53283/bucket-4-37233, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 20:01:44 INFO  RpcClient:425 - Creating Bucket: vol-2-13618/bucket-4-31333, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 20:01:44 INFO  RpcClient:425 - Creating Bucket: vol-3-67931/bucket-4-76300, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 20:01:44 INFO  RpcClient:425 - Creating Bucket: vol-4-10223/bucket-4-62130, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 20:01:44 WARN  MetricsSystemImpl:151 - ozone-freon metrics system already initialized!
 0.00% |?                                                                                                    |  0/125 Time: 0:00:01WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil (file:/opt/hadoop/share/ozone/lib/ratis-thirdparty-misc-0.2.0.jar) to field java.nio.Buffer.address
WARNING: Please consider reporting this to the maintainers of org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
 0.00% |?                                                                                                    |  0/125 Time: 0:00:02 16.00% |?????????????????                                                                                    |  20/125 Time: 0:00:03 38.40% |???????????????????????????????????????                                                              |  48/125 Time: 0:00:04 66.40% |???????????????????????????????????????????????????????????????????                                  |  83/125 Time: 0:00:05 100.00% |?????????????????????????????????????????????????????????????????????????????????????????????????????|  125/125 Time: 0:00:06

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,207
Average Time spent in bucket creation: 00:00:00,078
Average Time spent in key creation: 00:00:01,009
Average Time spent in key write: 00:00:04,603
Total bytes written: 1280000
Total Execution time: 00:00:11,373
***************************************************</msg>
<status status="PASS" endtime="20190730 20:01:54.229" starttime="20190730 20:01:54.227"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190730 20:01:54.229" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190730 20:01:54.230" starttime="20190730 20:01:54.229"></status>
</kw>
<msg timestamp="20190730 20:01:54.231" level="INFO">${result} = 2019-07-30 20:01:42 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2019-07-30 20:01:42 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2019...</msg>
<status status="PASS" endtime="20190730 20:01:54.231" starttime="20190730 20:01:41.055"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20190730 20:01:54.233" starttime="20190730 20:01:54.232"></status>
</kw>
<status status="PASS" endtime="20190730 20:01:54.233" starttime="20190730 20:01:54.231"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20190730 20:01:54.234" starttime="20190730 20:01:54.233"></status>
</kw>
<status status="PASS" endtime="20190730 20:01:54.235" critical="yes" starttime="20190730 20:01:41.054"></status>
</test>
<test id="s1-s1-t2" name="Testing audit parser">
<kw name="Get Environment Variable" library="OperatingSystem">
<doc>Returns the value of an environment variable with the given name.</doc>
<arguments>
<arg>HADOOP_LOG_DIR</arg>
<arg>/var/log/hadoop</arg>
</arguments>
<assign>
<var>${logdir}</var>
</assign>
<msg timestamp="20190730 20:01:54.240" level="INFO">${logdir} = /var/log/hadoop</msg>
<status status="PASS" endtime="20190730 20:01:54.240" starttime="20190730 20:01:54.240"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ls -t "${logdir}" | grep om-audit | head -1</arg>
</arguments>
<assign>
<var>${logfile}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190730 20:01:54.244" level="INFO">Running command 'ls -t "/var/log/hadoop" | grep om-audit | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20190730 20:01:54.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20190730 20:01:54.256" level="INFO">${output} = om-audit-467c15bcd68e.log</msg>
<status status="PASS" endtime="20190730 20:01:54.256" starttime="20190730 20:01:54.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190730 20:01:54.258" level="INFO">om-audit-467c15bcd68e.log</msg>
<status status="PASS" endtime="20190730 20:01:54.258" starttime="20190730 20:01:54.257"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190730 20:01:54.259" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190730 20:01:54.259" starttime="20190730 20:01:54.258"></status>
</kw>
<msg timestamp="20190730 20:01:54.260" level="INFO">${logfile} = om-audit-467c15bcd68e.log</msg>
<status status="PASS" endtime="20190730 20:01:54.260" starttime="20190730 20:01:54.241"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" load "${logdir}/${logfile}"</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190730 20:01:54.263" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" load "/var/log/hadoop/om-audit-467c15bcd68e.log" 2&gt;&amp;1'.</msg>
<msg timestamp="20190730 20:02:00.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20190730 20:02:00.407" level="INFO">${output} = /var/log/hadoop/om-audit-467c15bcd68e.log has been loaded successfully</msg>
<status status="PASS" endtime="20190730 20:02:00.407" starttime="20190730 20:01:54.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190730 20:02:00.409" level="INFO">/var/log/hadoop/om-audit-467c15bcd68e.log has been loaded successfully</msg>
<status status="PASS" endtime="20190730 20:02:00.409" starttime="20190730 20:02:00.408"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190730 20:02:00.410" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190730 20:02:00.410" starttime="20190730 20:02:00.409"></status>
</kw>
<status status="PASS" endtime="20190730 20:02:00.411" starttime="20190730 20:01:54.260"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" template top5cmds</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190730 20:02:00.415" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" template top5cmds 2&gt;&amp;1'.</msg>
<msg timestamp="20190730 20:02:01.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20190730 20:02:01.246" level="INFO">${output} = ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190730 20:02:01.247" starttime="20190730 20:02:00.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190730 20:02:01.248" level="INFO">ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190730 20:02:01.249" starttime="20190730 20:02:01.247"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190730 20:02:01.249" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190730 20:02:01.250" starttime="20190730 20:02:01.249"></status>
</kw>
<msg timestamp="20190730 20:02:01.250" level="INFO">${result} = ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190730 20:02:01.250" starttime="20190730 20:02:00.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ALLOCATE_KEY</arg>
</arguments>
<status status="PASS" endtime="20190730 20:02:01.251" starttime="20190730 20:02:01.251"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" template top5users</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190730 20:02:01.255" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" template top5users 2&gt;&amp;1'.</msg>
<msg timestamp="20190730 20:02:02.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20190730 20:02:02.088" level="INFO">${output} = hadoop	280	
</msg>
<status status="PASS" endtime="20190730 20:02:02.088" starttime="20190730 20:02:01.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190730 20:02:02.090" level="INFO">hadoop	280	
</msg>
<status status="PASS" endtime="20190730 20:02:02.090" starttime="20190730 20:02:02.089"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190730 20:02:02.091" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190730 20:02:02.091" starttime="20190730 20:02:02.090"></status>
</kw>
<msg timestamp="20190730 20:02:02.091" level="INFO">${result} = hadoop	280	
</msg>
<status status="PASS" endtime="20190730 20:02:02.091" starttime="20190730 20:02:01.252"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Set username</arg>
</arguments>
<status status="PASS" endtime="20190730 20:02:02.092" starttime="20190730 20:02:02.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${user}</arg>
</arguments>
<status status="PASS" endtime="20190730 20:02:02.093" starttime="20190730 20:02:02.093"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'"</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190730 20:02:02.097" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20190730 20:02:03.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20190730 20:02:03.061" level="INFO">${output} = 5	
</msg>
<status status="PASS" endtime="20190730 20:02:03.061" starttime="20190730 20:02:02.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190730 20:02:03.063" level="INFO">5	
</msg>
<status status="PASS" endtime="20190730 20:02:03.063" starttime="20190730 20:02:03.062"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190730 20:02:03.064" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190730 20:02:03.064" starttime="20190730 20:02:03.063"></status>
</kw>
<msg timestamp="20190730 20:02:03.065" level="INFO">${result} = 5	
</msg>
<status status="PASS" endtime="20190730 20:02:03.065" starttime="20190730 20:02:02.094"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190730 20:02:03.067" level="INFO">${result} = 5.0</msg>
<status status="PASS" endtime="20190730 20:02:03.067" starttime="20190730 20:02:03.065"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}&gt;${count}</arg>
</arguments>
<status status="PASS" endtime="20190730 20:02:03.068" starttime="20190730 20:02:03.067"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'"</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190730 20:02:03.072" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20190730 20:02:03.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20190730 20:02:03.989" level="INFO">${output} = 25	
</msg>
<status status="PASS" endtime="20190730 20:02:03.989" starttime="20190730 20:02:03.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190730 20:02:03.991" level="INFO">25	
</msg>
<status status="PASS" endtime="20190730 20:02:03.991" starttime="20190730 20:02:03.990"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190730 20:02:03.992" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190730 20:02:03.992" starttime="20190730 20:02:03.992"></status>
</kw>
<msg timestamp="20190730 20:02:03.993" level="INFO">${result} = 25	
</msg>
<status status="PASS" endtime="20190730 20:02:03.993" starttime="20190730 20:02:03.068"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190730 20:02:03.994" level="INFO">${result} = 25.0</msg>
<status status="PASS" endtime="20190730 20:02:03.994" starttime="20190730 20:02:03.994"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}&gt;${count}</arg>
</arguments>
<status status="PASS" endtime="20190730 20:02:03.996" starttime="20190730 20:02:03.995"></status>
</kw>
<status status="PASS" endtime="20190730 20:02:03.996" critical="yes" starttime="20190730 20:01:54.235"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20190730 20:02:03.998" starttime="20190730 20:01:41.030"></status>
</suite>
<status status="PASS" endtime="20190730 20:02:04.002" starttime="20190730 20:01:41.005"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-auditparser" pass="2">ozone-auditparser</stat>
<stat fail="0" id="s1-s1" name="Auditparser" pass="2">ozone-auditparser.Auditparser</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
