<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20190730 21:39:10.648" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/auditparser" id="s1" name="ozone-topology-auditparser">
<suite source="/opt/hadoop/smoketest/auditparser/auditparser.robot" id="s1-s1" name="Auditparser">
<test id="s1-s1-t1" name="Initiating freon to generate data">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190730 21:39:10.702" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 2&gt;&amp;1'.</msg>
<msg timestamp="20190730 21:39:33.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20190730 21:39:33.938" level="INFO">${output} = 
 0.00% |?                                                                                                    |  0/125 Time: 0:00:00 0.00% |?                                                         ...</msg>
<status status="PASS" endtime="20190730 21:39:33.938" starttime="20190730 21:39:10.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190730 21:39:33.940" level="INFO">
 0.00% |?                                                                                                    |  0/125 Time: 0:00:00 0.00% |?                                                                                                    |  0/125 Time: 0:00:01WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil (file:/opt/hadoop/share/ozone/lib/ratis-thirdparty-misc-0.2.0.jar) to field java.nio.Buffer.address
WARNING: Please consider reporting this to the maintainers of org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
 0.00% |?                                                                                                    |  0/125 Time: 0:00:02 0.00% |?                                                                                                    |  0/125 Time: 0:00:03 0.00% |?                                                                                                    |  0/125 Time: 0:00:04 0.00% |?                                                                                                    |  0/125 Time: 0:00:05 0.00% |?                                                                                                    |  0/125 Time: 0:00:06 0.00% |?                                                                                                    |  0/125 Time: 0:00:07 0.00% |?                                                                                                    |  0/125 Time: 0:00:08 0.00% |?                                                                                                    |  0/125 Time: 0:00:09 0.80% |?                                                                                                    |  1/125 Time: 0:00:10 12.00% |?????????????                                                                                        |  15/125 Time: 0:00:11 29.60% |??????????????????????????????                                                                       |  37/125 Time: 0:00:12 48.00% |?????????????????????????????????????????????????                                                    |  60/125 Time: 0:00:13 69.60% |??????????????????????????????????????????????????????????????????????                               |  87/125 Time: 0:00:14 93.60% |??????????????????????????????????????????????????????????????????????????????????????????????       |  117/125 Time: 0:00:15 100.00% |?????????????????????????????????????????????????????????????????????????????????????????????????????|  125/125 Time: 0:00:16

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,131
Average Time spent in bucket creation: 00:00:00,196
Average Time spent in key creation: 00:00:01,353
Average Time spent in key write: 00:00:13,425
Total bytes written: 1280000
Total Execution time: 00:00:21,431
***************************************************</msg>
<status status="PASS" endtime="20190730 21:39:33.941" starttime="20190730 21:39:33.939"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190730 21:39:33.942" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190730 21:39:33.942" starttime="20190730 21:39:33.941"></status>
</kw>
<msg timestamp="20190730 21:39:33.943" level="INFO">${result} = 
 0.00% |?                                                                                                    |  0/125 Time: 0:00:00 0.00% |?                                                         ...</msg>
<status status="PASS" endtime="20190730 21:39:33.943" starttime="20190730 21:39:10.699"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20190730 21:39:33.945" starttime="20190730 21:39:33.944"></status>
</kw>
<status status="PASS" endtime="20190730 21:39:33.945" starttime="20190730 21:39:33.943"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20190730 21:39:33.946" starttime="20190730 21:39:33.945"></status>
</kw>
<status status="PASS" endtime="20190730 21:39:33.947" critical="yes" starttime="20190730 21:39:10.699"></status>
</test>
<test id="s1-s1-t2" name="Testing audit parser">
<kw name="Get Environment Variable" library="OperatingSystem">
<doc>Returns the value of an environment variable with the given name.</doc>
<arguments>
<arg>HADOOP_LOG_DIR</arg>
<arg>/var/log/hadoop</arg>
</arguments>
<assign>
<var>${logdir}</var>
</assign>
<msg timestamp="20190730 21:39:33.952" level="INFO">${logdir} = /var/log/hadoop</msg>
<status status="PASS" endtime="20190730 21:39:33.952" starttime="20190730 21:39:33.951"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ls -t "${logdir}" | grep om-audit | head -1</arg>
</arguments>
<assign>
<var>${logfile}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190730 21:39:33.956" level="INFO">Running command 'ls -t "/var/log/hadoop" | grep om-audit | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20190730 21:39:33.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20190730 21:39:33.965" level="INFO">${output} = om-audit-9610022ddb3c.log</msg>
<status status="PASS" endtime="20190730 21:39:33.966" starttime="20190730 21:39:33.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190730 21:39:33.968" level="INFO">om-audit-9610022ddb3c.log</msg>
<status status="PASS" endtime="20190730 21:39:33.968" starttime="20190730 21:39:33.967"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190730 21:39:33.969" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190730 21:39:33.969" starttime="20190730 21:39:33.968"></status>
</kw>
<msg timestamp="20190730 21:39:33.969" level="INFO">${logfile} = om-audit-9610022ddb3c.log</msg>
<status status="PASS" endtime="20190730 21:39:33.970" starttime="20190730 21:39:33.953"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" load "${logdir}/${logfile}"</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190730 21:39:33.973" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" load "/var/log/hadoop/om-audit-9610022ddb3c.log" 2&gt;&amp;1'.</msg>
<msg timestamp="20190730 21:39:44.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20190730 21:39:44.637" level="INFO">${output} = /var/log/hadoop/om-audit-9610022ddb3c.log has been loaded successfully</msg>
<status status="PASS" endtime="20190730 21:39:44.638" starttime="20190730 21:39:33.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190730 21:39:44.640" level="INFO">/var/log/hadoop/om-audit-9610022ddb3c.log has been loaded successfully</msg>
<status status="PASS" endtime="20190730 21:39:44.640" starttime="20190730 21:39:44.639"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190730 21:39:44.641" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190730 21:39:44.641" starttime="20190730 21:39:44.640"></status>
</kw>
<status status="PASS" endtime="20190730 21:39:44.642" starttime="20190730 21:39:33.970"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" template top5cmds</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190730 21:39:44.645" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" template top5cmds 2&gt;&amp;1'.</msg>
<msg timestamp="20190730 21:39:45.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20190730 21:39:45.522" level="INFO">${output} = ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190730 21:39:45.522" starttime="20190730 21:39:44.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190730 21:39:45.523" level="INFO">ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190730 21:39:45.524" starttime="20190730 21:39:45.523"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190730 21:39:45.525" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190730 21:39:45.525" starttime="20190730 21:39:45.524"></status>
</kw>
<msg timestamp="20190730 21:39:45.525" level="INFO">${result} = ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190730 21:39:45.525" starttime="20190730 21:39:44.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ALLOCATE_KEY</arg>
</arguments>
<status status="PASS" endtime="20190730 21:39:45.526" starttime="20190730 21:39:45.526"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" template top5users</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190730 21:39:45.530" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" template top5users 2&gt;&amp;1'.</msg>
<msg timestamp="20190730 21:39:46.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20190730 21:39:46.442" level="INFO">${output} = hadoop	280	
</msg>
<status status="PASS" endtime="20190730 21:39:46.442" starttime="20190730 21:39:45.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190730 21:39:46.444" level="INFO">hadoop	280	
</msg>
<status status="PASS" endtime="20190730 21:39:46.444" starttime="20190730 21:39:46.443"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190730 21:39:46.445" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190730 21:39:46.445" starttime="20190730 21:39:46.445"></status>
</kw>
<msg timestamp="20190730 21:39:46.446" level="INFO">${result} = hadoop	280	
</msg>
<status status="PASS" endtime="20190730 21:39:46.446" starttime="20190730 21:39:45.527"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Set username</arg>
</arguments>
<status status="PASS" endtime="20190730 21:39:46.447" starttime="20190730 21:39:46.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${user}</arg>
</arguments>
<status status="PASS" endtime="20190730 21:39:46.448" starttime="20190730 21:39:46.448"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'"</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190730 21:39:46.452" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20190730 21:39:47.304" level="INFO">${rc} = 0</msg>
<msg timestamp="20190730 21:39:47.304" level="INFO">${output} = 5	
</msg>
<status status="PASS" endtime="20190730 21:39:47.304" starttime="20190730 21:39:46.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190730 21:39:47.306" level="INFO">5	
</msg>
<status status="PASS" endtime="20190730 21:39:47.306" starttime="20190730 21:39:47.305"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190730 21:39:47.307" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190730 21:39:47.307" starttime="20190730 21:39:47.307"></status>
</kw>
<msg timestamp="20190730 21:39:47.308" level="INFO">${result} = 5	
</msg>
<status status="PASS" endtime="20190730 21:39:47.308" starttime="20190730 21:39:46.448"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190730 21:39:47.310" level="INFO">${result} = 5.0</msg>
<status status="PASS" endtime="20190730 21:39:47.310" starttime="20190730 21:39:47.308"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}&gt;${count}</arg>
</arguments>
<status status="PASS" endtime="20190730 21:39:47.311" starttime="20190730 21:39:47.310"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'"</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190730 21:39:47.315" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20190730 21:39:48.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20190730 21:39:48.211" level="INFO">${output} = 25	
</msg>
<status status="PASS" endtime="20190730 21:39:48.211" starttime="20190730 21:39:47.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190730 21:39:48.213" level="INFO">25	
</msg>
<status status="PASS" endtime="20190730 21:39:48.213" starttime="20190730 21:39:48.212"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190730 21:39:48.214" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190730 21:39:48.214" starttime="20190730 21:39:48.213"></status>
</kw>
<msg timestamp="20190730 21:39:48.215" level="INFO">${result} = 25	
</msg>
<status status="PASS" endtime="20190730 21:39:48.215" starttime="20190730 21:39:47.311"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190730 21:39:48.216" level="INFO">${result} = 25.0</msg>
<status status="PASS" endtime="20190730 21:39:48.216" starttime="20190730 21:39:48.215"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}&gt;${count}</arg>
</arguments>
<status status="PASS" endtime="20190730 21:39:48.217" starttime="20190730 21:39:48.216"></status>
</kw>
<status status="PASS" endtime="20190730 21:39:48.217" critical="yes" starttime="20190730 21:39:33.947"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20190730 21:39:48.219" starttime="20190730 21:39:10.674"></status>
</suite>
<status status="PASS" endtime="20190730 21:39:48.223" starttime="20190730 21:39:10.649"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-topology-auditparser" pass="2">ozone-topology-auditparser</stat>
<stat fail="0" id="s1-s1" name="Auditparser" pass="2">ozone-topology-auditparser.Auditparser</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
