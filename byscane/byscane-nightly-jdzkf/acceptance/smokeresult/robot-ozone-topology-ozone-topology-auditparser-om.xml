<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20190730 07:55:48.398" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/auditparser" id="s1" name="ozone-topology-auditparser">
<suite source="/opt/hadoop/smoketest/auditparser/auditparser.robot" id="s1-s1" name="Auditparser">
<test id="s1-s1-t1" name="Initiating freon to generate data">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190730 07:55:48.451" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 2&gt;&amp;1'.</msg>
<msg timestamp="20190730 07:56:21.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20190730 07:56:21.770" level="INFO">${output} = 
 0.00% |?                                                                                                    |  0/125 Time: 0:00:00 0.00% |?                                                         ...</msg>
<status status="PASS" endtime="20190730 07:56:21.770" starttime="20190730 07:55:48.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190730 07:56:21.772" level="INFO">
 0.00% |?                                                                                                    |  0/125 Time: 0:00:00 0.00% |?                                                                                                    |  0/125 Time: 0:00:01WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil (file:/opt/hadoop/share/ozone/lib/ratis-thirdparty-misc-0.2.0.jar) to field java.nio.Buffer.address
WARNING: Please consider reporting this to the maintainers of org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
 0.00% |?                                                                                                    |  0/125 Time: 0:00:02 0.00% |?                                                                                                    |  0/125 Time: 0:00:03 0.00% |?                                                                                                    |  0/125 Time: 0:00:04 0.00% |?                                                                                                    |  0/125 Time: 0:00:05 0.00% |?                                                                                                    |  0/125 Time: 0:00:06 0.00% |?                                                                                                    |  0/125 Time: 0:00:07 0.00% |?                                                                                                    |  0/125 Time: 0:00:08 0.00% |?                                                                                                    |  0/125 Time: 0:00:09 0.00% |?                                                                                                    |  0/125 Time: 0:00:10 0.00% |?                                                                                                    |  0/125 Time: 0:00:11 0.00% |?                                                                                                    |  0/125 Time: 0:00:12 0.00% |?                                                                                                    |  0/125 Time: 0:00:13 0.00% |?                                                                                                    |  0/125 Time: 0:00:14 0.00% |?                                                                                                    |  0/125 Time: 0:00:15 0.00% |?                                                                                                    |  0/125 Time: 0:00:16 0.00% |?                                                                                                    |  0/125 Time: 0:00:17 0.80% |?                                                                                                    |  1/125 Time: 0:00:18 0.80% |?                                                                                                    |  1/125 Time: 0:00:19 0.80% |?                                                                                                    |  1/125 Time: 0:00:20 0.80% |?                                                                                                    |  1/125 Time: 0:00:21 0.80% |?                                                                                                    |  1/125 Time: 0:00:22 2.40% |???                                                                                                  |  3/125 Time: 0:00:23 19.20% |????????????????????                                                                                 |  24/125 Time: 0:00:24 36.00% |?????????????????????????????????????                                                                |  45/125 Time: 0:00:25 56.80% |?????????????????????????????????????????????????????????                                            |  71/125 Time: 0:00:26 78.40% |???????????????????????????????????????????????????????????????????????????????                      |  98/125 Time: 0:00:27 100.00% |?????????????????????????????????????????????????????????????????????????????????????????????????????|  125/125 Time: 0:00:28

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,126
Average Time spent in bucket creation: 00:00:00,192
Average Time spent in key creation: 00:00:01,401
Average Time spent in key write: 00:00:26,000
Total bytes written: 1280000
Total Execution time: 00:00:31,607
***************************************************</msg>
<status status="PASS" endtime="20190730 07:56:21.773" starttime="20190730 07:56:21.771"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190730 07:56:21.774" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190730 07:56:21.774" starttime="20190730 07:56:21.773"></status>
</kw>
<msg timestamp="20190730 07:56:21.775" level="INFO">${result} = 
 0.00% |?                                                                                                    |  0/125 Time: 0:00:00 0.00% |?                                                         ...</msg>
<status status="PASS" endtime="20190730 07:56:21.775" starttime="20190730 07:55:48.449"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20190730 07:56:21.777" starttime="20190730 07:56:21.776"></status>
</kw>
<status status="PASS" endtime="20190730 07:56:21.777" starttime="20190730 07:56:21.775"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20190730 07:56:21.778" starttime="20190730 07:56:21.777"></status>
</kw>
<status status="PASS" endtime="20190730 07:56:21.778" critical="yes" starttime="20190730 07:55:48.448"></status>
</test>
<test id="s1-s1-t2" name="Testing audit parser">
<kw name="Get Environment Variable" library="OperatingSystem">
<doc>Returns the value of an environment variable with the given name.</doc>
<arguments>
<arg>HADOOP_LOG_DIR</arg>
<arg>/var/log/hadoop</arg>
</arguments>
<assign>
<var>${logdir}</var>
</assign>
<msg timestamp="20190730 07:56:21.785" level="INFO">${logdir} = /var/log/hadoop</msg>
<status status="PASS" endtime="20190730 07:56:21.785" starttime="20190730 07:56:21.784"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ls -t "${logdir}" | grep om-audit | head -1</arg>
</arguments>
<assign>
<var>${logfile}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190730 07:56:21.789" level="INFO">Running command 'ls -t "/var/log/hadoop" | grep om-audit | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20190730 07:56:21.799" level="INFO">${rc} = 0</msg>
<msg timestamp="20190730 07:56:21.799" level="INFO">${output} = om-audit-5a885446818a.log</msg>
<status status="PASS" endtime="20190730 07:56:21.799" starttime="20190730 07:56:21.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190730 07:56:21.801" level="INFO">om-audit-5a885446818a.log</msg>
<status status="PASS" endtime="20190730 07:56:21.801" starttime="20190730 07:56:21.800"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190730 07:56:21.802" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190730 07:56:21.802" starttime="20190730 07:56:21.802"></status>
</kw>
<msg timestamp="20190730 07:56:21.803" level="INFO">${logfile} = om-audit-5a885446818a.log</msg>
<status status="PASS" endtime="20190730 07:56:21.803" starttime="20190730 07:56:21.785"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" load "${logdir}/${logfile}"</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190730 07:56:21.807" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" load "/var/log/hadoop/om-audit-5a885446818a.log" 2&gt;&amp;1'.</msg>
<msg timestamp="20190730 07:56:31.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20190730 07:56:31.645" level="INFO">${output} = /var/log/hadoop/om-audit-5a885446818a.log has been loaded successfully</msg>
<status status="PASS" endtime="20190730 07:56:31.646" starttime="20190730 07:56:21.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190730 07:56:31.647" level="INFO">/var/log/hadoop/om-audit-5a885446818a.log has been loaded successfully</msg>
<status status="PASS" endtime="20190730 07:56:31.648" starttime="20190730 07:56:31.646"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190730 07:56:31.649" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190730 07:56:31.649" starttime="20190730 07:56:31.648"></status>
</kw>
<status status="PASS" endtime="20190730 07:56:31.649" starttime="20190730 07:56:21.803"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" template top5cmds</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190730 07:56:31.653" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" template top5cmds 2&gt;&amp;1'.</msg>
<msg timestamp="20190730 07:56:32.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20190730 07:56:32.531" level="INFO">${output} = ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190730 07:56:32.531" starttime="20190730 07:56:31.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190730 07:56:32.533" level="INFO">ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190730 07:56:32.533" starttime="20190730 07:56:32.532"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190730 07:56:32.534" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190730 07:56:32.534" starttime="20190730 07:56:32.534"></status>
</kw>
<msg timestamp="20190730 07:56:32.535" level="INFO">${result} = ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190730 07:56:32.535" starttime="20190730 07:56:31.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ALLOCATE_KEY</arg>
</arguments>
<status status="PASS" endtime="20190730 07:56:32.536" starttime="20190730 07:56:32.535"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" template top5users</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190730 07:56:32.540" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" template top5users 2&gt;&amp;1'.</msg>
<msg timestamp="20190730 07:56:33.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20190730 07:56:33.412" level="INFO">${output} = hadoop	280	
</msg>
<status status="PASS" endtime="20190730 07:56:33.412" starttime="20190730 07:56:32.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190730 07:56:33.414" level="INFO">hadoop	280	
</msg>
<status status="PASS" endtime="20190730 07:56:33.414" starttime="20190730 07:56:33.413"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190730 07:56:33.414" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190730 07:56:33.415" starttime="20190730 07:56:33.414"></status>
</kw>
<msg timestamp="20190730 07:56:33.415" level="INFO">${result} = hadoop	280	
</msg>
<status status="PASS" endtime="20190730 07:56:33.415" starttime="20190730 07:56:32.536"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Set username</arg>
</arguments>
<status status="PASS" endtime="20190730 07:56:33.416" starttime="20190730 07:56:33.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${user}</arg>
</arguments>
<status status="PASS" endtime="20190730 07:56:33.417" starttime="20190730 07:56:33.416"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'"</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190730 07:56:33.419" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20190730 07:56:34.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20190730 07:56:34.308" level="INFO">${output} = 5	
</msg>
<status status="PASS" endtime="20190730 07:56:34.308" starttime="20190730 07:56:33.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190730 07:56:34.309" level="INFO">5	
</msg>
<status status="PASS" endtime="20190730 07:56:34.310" starttime="20190730 07:56:34.308"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190730 07:56:34.310" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190730 07:56:34.311" starttime="20190730 07:56:34.310"></status>
</kw>
<msg timestamp="20190730 07:56:34.311" level="INFO">${result} = 5	
</msg>
<status status="PASS" endtime="20190730 07:56:34.311" starttime="20190730 07:56:33.417"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190730 07:56:34.313" level="INFO">${result} = 5.0</msg>
<status status="PASS" endtime="20190730 07:56:34.313" starttime="20190730 07:56:34.311"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}&gt;${count}</arg>
</arguments>
<status status="PASS" endtime="20190730 07:56:34.314" starttime="20190730 07:56:34.313"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'"</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190730 07:56:34.317" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20190730 07:56:35.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20190730 07:56:35.256" level="INFO">${output} = 25	
</msg>
<status status="PASS" endtime="20190730 07:56:35.256" starttime="20190730 07:56:34.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190730 07:56:35.258" level="INFO">25	
</msg>
<status status="PASS" endtime="20190730 07:56:35.258" starttime="20190730 07:56:35.257"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190730 07:56:35.259" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190730 07:56:35.259" starttime="20190730 07:56:35.258"></status>
</kw>
<msg timestamp="20190730 07:56:35.260" level="INFO">${result} = 25	
</msg>
<status status="PASS" endtime="20190730 07:56:35.260" starttime="20190730 07:56:34.314"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190730 07:56:35.261" level="INFO">${result} = 25.0</msg>
<status status="PASS" endtime="20190730 07:56:35.261" starttime="20190730 07:56:35.260"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}&gt;${count}</arg>
</arguments>
<status status="PASS" endtime="20190730 07:56:35.262" starttime="20190730 07:56:35.261"></status>
</kw>
<status status="PASS" endtime="20190730 07:56:35.262" critical="yes" starttime="20190730 07:56:21.779"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20190730 07:56:35.264" starttime="20190730 07:55:48.424"></status>
</suite>
<status status="PASS" endtime="20190730 07:56:35.268" starttime="20190730 07:55:48.399"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-topology-auditparser" pass="2">ozone-topology-auditparser</stat>
<stat fail="0" id="s1-s1" name="Auditparser" pass="2">ozone-topology-auditparser.Auditparser</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
