<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20190802 03:41:14.047" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/auditparser" id="s1" name="ozone-auditparser">
<suite source="/opt/hadoop/smoketest/auditparser/auditparser.robot" id="s1-s1" name="Auditparser">
<test id="s1-s1-t1" name="Initiating freon to generate data">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190802 03:41:14.102" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 2&gt;&amp;1'.</msg>
<msg timestamp="20190802 03:41:27.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20190802 03:41:27.310" level="INFO">${output} = 2019-08-02 03:41:15 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2019-08-02 03:41:15 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2019...</msg>
<status status="PASS" endtime="20190802 03:41:27.310" starttime="20190802 03:41:14.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190802 03:41:27.312" level="INFO">2019-08-02 03:41:15 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2019-08-02 03:41:15 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2019-08-02 03:41:15 INFO  MetricsSystemImpl:191 - ozone-freon metrics system started
2019-08-02 03:41:16 INFO  RandomKeyGenerator:278 - Number of Threads: 1
2019-08-02 03:41:16 INFO  RandomKeyGenerator:283 - Number of Volumes: 5.
2019-08-02 03:41:16 INFO  RandomKeyGenerator:284 - Number of Buckets per Volume: 5.
2019-08-02 03:41:16 INFO  RandomKeyGenerator:285 - Number of Keys per Bucket: 5.
2019-08-02 03:41:16 INFO  RandomKeyGenerator:286 - Key size: 10240 bytes
2019-08-02 03:41:16 INFO  RandomKeyGenerator:287 - Buffer size: 4096 bytes
2019-08-02 03:41:16 INFO  RandomKeyGenerator:307 - Starting progress bar Thread.

 0.00% |?                                                                                                    |  0/125 Time: 0:00:002019-08-02 03:41:16 INFO  RpcClient:288 - Creating Volume: vol-0-61489, with hadoop as owner.
2019-08-02 03:41:17 INFO  RpcClient:288 - Creating Volume: vol-1-76488, with hadoop as owner.
2019-08-02 03:41:17 INFO  RpcClient:288 - Creating Volume: vol-2-11965, with hadoop as owner.
2019-08-02 03:41:17 INFO  RpcClient:288 - Creating Volume: vol-3-33081, with hadoop as owner.
2019-08-02 03:41:17 INFO  RpcClient:288 - Creating Volume: vol-4-56830, with hadoop as owner.
2019-08-02 03:41:17 INFO  RpcClient:425 - Creating Bucket: vol-0-61489/bucket-0-31204, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-02 03:41:17 INFO  RpcClient:425 - Creating Bucket: vol-1-76488/bucket-0-58654, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-02 03:41:17 INFO  RpcClient:425 - Creating Bucket: vol-2-11965/bucket-0-04236, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-02 03:41:17 INFO  RpcClient:425 - Creating Bucket: vol-3-33081/bucket-0-82641, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-02 03:41:17 INFO  RpcClient:425 - Creating Bucket: vol-4-56830/bucket-0-98832, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-02 03:41:17 INFO  RpcClient:425 - Creating Bucket: vol-0-61489/bucket-1-03734, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-02 03:41:17 INFO  RpcClient:425 - Creating Bucket: vol-1-76488/bucket-1-95978, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-02 03:41:17 INFO  RpcClient:425 - Creating Bucket: vol-2-11965/bucket-1-42174, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-02 03:41:17 INFO  RpcClient:425 - Creating Bucket: vol-3-33081/bucket-1-97686, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-02 03:41:17 INFO  RpcClient:425 - Creating Bucket: vol-4-56830/bucket-1-79501, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-02 03:41:17 INFO  RpcClient:425 - Creating Bucket: vol-0-61489/bucket-2-17365, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-02 03:41:17 INFO  RpcClient:425 - Creating Bucket: vol-1-76488/bucket-2-93279, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-02 03:41:17 INFO  RpcClient:425 - Creating Bucket: vol-2-11965/bucket-2-30760, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-02 03:41:17 INFO  RpcClient:425 - Creating Bucket: vol-3-33081/bucket-2-63314, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-02 03:41:17 INFO  RpcClient:425 - Creating Bucket: vol-4-56830/bucket-2-14575, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-02 03:41:17 INFO  RpcClient:425 - Creating Bucket: vol-0-61489/bucket-3-46056, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-02 03:41:17 INFO  RpcClient:425 - Creating Bucket: vol-1-76488/bucket-3-41726, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-02 03:41:17 INFO  RpcClient:425 - Creating Bucket: vol-2-11965/bucket-3-94598, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-02 03:41:17 INFO  RpcClient:425 - Creating Bucket: vol-3-33081/bucket-3-76587, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-02 03:41:17 INFO  RpcClient:425 - Creating Bucket: vol-4-56830/bucket-3-04844, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-02 03:41:17 INFO  RpcClient:425 - Creating Bucket: vol-0-61489/bucket-4-11410, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-02 03:41:17 INFO  RpcClient:425 - Creating Bucket: vol-1-76488/bucket-4-44778, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-02 03:41:17 INFO  RpcClient:425 - Creating Bucket: vol-2-11965/bucket-4-03039, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-02 03:41:17 INFO  RpcClient:425 - Creating Bucket: vol-3-33081/bucket-4-86997, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-02 03:41:17 INFO  RpcClient:425 - Creating Bucket: vol-4-56830/bucket-4-47154, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-02 03:41:17 WARN  MetricsSystemImpl:151 - ozone-freon metrics system already initialized!
 0.00% |?                                                                                                    |  0/125 Time: 0:00:01WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil (file:/opt/hadoop/share/ozone/lib/ratis-thirdparty-misc-0.2.0.jar) to field java.nio.Buffer.address
WARNING: Please consider reporting this to the maintainers of org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
 0.80% |?                                                                                                    |  1/125 Time: 0:00:02 16.80% |?????????????????                                                                                    |  21/125 Time: 0:00:03 44.00% |?????????????????????????????????????????????                                                        |  55/125 Time: 0:00:04 72.00% |?????????????????????????????????????????????????????????????????????????                            |  90/125 Time: 0:00:05 100.00% |?????????????????????????????????????????????????????????????????????????????????????????????????????|  125/125 Time: 0:00:06

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,087
Average Time spent in bucket creation: 00:00:00,079
Average Time spent in key creation: 00:00:00,985
Average Time spent in key write: 00:00:04,629
Total bytes written: 1280000
Total Execution time: 00:00:11,368
***************************************************</msg>
<status status="PASS" endtime="20190802 03:41:27.313" starttime="20190802 03:41:27.311"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190802 03:41:27.313" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190802 03:41:27.314" starttime="20190802 03:41:27.313"></status>
</kw>
<msg timestamp="20190802 03:41:27.314" level="INFO">${result} = 2019-08-02 03:41:15 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2019-08-02 03:41:15 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2019...</msg>
<status status="PASS" endtime="20190802 03:41:27.314" starttime="20190802 03:41:14.100"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20190802 03:41:27.316" starttime="20190802 03:41:27.316"></status>
</kw>
<status status="PASS" endtime="20190802 03:41:27.317" starttime="20190802 03:41:27.315"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20190802 03:41:27.318" starttime="20190802 03:41:27.317"></status>
</kw>
<status status="PASS" endtime="20190802 03:41:27.318" critical="yes" starttime="20190802 03:41:14.099"></status>
</test>
<test id="s1-s1-t2" name="Testing audit parser">
<kw name="Get Environment Variable" library="OperatingSystem">
<doc>Returns the value of an environment variable with the given name.</doc>
<arguments>
<arg>HADOOP_LOG_DIR</arg>
<arg>/var/log/hadoop</arg>
</arguments>
<assign>
<var>${logdir}</var>
</assign>
<msg timestamp="20190802 03:41:27.323" level="INFO">${logdir} = /var/log/hadoop</msg>
<status status="PASS" endtime="20190802 03:41:27.323" starttime="20190802 03:41:27.322"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ls -t "${logdir}" | grep om-audit | head -1</arg>
</arguments>
<assign>
<var>${logfile}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190802 03:41:27.326" level="INFO">Running command 'ls -t "/var/log/hadoop" | grep om-audit | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20190802 03:41:27.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20190802 03:41:27.338" level="INFO">${output} = om-audit-1af7a989b2ab.log</msg>
<status status="PASS" endtime="20190802 03:41:27.338" starttime="20190802 03:41:27.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190802 03:41:27.341" level="INFO">om-audit-1af7a989b2ab.log</msg>
<status status="PASS" endtime="20190802 03:41:27.341" starttime="20190802 03:41:27.339"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190802 03:41:27.342" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190802 03:41:27.342" starttime="20190802 03:41:27.341"></status>
</kw>
<msg timestamp="20190802 03:41:27.343" level="INFO">${logfile} = om-audit-1af7a989b2ab.log</msg>
<status status="PASS" endtime="20190802 03:41:27.343" starttime="20190802 03:41:27.323"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" load "${logdir}/${logfile}"</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190802 03:41:27.347" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" load "/var/log/hadoop/om-audit-1af7a989b2ab.log" 2&gt;&amp;1'.</msg>
<msg timestamp="20190802 03:41:37.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20190802 03:41:37.080" level="INFO">${output} = /var/log/hadoop/om-audit-1af7a989b2ab.log has been loaded successfully</msg>
<status status="PASS" endtime="20190802 03:41:37.080" starttime="20190802 03:41:27.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190802 03:41:37.082" level="INFO">/var/log/hadoop/om-audit-1af7a989b2ab.log has been loaded successfully</msg>
<status status="PASS" endtime="20190802 03:41:37.082" starttime="20190802 03:41:37.081"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190802 03:41:37.083" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190802 03:41:37.083" starttime="20190802 03:41:37.082"></status>
</kw>
<status status="PASS" endtime="20190802 03:41:37.084" starttime="20190802 03:41:27.344"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" template top5cmds</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190802 03:41:37.088" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" template top5cmds 2&gt;&amp;1'.</msg>
<msg timestamp="20190802 03:41:38.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20190802 03:41:38.013" level="INFO">${output} = ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190802 03:41:38.013" starttime="20190802 03:41:37.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190802 03:41:38.014" level="INFO">ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190802 03:41:38.015" starttime="20190802 03:41:38.014"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190802 03:41:38.015" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190802 03:41:38.015" starttime="20190802 03:41:38.015"></status>
</kw>
<msg timestamp="20190802 03:41:38.016" level="INFO">${result} = ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190802 03:41:38.016" starttime="20190802 03:41:37.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ALLOCATE_KEY</arg>
</arguments>
<status status="PASS" endtime="20190802 03:41:38.016" starttime="20190802 03:41:38.016"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" template top5users</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190802 03:41:38.019" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" template top5users 2&gt;&amp;1'.</msg>
<msg timestamp="20190802 03:41:38.872" level="INFO">${rc} = 0</msg>
<msg timestamp="20190802 03:41:38.872" level="INFO">${output} = hadoop	280	
</msg>
<status status="PASS" endtime="20190802 03:41:38.872" starttime="20190802 03:41:38.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190802 03:41:38.874" level="INFO">hadoop	280	
</msg>
<status status="PASS" endtime="20190802 03:41:38.874" starttime="20190802 03:41:38.873"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190802 03:41:38.875" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190802 03:41:38.875" starttime="20190802 03:41:38.875"></status>
</kw>
<msg timestamp="20190802 03:41:38.876" level="INFO">${result} = hadoop	280	
</msg>
<status status="PASS" endtime="20190802 03:41:38.876" starttime="20190802 03:41:38.017"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Set username</arg>
</arguments>
<status status="PASS" endtime="20190802 03:41:38.877" starttime="20190802 03:41:38.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${user}</arg>
</arguments>
<status status="PASS" endtime="20190802 03:41:38.878" starttime="20190802 03:41:38.878"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'"</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190802 03:41:38.882" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20190802 03:41:39.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20190802 03:41:39.755" level="INFO">${output} = 5	
</msg>
<status status="PASS" endtime="20190802 03:41:39.755" starttime="20190802 03:41:38.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190802 03:41:39.757" level="INFO">5	
</msg>
<status status="PASS" endtime="20190802 03:41:39.757" starttime="20190802 03:41:39.756"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190802 03:41:39.758" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190802 03:41:39.759" starttime="20190802 03:41:39.758"></status>
</kw>
<msg timestamp="20190802 03:41:39.759" level="INFO">${result} = 5	
</msg>
<status status="PASS" endtime="20190802 03:41:39.759" starttime="20190802 03:41:38.879"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190802 03:41:39.761" level="INFO">${result} = 5.0</msg>
<status status="PASS" endtime="20190802 03:41:39.761" starttime="20190802 03:41:39.760"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}&gt;${count}</arg>
</arguments>
<status status="PASS" endtime="20190802 03:41:39.762" starttime="20190802 03:41:39.762"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'"</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190802 03:41:39.766" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20190802 03:41:40.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20190802 03:41:40.660" level="INFO">${output} = 25	
</msg>
<status status="PASS" endtime="20190802 03:41:40.660" starttime="20190802 03:41:39.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190802 03:41:40.662" level="INFO">25	
</msg>
<status status="PASS" endtime="20190802 03:41:40.662" starttime="20190802 03:41:40.661"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190802 03:41:40.663" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190802 03:41:40.664" starttime="20190802 03:41:40.663"></status>
</kw>
<msg timestamp="20190802 03:41:40.664" level="INFO">${result} = 25	
</msg>
<status status="PASS" endtime="20190802 03:41:40.664" starttime="20190802 03:41:39.763"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190802 03:41:40.665" level="INFO">${result} = 25.0</msg>
<status status="PASS" endtime="20190802 03:41:40.665" starttime="20190802 03:41:40.665"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}&gt;${count}</arg>
</arguments>
<status status="PASS" endtime="20190802 03:41:40.667" starttime="20190802 03:41:40.666"></status>
</kw>
<status status="PASS" endtime="20190802 03:41:40.667" critical="yes" starttime="20190802 03:41:27.319"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20190802 03:41:40.668" starttime="20190802 03:41:14.075"></status>
</suite>
<status status="PASS" endtime="20190802 03:41:40.672" starttime="20190802 03:41:14.048"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-auditparser" pass="2">ozone-auditparser</stat>
<stat fail="0" id="s1-s1" name="Auditparser" pass="2">ozone-auditparser.Auditparser</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
