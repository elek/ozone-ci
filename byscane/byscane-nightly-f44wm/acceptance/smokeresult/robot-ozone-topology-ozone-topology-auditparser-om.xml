<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20190811 03:09:28.723" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/auditparser" id="s1" name="ozone-topology-auditparser">
<suite source="/opt/hadoop/smoketest/auditparser/auditparser.robot" id="s1-s1" name="Auditparser">
<test id="s1-s1-t1" name="Initiating freon to generate data">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190811 03:09:28.780" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 2&gt;&amp;1'.</msg>
<msg timestamp="20190811 03:09:41.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20190811 03:09:41.928" level="INFO">${output} = 
 0.00% |?                                                                                                    |  0/125 Time: 0:00:00 0.00% |?                                                         ...</msg>
<status status="PASS" endtime="20190811 03:09:41.928" starttime="20190811 03:09:28.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190811 03:09:41.930" level="INFO">
 0.00% |?                                                                                                    |  0/125 Time: 0:00:00 0.00% |?                                                                                                    |  0/125 Time: 0:00:01WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil (file:/opt/hadoop/share/ozone/lib/ratis-thirdparty-misc-0.2.0.jar) to field java.nio.Buffer.address
WARNING: Please consider reporting this to the maintainers of org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
 0.00% |?                                                                                                    |  0/125 Time: 0:00:02 0.00% |?                                                                                                    |  0/125 Time: 0:00:03 0.00% |?                                                                                                    |  0/125 Time: 0:00:04 4.00% |?????                                                                                                |  5/125 Time: 0:00:05 21.60% |??????????????????????                                                                               |  27/125 Time: 0:00:06 43.20% |????????????????????????????????????????????                                                         |  54/125 Time: 0:00:07 65.60% |??????????????????????????????????????????????????????????????????                                   |  82/125 Time: 0:00:08 92.80% |?????????????????????????????????????????????????????????????????????????????????????????????        |  116/125 Time: 0:00:09 100.00% |?????????????????????????????????????????????????????????????????????????????????????????????????????|  125/125 Time: 0:00:10

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,119
Average Time spent in bucket creation: 00:00:00,153
Average Time spent in key creation: 00:00:01,247
Average Time spent in key write: 00:00:07,634
Total bytes written: 1280000
Total Execution time: 00:00:11,372
***************************************************</msg>
<status status="PASS" endtime="20190811 03:09:41.931" starttime="20190811 03:09:41.929"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190811 03:09:41.932" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190811 03:09:41.932" starttime="20190811 03:09:41.931"></status>
</kw>
<msg timestamp="20190811 03:09:41.933" level="INFO">${result} = 
 0.00% |?                                                                                                    |  0/125 Time: 0:00:00 0.00% |?                                                         ...</msg>
<status status="PASS" endtime="20190811 03:09:41.933" starttime="20190811 03:09:28.777"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20190811 03:09:41.939" starttime="20190811 03:09:41.938"></status>
</kw>
<status status="PASS" endtime="20190811 03:09:41.939" starttime="20190811 03:09:41.933"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20190811 03:09:41.940" starttime="20190811 03:09:41.939"></status>
</kw>
<status status="PASS" endtime="20190811 03:09:41.940" critical="yes" starttime="20190811 03:09:28.776"></status>
</test>
<test id="s1-s1-t2" name="Testing audit parser">
<kw name="Get Environment Variable" library="OperatingSystem">
<doc>Returns the value of an environment variable with the given name.</doc>
<arguments>
<arg>HADOOP_LOG_DIR</arg>
<arg>/var/log/hadoop</arg>
</arguments>
<assign>
<var>${logdir}</var>
</assign>
<msg timestamp="20190811 03:09:41.943" level="INFO">${logdir} = /var/log/hadoop</msg>
<status status="PASS" endtime="20190811 03:09:41.943" starttime="20190811 03:09:41.942"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ls -t "${logdir}" | grep om-audit | head -1</arg>
</arguments>
<assign>
<var>${logfile}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190811 03:09:41.946" level="INFO">Running command 'ls -t "/var/log/hadoop" | grep om-audit | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20190811 03:09:41.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20190811 03:09:41.959" level="INFO">${output} = om-audit-9ecefa1f27fb.log</msg>
<status status="PASS" endtime="20190811 03:09:41.959" starttime="20190811 03:09:41.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190811 03:09:41.961" level="INFO">om-audit-9ecefa1f27fb.log</msg>
<status status="PASS" endtime="20190811 03:09:41.961" starttime="20190811 03:09:41.960"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190811 03:09:41.962" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190811 03:09:41.962" starttime="20190811 03:09:41.961"></status>
</kw>
<msg timestamp="20190811 03:09:41.963" level="INFO">${logfile} = om-audit-9ecefa1f27fb.log</msg>
<status status="PASS" endtime="20190811 03:09:41.963" starttime="20190811 03:09:41.943"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" load "${logdir}/${logfile}"</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190811 03:09:41.967" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" load "/var/log/hadoop/om-audit-9ecefa1f27fb.log" 2&gt;&amp;1'.</msg>
<msg timestamp="20190811 03:09:55.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20190811 03:09:55.732" level="INFO">${output} = /var/log/hadoop/om-audit-9ecefa1f27fb.log has been loaded successfully</msg>
<status status="PASS" endtime="20190811 03:09:55.732" starttime="20190811 03:09:41.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190811 03:09:55.734" level="INFO">/var/log/hadoop/om-audit-9ecefa1f27fb.log has been loaded successfully</msg>
<status status="PASS" endtime="20190811 03:09:55.734" starttime="20190811 03:09:55.733"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190811 03:09:55.735" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190811 03:09:55.736" starttime="20190811 03:09:55.735"></status>
</kw>
<status status="PASS" endtime="20190811 03:09:55.736" starttime="20190811 03:09:41.963"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" template top5cmds</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190811 03:09:55.740" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" template top5cmds 2&gt;&amp;1'.</msg>
<msg timestamp="20190811 03:09:56.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20190811 03:09:56.720" level="INFO">${output} = ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190811 03:09:56.720" starttime="20190811 03:09:55.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190811 03:09:56.722" level="INFO">ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190811 03:09:56.722" starttime="20190811 03:09:56.721"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190811 03:09:56.723" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190811 03:09:56.723" starttime="20190811 03:09:56.722"></status>
</kw>
<msg timestamp="20190811 03:09:56.724" level="INFO">${result} = ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190811 03:09:56.724" starttime="20190811 03:09:55.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ALLOCATE_KEY</arg>
</arguments>
<status status="PASS" endtime="20190811 03:09:56.725" starttime="20190811 03:09:56.724"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" template top5users</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190811 03:09:56.728" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" template top5users 2&gt;&amp;1'.</msg>
<msg timestamp="20190811 03:09:57.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20190811 03:09:57.687" level="INFO">${output} = hadoop	280	
</msg>
<status status="PASS" endtime="20190811 03:09:57.687" starttime="20190811 03:09:56.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190811 03:09:57.689" level="INFO">hadoop	280	
</msg>
<status status="PASS" endtime="20190811 03:09:57.689" starttime="20190811 03:09:57.688"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190811 03:09:57.690" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190811 03:09:57.691" starttime="20190811 03:09:57.690"></status>
</kw>
<msg timestamp="20190811 03:09:57.691" level="INFO">${result} = hadoop	280	
</msg>
<status status="PASS" endtime="20190811 03:09:57.691" starttime="20190811 03:09:56.725"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Set username</arg>
</arguments>
<status status="PASS" endtime="20190811 03:09:57.693" starttime="20190811 03:09:57.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${user}</arg>
</arguments>
<status status="PASS" endtime="20190811 03:09:57.694" starttime="20190811 03:09:57.693"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'"</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190811 03:09:57.698" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20190811 03:09:58.572" level="INFO">${rc} = 0</msg>
<msg timestamp="20190811 03:09:58.572" level="INFO">${output} = 5	
</msg>
<status status="PASS" endtime="20190811 03:09:58.572" starttime="20190811 03:09:57.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190811 03:09:58.574" level="INFO">5	
</msg>
<status status="PASS" endtime="20190811 03:09:58.574" starttime="20190811 03:09:58.573"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190811 03:09:58.575" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190811 03:09:58.576" starttime="20190811 03:09:58.575"></status>
</kw>
<msg timestamp="20190811 03:09:58.576" level="INFO">${result} = 5	
</msg>
<status status="PASS" endtime="20190811 03:09:58.576" starttime="20190811 03:09:57.694"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190811 03:09:58.577" level="INFO">${result} = 5.0</msg>
<status status="PASS" endtime="20190811 03:09:58.578" starttime="20190811 03:09:58.577"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}&gt;${count}</arg>
</arguments>
<status status="PASS" endtime="20190811 03:09:58.579" starttime="20190811 03:09:58.578"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'"</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190811 03:09:58.582" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20190811 03:09:59.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20190811 03:09:59.484" level="INFO">${output} = 25	
</msg>
<status status="PASS" endtime="20190811 03:09:59.485" starttime="20190811 03:09:58.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190811 03:09:59.487" level="INFO">25	
</msg>
<status status="PASS" endtime="20190811 03:09:59.487" starttime="20190811 03:09:59.485"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190811 03:09:59.488" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190811 03:09:59.488" starttime="20190811 03:09:59.487"></status>
</kw>
<msg timestamp="20190811 03:09:59.489" level="INFO">${result} = 25	
</msg>
<status status="PASS" endtime="20190811 03:09:59.489" starttime="20190811 03:09:58.579"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190811 03:09:59.490" level="INFO">${result} = 25.0</msg>
<status status="PASS" endtime="20190811 03:09:59.490" starttime="20190811 03:09:59.489"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}&gt;${count}</arg>
</arguments>
<status status="PASS" endtime="20190811 03:09:59.491" starttime="20190811 03:09:59.490"></status>
</kw>
<status status="PASS" endtime="20190811 03:09:59.492" critical="yes" starttime="20190811 03:09:41.941"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20190811 03:09:59.493" starttime="20190811 03:09:28.748"></status>
</suite>
<status status="PASS" endtime="20190811 03:09:59.497" starttime="20190811 03:09:28.724"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-topology-auditparser" pass="2">ozone-topology-auditparser</stat>
<stat fail="0" id="s1-s1" name="Auditparser" pass="2">ozone-topology-auditparser.Auditparser</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
