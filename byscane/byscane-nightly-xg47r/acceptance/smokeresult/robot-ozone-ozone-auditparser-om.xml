<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20190730 15:05:43.652" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/auditparser" id="s1" name="ozone-auditparser">
<suite source="/opt/hadoop/smoketest/auditparser/auditparser.robot" id="s1-s1" name="Auditparser">
<test id="s1-s1-t1" name="Initiating freon to generate data">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190730 15:05:43.704" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 2&gt;&amp;1'.</msg>
<msg timestamp="20190730 15:05:56.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20190730 15:05:56.894" level="INFO">${output} = 2019-07-30 15:05:44 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2019-07-30 15:05:44 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2019...</msg>
<status status="PASS" endtime="20190730 15:05:56.894" starttime="20190730 15:05:43.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190730 15:05:56.896" level="INFO">2019-07-30 15:05:44 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2019-07-30 15:05:44 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2019-07-30 15:05:44 INFO  MetricsSystemImpl:191 - ozone-freon metrics system started
2019-07-30 15:05:46 INFO  RandomKeyGenerator:278 - Number of Threads: 1
2019-07-30 15:05:46 INFO  RandomKeyGenerator:283 - Number of Volumes: 5.
2019-07-30 15:05:46 INFO  RandomKeyGenerator:284 - Number of Buckets per Volume: 5.
2019-07-30 15:05:46 INFO  RandomKeyGenerator:285 - Number of Keys per Bucket: 5.
2019-07-30 15:05:46 INFO  RandomKeyGenerator:286 - Key size: 10240 bytes
2019-07-30 15:05:46 INFO  RandomKeyGenerator:287 - Buffer size: 4096 bytes
2019-07-30 15:05:46 INFO  RandomKeyGenerator:307 - Starting progress bar Thread.

 0.00% |?                                                                                                    |  0/125 Time: 0:00:002019-07-30 15:05:46 INFO  RpcClient:288 - Creating Volume: vol-0-59637, with hadoop as owner.
2019-07-30 15:05:46 INFO  RpcClient:288 - Creating Volume: vol-1-86234, with hadoop as owner.
2019-07-30 15:05:46 INFO  RpcClient:288 - Creating Volume: vol-2-99939, with hadoop as owner.
2019-07-30 15:05:46 INFO  RpcClient:288 - Creating Volume: vol-3-54466, with hadoop as owner.
2019-07-30 15:05:46 INFO  RpcClient:288 - Creating Volume: vol-4-76614, with hadoop as owner.
2019-07-30 15:05:46 INFO  RpcClient:425 - Creating Bucket: vol-0-59637/bucket-0-48385, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 15:05:46 INFO  RpcClient:425 - Creating Bucket: vol-1-86234/bucket-0-11523, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 15:05:46 INFO  RpcClient:425 - Creating Bucket: vol-2-99939/bucket-0-18666, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 15:05:46 INFO  RpcClient:425 - Creating Bucket: vol-3-54466/bucket-0-63017, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 15:05:46 INFO  RpcClient:425 - Creating Bucket: vol-4-76614/bucket-0-17972, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 15:05:46 INFO  RpcClient:425 - Creating Bucket: vol-0-59637/bucket-1-49296, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 15:05:46 INFO  RpcClient:425 - Creating Bucket: vol-1-86234/bucket-1-25235, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 15:05:46 INFO  RpcClient:425 - Creating Bucket: vol-2-99939/bucket-1-02647, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 15:05:46 INFO  RpcClient:425 - Creating Bucket: vol-3-54466/bucket-1-76131, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 15:05:46 INFO  RpcClient:425 - Creating Bucket: vol-4-76614/bucket-1-63757, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 15:05:46 INFO  RpcClient:425 - Creating Bucket: vol-0-59637/bucket-2-72526, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 15:05:46 INFO  RpcClient:425 - Creating Bucket: vol-1-86234/bucket-2-95949, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 15:05:46 INFO  RpcClient:425 - Creating Bucket: vol-2-99939/bucket-2-31309, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 15:05:46 INFO  RpcClient:425 - Creating Bucket: vol-3-54466/bucket-2-87628, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 15:05:46 INFO  RpcClient:425 - Creating Bucket: vol-4-76614/bucket-2-37565, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 15:05:46 INFO  RpcClient:425 - Creating Bucket: vol-0-59637/bucket-3-93432, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 15:05:46 INFO  RpcClient:425 - Creating Bucket: vol-1-86234/bucket-3-16590, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 15:05:46 INFO  RpcClient:425 - Creating Bucket: vol-2-99939/bucket-3-65544, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 15:05:46 INFO  RpcClient:425 - Creating Bucket: vol-3-54466/bucket-3-69517, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 15:05:46 INFO  RpcClient:425 - Creating Bucket: vol-4-76614/bucket-3-95549, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 15:05:46 INFO  RpcClient:425 - Creating Bucket: vol-0-59637/bucket-4-23541, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 15:05:46 INFO  RpcClient:425 - Creating Bucket: vol-1-86234/bucket-4-63957, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 15:05:46 INFO  RpcClient:425 - Creating Bucket: vol-2-99939/bucket-4-81493, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 15:05:46 INFO  RpcClient:425 - Creating Bucket: vol-3-54466/bucket-4-93699, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 15:05:46 INFO  RpcClient:425 - Creating Bucket: vol-4-76614/bucket-4-15541, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 15:05:47 WARN  MetricsSystemImpl:151 - ozone-freon metrics system already initialized!
 0.00% |?                                                                                                    |  0/125 Time: 0:00:01WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil (file:/opt/hadoop/share/ozone/lib/ratis-thirdparty-misc-0.2.0.jar) to field java.nio.Buffer.address
WARNING: Please consider reporting this to the maintainers of org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
 0.80% |?                                                                                                    |  1/125 Time: 0:00:02 15.20% |????????????????                                                                                     |  19/125 Time: 0:00:03 38.40% |???????????????????????????????????????                                                              |  48/125 Time: 0:00:04 69.60% |??????????????????????????????????????????????????????????????????????                               |  87/125 Time: 0:00:05 100.00% |?????????????????????????????????????????????????????????????????????????????????????????????????????|  125/125 Time: 0:00:06

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,116
Average Time spent in bucket creation: 00:00:00,101
Average Time spent in key creation: 00:00:01,014
Average Time spent in key write: 00:00:04,636
Total bytes written: 1280000
Total Execution time: 00:00:11,443
***************************************************</msg>
<status status="PASS" endtime="20190730 15:05:56.897" starttime="20190730 15:05:56.895"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190730 15:05:56.897" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190730 15:05:56.898" starttime="20190730 15:05:56.897"></status>
</kw>
<msg timestamp="20190730 15:05:56.898" level="INFO">${result} = 2019-07-30 15:05:44 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2019-07-30 15:05:44 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2019...</msg>
<status status="PASS" endtime="20190730 15:05:56.898" starttime="20190730 15:05:43.702"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20190730 15:05:56.900" starttime="20190730 15:05:56.900"></status>
</kw>
<status status="PASS" endtime="20190730 15:05:56.900" starttime="20190730 15:05:56.899"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20190730 15:05:56.901" starttime="20190730 15:05:56.901"></status>
</kw>
<status status="PASS" endtime="20190730 15:05:56.901" critical="yes" starttime="20190730 15:05:43.701"></status>
</test>
<test id="s1-s1-t2" name="Testing audit parser">
<kw name="Get Environment Variable" library="OperatingSystem">
<doc>Returns the value of an environment variable with the given name.</doc>
<arguments>
<arg>HADOOP_LOG_DIR</arg>
<arg>/var/log/hadoop</arg>
</arguments>
<assign>
<var>${logdir}</var>
</assign>
<msg timestamp="20190730 15:05:56.906" level="INFO">${logdir} = /var/log/hadoop</msg>
<status status="PASS" endtime="20190730 15:05:56.906" starttime="20190730 15:05:56.906"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ls -t "${logdir}" | grep om-audit | head -1</arg>
</arguments>
<assign>
<var>${logfile}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190730 15:05:56.909" level="INFO">Running command 'ls -t "/var/log/hadoop" | grep om-audit | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20190730 15:05:56.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20190730 15:05:56.920" level="INFO">${output} = om-audit-1b23d7494b9d.log</msg>
<status status="PASS" endtime="20190730 15:05:56.920" starttime="20190730 15:05:56.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190730 15:05:56.921" level="INFO">om-audit-1b23d7494b9d.log</msg>
<status status="PASS" endtime="20190730 15:05:56.921" starttime="20190730 15:05:56.920"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190730 15:05:56.922" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190730 15:05:56.922" starttime="20190730 15:05:56.921"></status>
</kw>
<msg timestamp="20190730 15:05:56.922" level="INFO">${logfile} = om-audit-1b23d7494b9d.log</msg>
<status status="PASS" endtime="20190730 15:05:56.922" starttime="20190730 15:05:56.907"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" load "${logdir}/${logfile}"</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190730 15:05:56.925" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" load "/var/log/hadoop/om-audit-1b23d7494b9d.log" 2&gt;&amp;1'.</msg>
<msg timestamp="20190730 15:06:03.634" level="INFO">${rc} = 0</msg>
<msg timestamp="20190730 15:06:03.634" level="INFO">${output} = /var/log/hadoop/om-audit-1b23d7494b9d.log has been loaded successfully</msg>
<status status="PASS" endtime="20190730 15:06:03.634" starttime="20190730 15:05:56.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190730 15:06:03.636" level="INFO">/var/log/hadoop/om-audit-1b23d7494b9d.log has been loaded successfully</msg>
<status status="PASS" endtime="20190730 15:06:03.636" starttime="20190730 15:06:03.635"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190730 15:06:03.637" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190730 15:06:03.637" starttime="20190730 15:06:03.636"></status>
</kw>
<status status="PASS" endtime="20190730 15:06:03.638" starttime="20190730 15:05:56.923"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" template top5cmds</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190730 15:06:03.642" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" template top5cmds 2&gt;&amp;1'.</msg>
<msg timestamp="20190730 15:06:04.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20190730 15:06:04.560" level="INFO">${output} = ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190730 15:06:04.560" starttime="20190730 15:06:03.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190730 15:06:04.561" level="INFO">ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190730 15:06:04.561" starttime="20190730 15:06:04.561"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190730 15:06:04.562" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190730 15:06:04.562" starttime="20190730 15:06:04.562"></status>
</kw>
<msg timestamp="20190730 15:06:04.562" level="INFO">${result} = ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190730 15:06:04.562" starttime="20190730 15:06:03.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ALLOCATE_KEY</arg>
</arguments>
<status status="PASS" endtime="20190730 15:06:04.563" starttime="20190730 15:06:04.563"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" template top5users</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190730 15:06:04.565" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" template top5users 2&gt;&amp;1'.</msg>
<msg timestamp="20190730 15:06:05.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20190730 15:06:05.477" level="INFO">${output} = hadoop	280	
</msg>
<status status="PASS" endtime="20190730 15:06:05.477" starttime="20190730 15:06:04.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190730 15:06:05.479" level="INFO">hadoop	280	
</msg>
<status status="PASS" endtime="20190730 15:06:05.479" starttime="20190730 15:06:05.478"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190730 15:06:05.479" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190730 15:06:05.480" starttime="20190730 15:06:05.479"></status>
</kw>
<msg timestamp="20190730 15:06:05.480" level="INFO">${result} = hadoop	280	
</msg>
<status status="PASS" endtime="20190730 15:06:05.480" starttime="20190730 15:06:04.563"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Set username</arg>
</arguments>
<status status="PASS" endtime="20190730 15:06:05.481" starttime="20190730 15:06:05.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${user}</arg>
</arguments>
<status status="PASS" endtime="20190730 15:06:05.481" starttime="20190730 15:06:05.481"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'"</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190730 15:06:05.484" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20190730 15:06:06.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20190730 15:06:06.403" level="INFO">${output} = 5	
</msg>
<status status="PASS" endtime="20190730 15:06:06.403" starttime="20190730 15:06:05.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190730 15:06:06.405" level="INFO">5	
</msg>
<status status="PASS" endtime="20190730 15:06:06.405" starttime="20190730 15:06:06.404"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190730 15:06:06.406" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190730 15:06:06.406" starttime="20190730 15:06:06.405"></status>
</kw>
<msg timestamp="20190730 15:06:06.407" level="INFO">${result} = 5	
</msg>
<status status="PASS" endtime="20190730 15:06:06.407" starttime="20190730 15:06:05.482"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190730 15:06:06.408" level="INFO">${result} = 5.0</msg>
<status status="PASS" endtime="20190730 15:06:06.409" starttime="20190730 15:06:06.407"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}&gt;${count}</arg>
</arguments>
<status status="PASS" endtime="20190730 15:06:06.410" starttime="20190730 15:06:06.409"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'"</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190730 15:06:06.413" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20190730 15:06:07.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20190730 15:06:07.366" level="INFO">${output} = 25	
</msg>
<status status="PASS" endtime="20190730 15:06:07.366" starttime="20190730 15:06:06.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190730 15:06:07.367" level="INFO">25	
</msg>
<status status="PASS" endtime="20190730 15:06:07.367" starttime="20190730 15:06:07.366"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190730 15:06:07.368" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190730 15:06:07.368" starttime="20190730 15:06:07.368"></status>
</kw>
<msg timestamp="20190730 15:06:07.369" level="INFO">${result} = 25	
</msg>
<status status="PASS" endtime="20190730 15:06:07.369" starttime="20190730 15:06:06.410"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190730 15:06:07.370" level="INFO">${result} = 25.0</msg>
<status status="PASS" endtime="20190730 15:06:07.370" starttime="20190730 15:06:07.369"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}&gt;${count}</arg>
</arguments>
<status status="PASS" endtime="20190730 15:06:07.371" starttime="20190730 15:06:07.370"></status>
</kw>
<status status="PASS" endtime="20190730 15:06:07.372" critical="yes" starttime="20190730 15:05:56.902"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20190730 15:06:07.373" starttime="20190730 15:05:43.677"></status>
</suite>
<status status="PASS" endtime="20190730 15:06:07.376" starttime="20190730 15:05:43.653"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-auditparser" pass="2">ozone-auditparser</stat>
<stat fail="0" id="s1-s1" name="Auditparser" pass="2">ozone-auditparser.Auditparser</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
