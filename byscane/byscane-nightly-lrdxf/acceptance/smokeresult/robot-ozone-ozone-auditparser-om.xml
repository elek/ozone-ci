<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20190730 11:56:49.455" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/auditparser" id="s1" name="ozone-auditparser">
<suite source="/opt/hadoop/smoketest/auditparser/auditparser.robot" id="s1-s1" name="Auditparser">
<test id="s1-s1-t1" name="Initiating freon to generate data">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190730 11:56:49.510" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 2&gt;&amp;1'.</msg>
<msg timestamp="20190730 11:57:02.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20190730 11:57:02.674" level="INFO">${output} = 2019-07-30 11:56:50 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2019-07-30 11:56:50 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2019...</msg>
<status status="PASS" endtime="20190730 11:57:02.674" starttime="20190730 11:56:49.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190730 11:57:02.676" level="INFO">2019-07-30 11:56:50 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2019-07-30 11:56:50 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2019-07-30 11:56:50 INFO  MetricsSystemImpl:191 - ozone-freon metrics system started
2019-07-30 11:56:52 INFO  RandomKeyGenerator:278 - Number of Threads: 1
2019-07-30 11:56:52 INFO  RandomKeyGenerator:283 - Number of Volumes: 5.
2019-07-30 11:56:52 INFO  RandomKeyGenerator:284 - Number of Buckets per Volume: 5.
2019-07-30 11:56:52 INFO  RandomKeyGenerator:285 - Number of Keys per Bucket: 5.
2019-07-30 11:56:52 INFO  RandomKeyGenerator:286 - Key size: 10240 bytes
2019-07-30 11:56:52 INFO  RandomKeyGenerator:287 - Buffer size: 4096 bytes
2019-07-30 11:56:52 INFO  RandomKeyGenerator:307 - Starting progress bar Thread.

 0.00% |?                                                                                                    |  0/125 Time: 0:00:002019-07-30 11:56:52 INFO  RpcClient:288 - Creating Volume: vol-0-13616, with hadoop as owner.
2019-07-30 11:56:52 INFO  RpcClient:288 - Creating Volume: vol-1-00125, with hadoop as owner.
2019-07-30 11:56:52 INFO  RpcClient:288 - Creating Volume: vol-2-08820, with hadoop as owner.
2019-07-30 11:56:52 INFO  RpcClient:288 - Creating Volume: vol-3-99693, with hadoop as owner.
2019-07-30 11:56:52 INFO  RpcClient:288 - Creating Volume: vol-4-65081, with hadoop as owner.
2019-07-30 11:56:52 INFO  RpcClient:425 - Creating Bucket: vol-0-13616/bucket-0-57284, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 11:56:52 INFO  RpcClient:425 - Creating Bucket: vol-1-00125/bucket-0-74963, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 11:56:52 INFO  RpcClient:425 - Creating Bucket: vol-2-08820/bucket-0-23072, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 11:56:52 INFO  RpcClient:425 - Creating Bucket: vol-3-99693/bucket-0-09312, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 11:56:52 INFO  RpcClient:425 - Creating Bucket: vol-4-65081/bucket-0-24291, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 11:56:52 INFO  RpcClient:425 - Creating Bucket: vol-0-13616/bucket-1-71609, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 11:56:52 INFO  RpcClient:425 - Creating Bucket: vol-1-00125/bucket-1-42179, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 11:56:52 INFO  RpcClient:425 - Creating Bucket: vol-2-08820/bucket-1-57824, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 11:56:52 INFO  RpcClient:425 - Creating Bucket: vol-3-99693/bucket-1-50681, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 11:56:52 INFO  RpcClient:425 - Creating Bucket: vol-4-65081/bucket-1-05809, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 11:56:52 INFO  RpcClient:425 - Creating Bucket: vol-0-13616/bucket-2-19231, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 11:56:52 INFO  RpcClient:425 - Creating Bucket: vol-1-00125/bucket-2-49603, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 11:56:52 INFO  RpcClient:425 - Creating Bucket: vol-2-08820/bucket-2-14936, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 11:56:52 INFO  RpcClient:425 - Creating Bucket: vol-3-99693/bucket-2-02100, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 11:56:52 INFO  RpcClient:425 - Creating Bucket: vol-4-65081/bucket-2-94192, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 11:56:52 INFO  RpcClient:425 - Creating Bucket: vol-0-13616/bucket-3-89575, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 11:56:52 INFO  RpcClient:425 - Creating Bucket: vol-1-00125/bucket-3-52278, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 11:56:52 INFO  RpcClient:425 - Creating Bucket: vol-2-08820/bucket-3-10002, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 11:56:52 INFO  RpcClient:425 - Creating Bucket: vol-3-99693/bucket-3-37587, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 11:56:52 INFO  RpcClient:425 - Creating Bucket: vol-4-65081/bucket-3-56766, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 11:56:52 INFO  RpcClient:425 - Creating Bucket: vol-0-13616/bucket-4-66308, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 11:56:52 INFO  RpcClient:425 - Creating Bucket: vol-1-00125/bucket-4-52171, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 11:56:52 INFO  RpcClient:425 - Creating Bucket: vol-2-08820/bucket-4-60540, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 11:56:52 INFO  RpcClient:425 - Creating Bucket: vol-3-99693/bucket-4-86831, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 11:56:52 INFO  RpcClient:425 - Creating Bucket: vol-4-65081/bucket-4-58575, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 11:56:53 WARN  MetricsSystemImpl:151 - ozone-freon metrics system already initialized!
 0.00% |?                                                                                                    |  0/125 Time: 0:00:01WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil (file:/opt/hadoop/share/ozone/lib/ratis-thirdparty-misc-0.2.0.jar) to field java.nio.Buffer.address
WARNING: Please consider reporting this to the maintainers of org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
 0.80% |?                                                                                                    |  1/125 Time: 0:00:02 19.20% |????????????????????                                                                                 |  24/125 Time: 0:00:03 40.80% |?????????????????????????????????????????                                                            |  51/125 Time: 0:00:04 72.80% |?????????????????????????????????????????????????????????????????????????                            |  91/125 Time: 0:00:05 100.00% |?????????????????????????????????????????????????????????????????????????????????????????????????????|  125/125 Time: 0:00:06

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,092
Average Time spent in bucket creation: 00:00:00,095
Average Time spent in key creation: 00:00:00,992
Average Time spent in key write: 00:00:04,636
Total bytes written: 1280000
Total Execution time: 00:00:11,333
***************************************************</msg>
<status status="PASS" endtime="20190730 11:57:02.676" starttime="20190730 11:57:02.675"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190730 11:57:02.677" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190730 11:57:02.677" starttime="20190730 11:57:02.677"></status>
</kw>
<msg timestamp="20190730 11:57:02.678" level="INFO">${result} = 2019-07-30 11:56:50 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2019-07-30 11:56:50 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2019...</msg>
<status status="PASS" endtime="20190730 11:57:02.678" starttime="20190730 11:56:49.508"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20190730 11:57:02.680" starttime="20190730 11:57:02.680"></status>
</kw>
<status status="PASS" endtime="20190730 11:57:02.680" starttime="20190730 11:57:02.679"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20190730 11:57:02.681" starttime="20190730 11:57:02.681"></status>
</kw>
<status status="PASS" endtime="20190730 11:57:02.681" critical="yes" starttime="20190730 11:56:49.507"></status>
</test>
<test id="s1-s1-t2" name="Testing audit parser">
<kw name="Get Environment Variable" library="OperatingSystem">
<doc>Returns the value of an environment variable with the given name.</doc>
<arguments>
<arg>HADOOP_LOG_DIR</arg>
<arg>/var/log/hadoop</arg>
</arguments>
<assign>
<var>${logdir}</var>
</assign>
<msg timestamp="20190730 11:57:02.686" level="INFO">${logdir} = /var/log/hadoop</msg>
<status status="PASS" endtime="20190730 11:57:02.686" starttime="20190730 11:57:02.686"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ls -t "${logdir}" | grep om-audit | head -1</arg>
</arguments>
<assign>
<var>${logfile}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190730 11:57:02.690" level="INFO">Running command 'ls -t "/var/log/hadoop" | grep om-audit | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20190730 11:57:02.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20190730 11:57:02.700" level="INFO">${output} = om-audit-da4e619eb084.log</msg>
<status status="PASS" endtime="20190730 11:57:02.700" starttime="20190730 11:57:02.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190730 11:57:02.701" level="INFO">om-audit-da4e619eb084.log</msg>
<status status="PASS" endtime="20190730 11:57:02.702" starttime="20190730 11:57:02.701"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190730 11:57:02.702" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190730 11:57:02.703" starttime="20190730 11:57:02.702"></status>
</kw>
<msg timestamp="20190730 11:57:02.703" level="INFO">${logfile} = om-audit-da4e619eb084.log</msg>
<status status="PASS" endtime="20190730 11:57:02.703" starttime="20190730 11:57:02.687"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" load "${logdir}/${logfile}"</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190730 11:57:02.706" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" load "/var/log/hadoop/om-audit-da4e619eb084.log" 2&gt;&amp;1'.</msg>
<msg timestamp="20190730 11:57:08.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20190730 11:57:08.112" level="INFO">${output} = /var/log/hadoop/om-audit-da4e619eb084.log has been loaded successfully</msg>
<status status="PASS" endtime="20190730 11:57:08.112" starttime="20190730 11:57:02.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190730 11:57:08.113" level="INFO">/var/log/hadoop/om-audit-da4e619eb084.log has been loaded successfully</msg>
<status status="PASS" endtime="20190730 11:57:08.113" starttime="20190730 11:57:08.112"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190730 11:57:08.114" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190730 11:57:08.114" starttime="20190730 11:57:08.113"></status>
</kw>
<status status="PASS" endtime="20190730 11:57:08.114" starttime="20190730 11:57:02.703"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" template top5cmds</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190730 11:57:08.117" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" template top5cmds 2&gt;&amp;1'.</msg>
<msg timestamp="20190730 11:57:08.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20190730 11:57:08.945" level="INFO">${output} = ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190730 11:57:08.945" starttime="20190730 11:57:08.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190730 11:57:08.946" level="INFO">ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190730 11:57:08.947" starttime="20190730 11:57:08.946"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190730 11:57:08.947" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190730 11:57:08.947" starttime="20190730 11:57:08.947"></status>
</kw>
<msg timestamp="20190730 11:57:08.948" level="INFO">${result} = ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190730 11:57:08.948" starttime="20190730 11:57:08.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ALLOCATE_KEY</arg>
</arguments>
<status status="PASS" endtime="20190730 11:57:08.948" starttime="20190730 11:57:08.948"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" template top5users</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190730 11:57:08.951" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" template top5users 2&gt;&amp;1'.</msg>
<msg timestamp="20190730 11:57:09.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20190730 11:57:09.801" level="INFO">${output} = hadoop	280	
</msg>
<status status="PASS" endtime="20190730 11:57:09.802" starttime="20190730 11:57:08.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190730 11:57:09.803" level="INFO">hadoop	280	
</msg>
<status status="PASS" endtime="20190730 11:57:09.803" starttime="20190730 11:57:09.802"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190730 11:57:09.804" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190730 11:57:09.804" starttime="20190730 11:57:09.803"></status>
</kw>
<msg timestamp="20190730 11:57:09.804" level="INFO">${result} = hadoop	280	
</msg>
<status status="PASS" endtime="20190730 11:57:09.804" starttime="20190730 11:57:08.949"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Set username</arg>
</arguments>
<status status="PASS" endtime="20190730 11:57:09.805" starttime="20190730 11:57:09.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${user}</arg>
</arguments>
<status status="PASS" endtime="20190730 11:57:09.806" starttime="20190730 11:57:09.806"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'"</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190730 11:57:09.809" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20190730 11:57:10.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20190730 11:57:10.649" level="INFO">${output} = 5	
</msg>
<status status="PASS" endtime="20190730 11:57:10.649" starttime="20190730 11:57:09.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190730 11:57:10.651" level="INFO">5	
</msg>
<status status="PASS" endtime="20190730 11:57:10.651" starttime="20190730 11:57:10.650"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190730 11:57:10.652" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190730 11:57:10.652" starttime="20190730 11:57:10.652"></status>
</kw>
<msg timestamp="20190730 11:57:10.653" level="INFO">${result} = 5	
</msg>
<status status="PASS" endtime="20190730 11:57:10.653" starttime="20190730 11:57:09.806"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190730 11:57:10.655" level="INFO">${result} = 5.0</msg>
<status status="PASS" endtime="20190730 11:57:10.655" starttime="20190730 11:57:10.653"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}&gt;${count}</arg>
</arguments>
<status status="PASS" endtime="20190730 11:57:10.656" starttime="20190730 11:57:10.655"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'"</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190730 11:57:10.660" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20190730 11:57:11.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20190730 11:57:11.453" level="INFO">${output} = 25	
</msg>
<status status="PASS" endtime="20190730 11:57:11.453" starttime="20190730 11:57:10.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190730 11:57:11.454" level="INFO">25	
</msg>
<status status="PASS" endtime="20190730 11:57:11.454" starttime="20190730 11:57:11.453"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190730 11:57:11.455" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190730 11:57:11.455" starttime="20190730 11:57:11.454"></status>
</kw>
<msg timestamp="20190730 11:57:11.455" level="INFO">${result} = 25	
</msg>
<status status="PASS" endtime="20190730 11:57:11.455" starttime="20190730 11:57:10.657"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190730 11:57:11.456" level="INFO">${result} = 25.0</msg>
<status status="PASS" endtime="20190730 11:57:11.456" starttime="20190730 11:57:11.455"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}&gt;${count}</arg>
</arguments>
<status status="PASS" endtime="20190730 11:57:11.457" starttime="20190730 11:57:11.456"></status>
</kw>
<status status="PASS" endtime="20190730 11:57:11.457" critical="yes" starttime="20190730 11:57:02.682"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20190730 11:57:11.458" starttime="20190730 11:56:49.482"></status>
</suite>
<status status="PASS" endtime="20190730 11:57:11.460" starttime="20190730 11:56:49.456"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-auditparser" pass="2">ozone-auditparser</stat>
<stat fail="0" id="s1-s1" name="Auditparser" pass="2">ozone-auditparser.Auditparser</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
