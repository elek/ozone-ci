<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20190730 23:05:58.666" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/auditparser" id="s1" name="ozone-auditparser">
<suite source="/opt/hadoop/smoketest/auditparser/auditparser.robot" id="s1-s1" name="Auditparser">
<test id="s1-s1-t1" name="Initiating freon to generate data">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190730 23:05:58.719" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 2&gt;&amp;1'.</msg>
<msg timestamp="20190730 23:06:11.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20190730 23:06:11.830" level="INFO">${output} = 2019-07-30 23:05:59 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2019-07-30 23:05:59 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2019...</msg>
<status status="PASS" endtime="20190730 23:06:11.830" starttime="20190730 23:05:58.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190730 23:06:11.832" level="INFO">2019-07-30 23:05:59 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2019-07-30 23:05:59 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2019-07-30 23:05:59 INFO  MetricsSystemImpl:191 - ozone-freon metrics system started
2019-07-30 23:06:01 INFO  RandomKeyGenerator:278 - Number of Threads: 1
2019-07-30 23:06:01 INFO  RandomKeyGenerator:283 - Number of Volumes: 5.
2019-07-30 23:06:01 INFO  RandomKeyGenerator:284 - Number of Buckets per Volume: 5.
2019-07-30 23:06:01 INFO  RandomKeyGenerator:285 - Number of Keys per Bucket: 5.
2019-07-30 23:06:01 INFO  RandomKeyGenerator:286 - Key size: 10240 bytes
2019-07-30 23:06:01 INFO  RandomKeyGenerator:287 - Buffer size: 4096 bytes
2019-07-30 23:06:01 INFO  RandomKeyGenerator:307 - Starting progress bar Thread.

 0.00% |?                                                                                                    |  0/125 Time: 0:00:002019-07-30 23:06:01 INFO  RpcClient:288 - Creating Volume: vol-0-09643, with hadoop as owner.
2019-07-30 23:06:01 INFO  RpcClient:288 - Creating Volume: vol-1-63263, with hadoop as owner.
2019-07-30 23:06:01 INFO  RpcClient:288 - Creating Volume: vol-2-03942, with hadoop as owner.
2019-07-30 23:06:01 INFO  RpcClient:288 - Creating Volume: vol-3-15092, with hadoop as owner.
2019-07-30 23:06:01 INFO  RpcClient:288 - Creating Volume: vol-4-02807, with hadoop as owner.
2019-07-30 23:06:01 INFO  RpcClient:425 - Creating Bucket: vol-0-09643/bucket-0-90355, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 23:06:01 INFO  RpcClient:425 - Creating Bucket: vol-1-63263/bucket-0-88438, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 23:06:01 INFO  RpcClient:425 - Creating Bucket: vol-2-03942/bucket-0-02442, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 23:06:01 INFO  RpcClient:425 - Creating Bucket: vol-3-15092/bucket-0-20716, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 23:06:01 INFO  RpcClient:425 - Creating Bucket: vol-4-02807/bucket-0-50718, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 23:06:01 INFO  RpcClient:425 - Creating Bucket: vol-0-09643/bucket-1-13329, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 23:06:01 INFO  RpcClient:425 - Creating Bucket: vol-1-63263/bucket-1-69940, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 23:06:01 INFO  RpcClient:425 - Creating Bucket: vol-2-03942/bucket-1-05595, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 23:06:01 INFO  RpcClient:425 - Creating Bucket: vol-3-15092/bucket-1-16536, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 23:06:01 INFO  RpcClient:425 - Creating Bucket: vol-4-02807/bucket-1-24205, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 23:06:01 INFO  RpcClient:425 - Creating Bucket: vol-0-09643/bucket-2-86760, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 23:06:01 INFO  RpcClient:425 - Creating Bucket: vol-1-63263/bucket-2-87812, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 23:06:01 INFO  RpcClient:425 - Creating Bucket: vol-2-03942/bucket-2-30042, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 23:06:01 INFO  RpcClient:425 - Creating Bucket: vol-3-15092/bucket-2-74853, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 23:06:01 INFO  RpcClient:425 - Creating Bucket: vol-4-02807/bucket-2-30443, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 23:06:01 INFO  RpcClient:425 - Creating Bucket: vol-0-09643/bucket-3-09969, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 23:06:01 INFO  RpcClient:425 - Creating Bucket: vol-1-63263/bucket-3-93919, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 23:06:01 INFO  RpcClient:425 - Creating Bucket: vol-2-03942/bucket-3-91507, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 23:06:01 INFO  RpcClient:425 - Creating Bucket: vol-3-15092/bucket-3-60910, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 23:06:01 INFO  RpcClient:425 - Creating Bucket: vol-4-02807/bucket-3-33504, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 23:06:01 INFO  RpcClient:425 - Creating Bucket: vol-0-09643/bucket-4-15241, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 23:06:01 INFO  RpcClient:425 - Creating Bucket: vol-1-63263/bucket-4-13338, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 23:06:01 INFO  RpcClient:425 - Creating Bucket: vol-2-03942/bucket-4-58482, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 23:06:01 INFO  RpcClient:425 - Creating Bucket: vol-3-15092/bucket-4-78671, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 23:06:01 INFO  RpcClient:425 - Creating Bucket: vol-4-02807/bucket-4-27941, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-30 23:06:02 WARN  MetricsSystemImpl:151 - ozone-freon metrics system already initialized!
 0.00% |?                                                                                                    |  0/125 Time: 0:00:01WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil (file:/opt/hadoop/share/ozone/lib/ratis-thirdparty-misc-0.2.0.jar) to field java.nio.Buffer.address
WARNING: Please consider reporting this to the maintainers of org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
 0.00% |?                                                                                                    |  0/125 Time: 0:00:02 14.40% |???????????????                                                                                      |  18/125 Time: 0:00:03 36.80% |?????????????????????????????????????                                                                |  46/125 Time: 0:00:04 72.00% |?????????????????????????????????????????????????????????????????????????                            |  90/125 Time: 0:00:05 100.00% |?????????????????????????????????????????????????????????????????????????????????????????????????????|  125/125 Time: 0:00:06

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,168
Average Time spent in bucket creation: 00:00:00,111
Average Time spent in key creation: 00:00:00,949
Average Time spent in key write: 00:00:04,494
Total bytes written: 1280000
Total Execution time: 00:00:11,406
***************************************************</msg>
<status status="PASS" endtime="20190730 23:06:11.832" starttime="20190730 23:06:11.831"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190730 23:06:11.833" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190730 23:06:11.834" starttime="20190730 23:06:11.833"></status>
</kw>
<msg timestamp="20190730 23:06:11.834" level="INFO">${result} = 2019-07-30 23:05:59 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2019-07-30 23:05:59 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2019...</msg>
<status status="PASS" endtime="20190730 23:06:11.834" starttime="20190730 23:05:58.717"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20190730 23:06:11.837" starttime="20190730 23:06:11.836"></status>
</kw>
<status status="PASS" endtime="20190730 23:06:11.837" starttime="20190730 23:06:11.835"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20190730 23:06:11.838" starttime="20190730 23:06:11.837"></status>
</kw>
<status status="PASS" endtime="20190730 23:06:11.838" critical="yes" starttime="20190730 23:05:58.716"></status>
</test>
<test id="s1-s1-t2" name="Testing audit parser">
<kw name="Get Environment Variable" library="OperatingSystem">
<doc>Returns the value of an environment variable with the given name.</doc>
<arguments>
<arg>HADOOP_LOG_DIR</arg>
<arg>/var/log/hadoop</arg>
</arguments>
<assign>
<var>${logdir}</var>
</assign>
<msg timestamp="20190730 23:06:11.844" level="INFO">${logdir} = /var/log/hadoop</msg>
<status status="PASS" endtime="20190730 23:06:11.844" starttime="20190730 23:06:11.843"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ls -t "${logdir}" | grep om-audit | head -1</arg>
</arguments>
<assign>
<var>${logfile}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190730 23:06:11.847" level="INFO">Running command 'ls -t "/var/log/hadoop" | grep om-audit | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20190730 23:06:11.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20190730 23:06:11.859" level="INFO">${output} = om-audit-915c7fb98a4a.log</msg>
<status status="PASS" endtime="20190730 23:06:11.860" starttime="20190730 23:06:11.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190730 23:06:11.861" level="INFO">om-audit-915c7fb98a4a.log</msg>
<status status="PASS" endtime="20190730 23:06:11.862" starttime="20190730 23:06:11.860"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190730 23:06:11.863" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190730 23:06:11.863" starttime="20190730 23:06:11.862"></status>
</kw>
<msg timestamp="20190730 23:06:11.863" level="INFO">${logfile} = om-audit-915c7fb98a4a.log</msg>
<status status="PASS" endtime="20190730 23:06:11.864" starttime="20190730 23:06:11.844"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" load "${logdir}/${logfile}"</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190730 23:06:11.867" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" load "/var/log/hadoop/om-audit-915c7fb98a4a.log" 2&gt;&amp;1'.</msg>
<msg timestamp="20190730 23:06:17.914" level="INFO">${rc} = 0</msg>
<msg timestamp="20190730 23:06:17.914" level="INFO">${output} = /var/log/hadoop/om-audit-915c7fb98a4a.log has been loaded successfully</msg>
<status status="PASS" endtime="20190730 23:06:17.914" starttime="20190730 23:06:11.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190730 23:06:17.916" level="INFO">/var/log/hadoop/om-audit-915c7fb98a4a.log has been loaded successfully</msg>
<status status="PASS" endtime="20190730 23:06:17.916" starttime="20190730 23:06:17.915"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190730 23:06:17.916" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190730 23:06:17.917" starttime="20190730 23:06:17.916"></status>
</kw>
<status status="PASS" endtime="20190730 23:06:17.917" starttime="20190730 23:06:11.864"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" template top5cmds</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190730 23:06:17.920" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" template top5cmds 2&gt;&amp;1'.</msg>
<msg timestamp="20190730 23:06:18.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20190730 23:06:18.752" level="INFO">${output} = ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190730 23:06:18.752" starttime="20190730 23:06:17.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190730 23:06:18.754" level="INFO">ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190730 23:06:18.754" starttime="20190730 23:06:18.753"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190730 23:06:18.755" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190730 23:06:18.755" starttime="20190730 23:06:18.755"></status>
</kw>
<msg timestamp="20190730 23:06:18.756" level="INFO">${result} = ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190730 23:06:18.756" starttime="20190730 23:06:17.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ALLOCATE_KEY</arg>
</arguments>
<status status="PASS" endtime="20190730 23:06:18.757" starttime="20190730 23:06:18.756"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" template top5users</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190730 23:06:18.761" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" template top5users 2&gt;&amp;1'.</msg>
<msg timestamp="20190730 23:06:19.644" level="INFO">${rc} = 0</msg>
<msg timestamp="20190730 23:06:19.644" level="INFO">${output} = hadoop	280	
</msg>
<status status="PASS" endtime="20190730 23:06:19.644" starttime="20190730 23:06:18.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190730 23:06:19.646" level="INFO">hadoop	280	
</msg>
<status status="PASS" endtime="20190730 23:06:19.647" starttime="20190730 23:06:19.645"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190730 23:06:19.648" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190730 23:06:19.648" starttime="20190730 23:06:19.647"></status>
</kw>
<msg timestamp="20190730 23:06:19.649" level="INFO">${result} = hadoop	280	
</msg>
<status status="PASS" endtime="20190730 23:06:19.649" starttime="20190730 23:06:18.757"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Set username</arg>
</arguments>
<status status="PASS" endtime="20190730 23:06:19.650" starttime="20190730 23:06:19.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${user}</arg>
</arguments>
<status status="PASS" endtime="20190730 23:06:19.651" starttime="20190730 23:06:19.650"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'"</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190730 23:06:19.655" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20190730 23:06:20.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20190730 23:06:20.510" level="INFO">${output} = 5	
</msg>
<status status="PASS" endtime="20190730 23:06:20.510" starttime="20190730 23:06:19.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190730 23:06:20.511" level="INFO">5	
</msg>
<status status="PASS" endtime="20190730 23:06:20.512" starttime="20190730 23:06:20.511"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190730 23:06:20.512" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190730 23:06:20.512" starttime="20190730 23:06:20.512"></status>
</kw>
<msg timestamp="20190730 23:06:20.513" level="INFO">${result} = 5	
</msg>
<status status="PASS" endtime="20190730 23:06:20.513" starttime="20190730 23:06:19.651"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190730 23:06:20.514" level="INFO">${result} = 5.0</msg>
<status status="PASS" endtime="20190730 23:06:20.514" starttime="20190730 23:06:20.513"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}&gt;${count}</arg>
</arguments>
<status status="PASS" endtime="20190730 23:06:20.515" starttime="20190730 23:06:20.514"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'"</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190730 23:06:20.517" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20190730 23:06:21.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20190730 23:06:21.389" level="INFO">${output} = 25	
</msg>
<status status="PASS" endtime="20190730 23:06:21.389" starttime="20190730 23:06:20.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190730 23:06:21.391" level="INFO">25	
</msg>
<status status="PASS" endtime="20190730 23:06:21.391" starttime="20190730 23:06:21.390"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190730 23:06:21.392" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190730 23:06:21.393" starttime="20190730 23:06:21.392"></status>
</kw>
<msg timestamp="20190730 23:06:21.393" level="INFO">${result} = 25	
</msg>
<status status="PASS" endtime="20190730 23:06:21.393" starttime="20190730 23:06:20.515"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190730 23:06:21.395" level="INFO">${result} = 25.0</msg>
<status status="PASS" endtime="20190730 23:06:21.395" starttime="20190730 23:06:21.394"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}&gt;${count}</arg>
</arguments>
<status status="PASS" endtime="20190730 23:06:21.396" starttime="20190730 23:06:21.395"></status>
</kw>
<status status="PASS" endtime="20190730 23:06:21.396" critical="yes" starttime="20190730 23:06:11.839"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20190730 23:06:21.398" starttime="20190730 23:05:58.692"></status>
</suite>
<status status="PASS" endtime="20190730 23:06:21.402" starttime="20190730 23:05:58.667"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-auditparser" pass="2">ozone-auditparser</stat>
<stat fail="0" id="s1-s1" name="Auditparser" pass="2">ozone-auditparser.Auditparser</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
