<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20190730 15:38:55.795" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/auditparser" id="s1" name="ozone-topology-auditparser">
<suite source="/opt/hadoop/smoketest/auditparser/auditparser.robot" id="s1-s1" name="Auditparser">
<test id="s1-s1-t1" name="Initiating freon to generate data">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190730 15:38:55.847" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 2&gt;&amp;1'.</msg>
<msg timestamp="20190730 15:39:34.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20190730 15:39:34.298" level="INFO">${output} = 
 0.00% |?                                                                                                    |  0/125 Time: 0:00:00 0.00% |?                                                         ...</msg>
<status status="PASS" endtime="20190730 15:39:34.298" starttime="20190730 15:38:55.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190730 15:39:34.300" level="INFO">
 0.00% |?                                                                                                    |  0/125 Time: 0:00:00 0.00% |?                                                                                                    |  0/125 Time: 0:00:01WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil (file:/opt/hadoop/share/ozone/lib/ratis-thirdparty-misc-0.2.0.jar) to field java.nio.Buffer.address
WARNING: Please consider reporting this to the maintainers of org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
 0.00% |?                                                                                                    |  0/125 Time: 0:00:02 0.00% |?                                                                                                    |  0/125 Time: 0:00:03 0.00% |?                                                                                                    |  0/125 Time: 0:00:04 0.00% |?                                                                                                    |  0/125 Time: 0:00:05 0.00% |?                                                                                                    |  0/125 Time: 0:00:06 0.00% |?                                                                                                    |  0/125 Time: 0:00:07 0.00% |?                                                                                                    |  0/125 Time: 0:00:08 0.00% |?                                                                                                    |  0/125 Time: 0:00:09 0.00% |?                                                                                                    |  0/125 Time: 0:00:10 0.00% |?                                                                                                    |  0/125 Time: 0:00:11 0.00% |?                                                                                                    |  0/125 Time: 0:00:12 0.00% |?                                                                                                    |  0/125 Time: 0:00:13 0.00% |?                                                                                                    |  0/125 Time: 0:00:14 1.60% |??                                                                                                   |  2/125 Time: 0:00:15 1.60% |??                                                                                                   |  2/125 Time: 0:00:16 1.60% |??                                                                                                   |  2/125 Time: 0:00:17 1.60% |??                                                                                                   |  2/125 Time: 0:00:18 1.60% |??                                                                                                   |  2/125 Time: 0:00:19 1.60% |??                                                                                                   |  2/125 Time: 0:00:20 1.60% |??                                                                                                   |  2/125 Time: 0:00:21 1.60% |??                                                                                                   |  2/125 Time: 0:00:22 1.60% |??                                                                                                   |  2/125 Time: 0:00:23 1.60% |??                                                                                                   |  2/125 Time: 0:00:24 1.60% |??                                                                                                   |  2/125 Time: 0:00:25 7.20% |????????                                                                                             |  9/125 Time: 0:00:26 24.00% |?????????????????????????                                                                            |  30/125 Time: 0:00:27 42.40% |???????????????????????????????????????????                                                          |  53/125 Time: 0:00:28 62.40% |???????????????????????????????????????????????????????????????                                      |  78/125 Time: 0:00:29 84.80% |?????????????????????????????????????????????????????????????????????????????????????                |  106/125 Time: 0:00:30 100.00% |?????????????????????????????????????????????????????????????????????????????????????????????????????|  125/125 Time: 0:00:31

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,120
Average Time spent in bucket creation: 00:00:00,189
Average Time spent in key creation: 00:00:01,388
Average Time spent in key write: 00:00:28,789
Total bytes written: 1280000
Total Execution time: 00:00:36,637
***************************************************</msg>
<status status="PASS" endtime="20190730 15:39:34.301" starttime="20190730 15:39:34.299"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190730 15:39:34.302" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190730 15:39:34.302" starttime="20190730 15:39:34.301"></status>
</kw>
<msg timestamp="20190730 15:39:34.303" level="INFO">${result} = 
 0.00% |?                                                                                                    |  0/125 Time: 0:00:00 0.00% |?                                                         ...</msg>
<status status="PASS" endtime="20190730 15:39:34.303" starttime="20190730 15:38:55.845"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20190730 15:39:34.305" starttime="20190730 15:39:34.304"></status>
</kw>
<status status="PASS" endtime="20190730 15:39:34.305" starttime="20190730 15:39:34.303"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20190730 15:39:34.306" starttime="20190730 15:39:34.305"></status>
</kw>
<status status="PASS" endtime="20190730 15:39:34.306" critical="yes" starttime="20190730 15:38:55.845"></status>
</test>
<test id="s1-s1-t2" name="Testing audit parser">
<kw name="Get Environment Variable" library="OperatingSystem">
<doc>Returns the value of an environment variable with the given name.</doc>
<arguments>
<arg>HADOOP_LOG_DIR</arg>
<arg>/var/log/hadoop</arg>
</arguments>
<assign>
<var>${logdir}</var>
</assign>
<msg timestamp="20190730 15:39:34.312" level="INFO">${logdir} = /var/log/hadoop</msg>
<status status="PASS" endtime="20190730 15:39:34.312" starttime="20190730 15:39:34.311"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ls -t "${logdir}" | grep om-audit | head -1</arg>
</arguments>
<assign>
<var>${logfile}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190730 15:39:34.316" level="INFO">Running command 'ls -t "/var/log/hadoop" | grep om-audit | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20190730 15:39:34.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20190730 15:39:34.330" level="INFO">${output} = om-audit-468e4b59ba0c.log</msg>
<status status="PASS" endtime="20190730 15:39:34.330" starttime="20190730 15:39:34.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190730 15:39:34.332" level="INFO">om-audit-468e4b59ba0c.log</msg>
<status status="PASS" endtime="20190730 15:39:34.332" starttime="20190730 15:39:34.331"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190730 15:39:34.333" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190730 15:39:34.333" starttime="20190730 15:39:34.332"></status>
</kw>
<msg timestamp="20190730 15:39:34.334" level="INFO">${logfile} = om-audit-468e4b59ba0c.log</msg>
<status status="PASS" endtime="20190730 15:39:34.334" starttime="20190730 15:39:34.312"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" load "${logdir}/${logfile}"</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190730 15:39:34.338" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" load "/var/log/hadoop/om-audit-468e4b59ba0c.log" 2&gt;&amp;1'.</msg>
<msg timestamp="20190730 15:39:41.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20190730 15:39:41.929" level="INFO">${output} = /var/log/hadoop/om-audit-468e4b59ba0c.log has been loaded successfully</msg>
<status status="PASS" endtime="20190730 15:39:41.929" starttime="20190730 15:39:34.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190730 15:39:41.931" level="INFO">/var/log/hadoop/om-audit-468e4b59ba0c.log has been loaded successfully</msg>
<status status="PASS" endtime="20190730 15:39:41.931" starttime="20190730 15:39:41.930"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190730 15:39:41.933" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190730 15:39:41.933" starttime="20190730 15:39:41.932"></status>
</kw>
<status status="PASS" endtime="20190730 15:39:41.933" starttime="20190730 15:39:34.334"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" template top5cmds</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190730 15:39:41.938" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" template top5cmds 2&gt;&amp;1'.</msg>
<msg timestamp="20190730 15:39:42.862" level="INFO">${rc} = 0</msg>
<msg timestamp="20190730 15:39:42.863" level="INFO">${output} = ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190730 15:39:42.863" starttime="20190730 15:39:41.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190730 15:39:42.864" level="INFO">ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190730 15:39:42.864" starttime="20190730 15:39:42.863"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190730 15:39:42.865" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190730 15:39:42.865" starttime="20190730 15:39:42.864"></status>
</kw>
<msg timestamp="20190730 15:39:42.865" level="INFO">${result} = ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190730 15:39:42.865" starttime="20190730 15:39:41.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ALLOCATE_KEY</arg>
</arguments>
<status status="PASS" endtime="20190730 15:39:42.866" starttime="20190730 15:39:42.865"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" template top5users</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190730 15:39:42.868" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" template top5users 2&gt;&amp;1'.</msg>
<msg timestamp="20190730 15:39:43.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20190730 15:39:43.807" level="INFO">${output} = hadoop	280	
</msg>
<status status="PASS" endtime="20190730 15:39:43.807" starttime="20190730 15:39:42.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190730 15:39:43.809" level="INFO">hadoop	280	
</msg>
<status status="PASS" endtime="20190730 15:39:43.809" starttime="20190730 15:39:43.808"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190730 15:39:43.810" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190730 15:39:43.810" starttime="20190730 15:39:43.809"></status>
</kw>
<msg timestamp="20190730 15:39:43.811" level="INFO">${result} = hadoop	280	
</msg>
<status status="PASS" endtime="20190730 15:39:43.811" starttime="20190730 15:39:42.866"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Set username</arg>
</arguments>
<status status="PASS" endtime="20190730 15:39:43.812" starttime="20190730 15:39:43.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${user}</arg>
</arguments>
<status status="PASS" endtime="20190730 15:39:43.813" starttime="20190730 15:39:43.812"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'"</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190730 15:39:43.817" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20190730 15:39:44.808" level="INFO">${rc} = 0</msg>
<msg timestamp="20190730 15:39:44.808" level="INFO">${output} = 5	
</msg>
<status status="PASS" endtime="20190730 15:39:44.808" starttime="20190730 15:39:43.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190730 15:39:44.810" level="INFO">5	
</msg>
<status status="PASS" endtime="20190730 15:39:44.810" starttime="20190730 15:39:44.809"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190730 15:39:44.811" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190730 15:39:44.811" starttime="20190730 15:39:44.810"></status>
</kw>
<msg timestamp="20190730 15:39:44.812" level="INFO">${result} = 5	
</msg>
<status status="PASS" endtime="20190730 15:39:44.812" starttime="20190730 15:39:43.813"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190730 15:39:44.814" level="INFO">${result} = 5.0</msg>
<status status="PASS" endtime="20190730 15:39:44.814" starttime="20190730 15:39:44.812"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}&gt;${count}</arg>
</arguments>
<status status="PASS" endtime="20190730 15:39:44.815" starttime="20190730 15:39:44.814"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'"</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190730 15:39:44.819" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20190730 15:39:45.738" level="INFO">${rc} = 0</msg>
<msg timestamp="20190730 15:39:45.739" level="INFO">${output} = 25	
</msg>
<status status="PASS" endtime="20190730 15:39:45.739" starttime="20190730 15:39:44.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190730 15:39:45.740" level="INFO">25	
</msg>
<status status="PASS" endtime="20190730 15:39:45.741" starttime="20190730 15:39:45.739"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190730 15:39:45.741" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190730 15:39:45.742" starttime="20190730 15:39:45.741"></status>
</kw>
<msg timestamp="20190730 15:39:45.742" level="INFO">${result} = 25	
</msg>
<status status="PASS" endtime="20190730 15:39:45.742" starttime="20190730 15:39:44.815"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190730 15:39:45.743" level="INFO">${result} = 25.0</msg>
<status status="PASS" endtime="20190730 15:39:45.743" starttime="20190730 15:39:45.743"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}&gt;${count}</arg>
</arguments>
<status status="PASS" endtime="20190730 15:39:45.745" starttime="20190730 15:39:45.744"></status>
</kw>
<status status="PASS" endtime="20190730 15:39:45.745" critical="yes" starttime="20190730 15:39:34.307"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20190730 15:39:45.746" starttime="20190730 15:38:55.820"></status>
</suite>
<status status="PASS" endtime="20190730 15:39:45.750" starttime="20190730 15:38:55.796"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-topology-auditparser" pass="2">ozone-topology-auditparser</stat>
<stat fail="0" id="s1-s1" name="Auditparser" pass="2">ozone-topology-auditparser.Auditparser</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
