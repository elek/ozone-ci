<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20190731 00:56:48.327" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/auditparser" id="s1" name="ozone-auditparser">
<suite source="/opt/hadoop/smoketest/auditparser/auditparser.robot" id="s1-s1" name="Auditparser">
<test id="s1-s1-t1" name="Initiating freon to generate data">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190731 00:56:48.380" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 2&gt;&amp;1'.</msg>
<msg timestamp="20190731 00:57:01.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20190731 00:57:01.722" level="INFO">${output} = 2019-07-31 00:56:49 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2019-07-31 00:56:49 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2019...</msg>
<status status="PASS" endtime="20190731 00:57:01.722" starttime="20190731 00:56:48.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190731 00:57:01.723" level="INFO">2019-07-31 00:56:49 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2019-07-31 00:56:49 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2019-07-31 00:56:49 INFO  MetricsSystemImpl:191 - ozone-freon metrics system started
2019-07-31 00:56:51 INFO  RandomKeyGenerator:278 - Number of Threads: 1
2019-07-31 00:56:51 INFO  RandomKeyGenerator:283 - Number of Volumes: 5.
2019-07-31 00:56:51 INFO  RandomKeyGenerator:284 - Number of Buckets per Volume: 5.
2019-07-31 00:56:51 INFO  RandomKeyGenerator:285 - Number of Keys per Bucket: 5.
2019-07-31 00:56:51 INFO  RandomKeyGenerator:286 - Key size: 10240 bytes
2019-07-31 00:56:51 INFO  RandomKeyGenerator:287 - Buffer size: 4096 bytes
2019-07-31 00:56:51 INFO  RandomKeyGenerator:307 - Starting progress bar Thread.

 0.00% |?                                                                                                    |  0/125 Time: 0:00:002019-07-31 00:56:51 INFO  RpcClient:288 - Creating Volume: vol-0-32071, with hadoop as owner.
2019-07-31 00:56:51 INFO  RpcClient:288 - Creating Volume: vol-1-68992, with hadoop as owner.
2019-07-31 00:56:51 INFO  RpcClient:288 - Creating Volume: vol-2-37593, with hadoop as owner.
2019-07-31 00:56:51 INFO  RpcClient:288 - Creating Volume: vol-3-16933, with hadoop as owner.
2019-07-31 00:56:51 INFO  RpcClient:288 - Creating Volume: vol-4-09507, with hadoop as owner.
2019-07-31 00:56:51 INFO  RpcClient:425 - Creating Bucket: vol-0-32071/bucket-0-64987, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-31 00:56:51 INFO  RpcClient:425 - Creating Bucket: vol-1-68992/bucket-0-30359, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-31 00:56:51 INFO  RpcClient:425 - Creating Bucket: vol-2-37593/bucket-0-49206, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-31 00:56:51 INFO  RpcClient:425 - Creating Bucket: vol-3-16933/bucket-0-01342, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-31 00:56:51 INFO  RpcClient:425 - Creating Bucket: vol-4-09507/bucket-0-62334, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-31 00:56:51 INFO  RpcClient:425 - Creating Bucket: vol-0-32071/bucket-1-23607, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-31 00:56:51 INFO  RpcClient:425 - Creating Bucket: vol-1-68992/bucket-1-97262, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-31 00:56:51 INFO  RpcClient:425 - Creating Bucket: vol-2-37593/bucket-1-57226, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-31 00:56:51 INFO  RpcClient:425 - Creating Bucket: vol-3-16933/bucket-1-63631, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-31 00:56:51 INFO  RpcClient:425 - Creating Bucket: vol-4-09507/bucket-1-85947, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-31 00:56:51 INFO  RpcClient:425 - Creating Bucket: vol-0-32071/bucket-2-59291, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-31 00:56:51 INFO  RpcClient:425 - Creating Bucket: vol-1-68992/bucket-2-57739, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-31 00:56:51 INFO  RpcClient:425 - Creating Bucket: vol-2-37593/bucket-2-77441, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-31 00:56:51 INFO  RpcClient:425 - Creating Bucket: vol-3-16933/bucket-2-07273, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-31 00:56:51 INFO  RpcClient:425 - Creating Bucket: vol-4-09507/bucket-2-09952, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-31 00:56:51 INFO  RpcClient:425 - Creating Bucket: vol-0-32071/bucket-3-12999, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-31 00:56:51 INFO  RpcClient:425 - Creating Bucket: vol-1-68992/bucket-3-42620, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-31 00:56:51 INFO  RpcClient:425 - Creating Bucket: vol-2-37593/bucket-3-10165, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-31 00:56:51 INFO  RpcClient:425 - Creating Bucket: vol-3-16933/bucket-3-37372, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-31 00:56:51 INFO  RpcClient:425 - Creating Bucket: vol-4-09507/bucket-3-06764, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-31 00:56:51 INFO  RpcClient:425 - Creating Bucket: vol-0-32071/bucket-4-26976, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-31 00:56:51 INFO  RpcClient:425 - Creating Bucket: vol-1-68992/bucket-4-14321, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-31 00:56:51 INFO  RpcClient:425 - Creating Bucket: vol-2-37593/bucket-4-70204, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-31 00:56:51 INFO  RpcClient:425 - Creating Bucket: vol-3-16933/bucket-4-07660, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-31 00:56:51 INFO  RpcClient:425 - Creating Bucket: vol-4-09507/bucket-4-05773, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-31 00:56:52 WARN  MetricsSystemImpl:151 - ozone-freon metrics system already initialized!
 0.00% |?                                                                                                    |  0/125 Time: 0:00:01WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil (file:/opt/hadoop/share/ozone/lib/ratis-thirdparty-misc-0.2.0.jar) to field java.nio.Buffer.address
WARNING: Please consider reporting this to the maintainers of org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
 0.80% |?                                                                                                    |  1/125 Time: 0:00:02 18.40% |???????????????????                                                                                  |  23/125 Time: 0:00:03 38.40% |???????????????????????????????????????                                                              |  48/125 Time: 0:00:04 72.00% |?????????????????????????????????????????????????????????????????????????                            |  90/125 Time: 0:00:05 100.00% |?????????????????????????????????????????????????????????????????????????????????????????????????????|  125/125 Time: 0:00:06

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,097
Average Time spent in bucket creation: 00:00:00,085
Average Time spent in key creation: 00:00:01,007
Average Time spent in key write: 00:00:04,727
Total bytes written: 1280000
Total Execution time: 00:00:11,554
***************************************************</msg>
<status status="PASS" endtime="20190731 00:57:01.723" starttime="20190731 00:57:01.722"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190731 00:57:01.724" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190731 00:57:01.724" starttime="20190731 00:57:01.724"></status>
</kw>
<msg timestamp="20190731 00:57:01.725" level="INFO">${result} = 2019-07-31 00:56:49 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2019-07-31 00:56:49 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2019...</msg>
<status status="PASS" endtime="20190731 00:57:01.725" starttime="20190731 00:56:48.378"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20190731 00:57:01.726" starttime="20190731 00:57:01.726"></status>
</kw>
<status status="PASS" endtime="20190731 00:57:01.726" starttime="20190731 00:57:01.725"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20190731 00:57:01.727" starttime="20190731 00:57:01.726"></status>
</kw>
<status status="PASS" endtime="20190731 00:57:01.727" critical="yes" starttime="20190731 00:56:48.377"></status>
</test>
<test id="s1-s1-t2" name="Testing audit parser">
<kw name="Get Environment Variable" library="OperatingSystem">
<doc>Returns the value of an environment variable with the given name.</doc>
<arguments>
<arg>HADOOP_LOG_DIR</arg>
<arg>/var/log/hadoop</arg>
</arguments>
<assign>
<var>${logdir}</var>
</assign>
<msg timestamp="20190731 00:57:01.731" level="INFO">${logdir} = /var/log/hadoop</msg>
<status status="PASS" endtime="20190731 00:57:01.731" starttime="20190731 00:57:01.730"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ls -t "${logdir}" | grep om-audit | head -1</arg>
</arguments>
<assign>
<var>${logfile}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190731 00:57:01.733" level="INFO">Running command 'ls -t "/var/log/hadoop" | grep om-audit | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20190731 00:57:01.742" level="INFO">${rc} = 0</msg>
<msg timestamp="20190731 00:57:01.742" level="INFO">${output} = om-audit-9e8e6717c38e.log</msg>
<status status="PASS" endtime="20190731 00:57:01.742" starttime="20190731 00:57:01.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190731 00:57:01.744" level="INFO">om-audit-9e8e6717c38e.log</msg>
<status status="PASS" endtime="20190731 00:57:01.744" starttime="20190731 00:57:01.743"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190731 00:57:01.745" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190731 00:57:01.745" starttime="20190731 00:57:01.744"></status>
</kw>
<msg timestamp="20190731 00:57:01.746" level="INFO">${logfile} = om-audit-9e8e6717c38e.log</msg>
<status status="PASS" endtime="20190731 00:57:01.746" starttime="20190731 00:57:01.731"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" load "${logdir}/${logfile}"</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190731 00:57:01.750" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" load "/var/log/hadoop/om-audit-9e8e6717c38e.log" 2&gt;&amp;1'.</msg>
<msg timestamp="20190731 00:57:06.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20190731 00:57:06.901" level="INFO">${output} = /var/log/hadoop/om-audit-9e8e6717c38e.log has been loaded successfully</msg>
<status status="PASS" endtime="20190731 00:57:06.901" starttime="20190731 00:57:01.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190731 00:57:06.903" level="INFO">/var/log/hadoop/om-audit-9e8e6717c38e.log has been loaded successfully</msg>
<status status="PASS" endtime="20190731 00:57:06.903" starttime="20190731 00:57:06.902"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190731 00:57:06.904" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190731 00:57:06.904" starttime="20190731 00:57:06.903"></status>
</kw>
<status status="PASS" endtime="20190731 00:57:06.905" starttime="20190731 00:57:01.746"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" template top5cmds</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190731 00:57:06.909" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" template top5cmds 2&gt;&amp;1'.</msg>
<msg timestamp="20190731 00:57:07.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20190731 00:57:07.812" level="INFO">${output} = ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190731 00:57:07.812" starttime="20190731 00:57:06.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190731 00:57:07.813" level="INFO">ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190731 00:57:07.813" starttime="20190731 00:57:07.813"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190731 00:57:07.814" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190731 00:57:07.814" starttime="20190731 00:57:07.814"></status>
</kw>
<msg timestamp="20190731 00:57:07.814" level="INFO">${result} = ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190731 00:57:07.815" starttime="20190731 00:57:06.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ALLOCATE_KEY</arg>
</arguments>
<status status="PASS" endtime="20190731 00:57:07.815" starttime="20190731 00:57:07.815"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" template top5users</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190731 00:57:07.818" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" template top5users 2&gt;&amp;1'.</msg>
<msg timestamp="20190731 00:57:08.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20190731 00:57:08.748" level="INFO">${output} = hadoop	280	
</msg>
<status status="PASS" endtime="20190731 00:57:08.748" starttime="20190731 00:57:07.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190731 00:57:08.750" level="INFO">hadoop	280	
</msg>
<status status="PASS" endtime="20190731 00:57:08.750" starttime="20190731 00:57:08.749"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190731 00:57:08.751" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190731 00:57:08.752" starttime="20190731 00:57:08.751"></status>
</kw>
<msg timestamp="20190731 00:57:08.752" level="INFO">${result} = hadoop	280	
</msg>
<status status="PASS" endtime="20190731 00:57:08.752" starttime="20190731 00:57:07.815"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Set username</arg>
</arguments>
<status status="PASS" endtime="20190731 00:57:08.754" starttime="20190731 00:57:08.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${user}</arg>
</arguments>
<status status="PASS" endtime="20190731 00:57:08.755" starttime="20190731 00:57:08.754"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'"</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190731 00:57:08.758" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20190731 00:57:09.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20190731 00:57:09.664" level="INFO">${output} = 5	
</msg>
<status status="PASS" endtime="20190731 00:57:09.665" starttime="20190731 00:57:08.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190731 00:57:09.666" level="INFO">5	
</msg>
<status status="PASS" endtime="20190731 00:57:09.667" starttime="20190731 00:57:09.665"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190731 00:57:09.667" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190731 00:57:09.668" starttime="20190731 00:57:09.667"></status>
</kw>
<msg timestamp="20190731 00:57:09.668" level="INFO">${result} = 5	
</msg>
<status status="PASS" endtime="20190731 00:57:09.668" starttime="20190731 00:57:08.755"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190731 00:57:09.670" level="INFO">${result} = 5.0</msg>
<status status="PASS" endtime="20190731 00:57:09.670" starttime="20190731 00:57:09.669"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}&gt;${count}</arg>
</arguments>
<status status="PASS" endtime="20190731 00:57:09.671" starttime="20190731 00:57:09.670"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'"</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190731 00:57:09.675" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20190731 00:57:10.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20190731 00:57:10.600" level="INFO">${output} = 25	
</msg>
<status status="PASS" endtime="20190731 00:57:10.600" starttime="20190731 00:57:09.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190731 00:57:10.602" level="INFO">25	
</msg>
<status status="PASS" endtime="20190731 00:57:10.602" starttime="20190731 00:57:10.601"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190731 00:57:10.603" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190731 00:57:10.603" starttime="20190731 00:57:10.602"></status>
</kw>
<msg timestamp="20190731 00:57:10.604" level="INFO">${result} = 25	
</msg>
<status status="PASS" endtime="20190731 00:57:10.604" starttime="20190731 00:57:09.672"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190731 00:57:10.605" level="INFO">${result} = 25.0</msg>
<status status="PASS" endtime="20190731 00:57:10.605" starttime="20190731 00:57:10.604"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}&gt;${count}</arg>
</arguments>
<status status="PASS" endtime="20190731 00:57:10.606" starttime="20190731 00:57:10.606"></status>
</kw>
<status status="PASS" endtime="20190731 00:57:10.607" critical="yes" starttime="20190731 00:57:01.727"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20190731 00:57:10.608" starttime="20190731 00:56:48.353"></status>
</suite>
<status status="PASS" endtime="20190731 00:57:10.614" starttime="20190731 00:56:48.328"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-auditparser" pass="2">ozone-auditparser</stat>
<stat fail="0" id="s1-s1" name="Auditparser" pass="2">ozone-auditparser.Auditparser</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
