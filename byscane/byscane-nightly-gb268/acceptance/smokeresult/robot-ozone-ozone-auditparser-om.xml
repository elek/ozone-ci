<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20190804 03:26:50.047" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/auditparser" id="s1" name="ozone-auditparser">
<suite source="/opt/hadoop/smoketest/auditparser/auditparser.robot" id="s1-s1" name="Auditparser">
<test id="s1-s1-t1" name="Initiating freon to generate data">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190804 03:26:50.107" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 2&gt;&amp;1'.</msg>
<msg timestamp="20190804 03:27:03.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20190804 03:27:03.265" level="INFO">${output} = 2019-08-04 03:26:51 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2019-08-04 03:26:51 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2019...</msg>
<status status="PASS" endtime="20190804 03:27:03.266" starttime="20190804 03:26:50.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190804 03:27:03.267" level="INFO">2019-08-04 03:26:51 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2019-08-04 03:26:51 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2019-08-04 03:26:51 INFO  MetricsSystemImpl:191 - ozone-freon metrics system started
2019-08-04 03:26:52 INFO  RandomKeyGenerator:278 - Number of Threads: 1
2019-08-04 03:26:52 INFO  RandomKeyGenerator:283 - Number of Volumes: 5.
2019-08-04 03:26:52 INFO  RandomKeyGenerator:284 - Number of Buckets per Volume: 5.
2019-08-04 03:26:52 INFO  RandomKeyGenerator:285 - Number of Keys per Bucket: 5.
2019-08-04 03:26:52 INFO  RandomKeyGenerator:286 - Key size: 10240 bytes
2019-08-04 03:26:52 INFO  RandomKeyGenerator:287 - Buffer size: 4096 bytes
2019-08-04 03:26:52 INFO  RandomKeyGenerator:307 - Starting progress bar Thread.

 0.00% |?                                                                                                    |  0/125 Time: 0:00:002019-08-04 03:26:52 INFO  RpcClient:288 - Creating Volume: vol-0-29457, with hadoop as owner.
2019-08-04 03:26:52 INFO  RpcClient:288 - Creating Volume: vol-1-12974, with hadoop as owner.
2019-08-04 03:26:52 INFO  RpcClient:288 - Creating Volume: vol-2-83779, with hadoop as owner.
2019-08-04 03:26:52 INFO  RpcClient:288 - Creating Volume: vol-3-58690, with hadoop as owner.
2019-08-04 03:26:52 INFO  RpcClient:288 - Creating Volume: vol-4-66313, with hadoop as owner.
2019-08-04 03:26:52 INFO  RpcClient:425 - Creating Bucket: vol-0-29457/bucket-0-94519, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-04 03:26:52 INFO  RpcClient:425 - Creating Bucket: vol-1-12974/bucket-0-16096, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-04 03:26:52 INFO  RpcClient:425 - Creating Bucket: vol-2-83779/bucket-0-64803, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-04 03:26:52 INFO  RpcClient:425 - Creating Bucket: vol-3-58690/bucket-0-85341, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-04 03:26:52 INFO  RpcClient:425 - Creating Bucket: vol-4-66313/bucket-0-61455, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-04 03:26:52 INFO  RpcClient:425 - Creating Bucket: vol-0-29457/bucket-1-91819, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-04 03:26:52 INFO  RpcClient:425 - Creating Bucket: vol-1-12974/bucket-1-70038, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-04 03:26:52 INFO  RpcClient:425 - Creating Bucket: vol-2-83779/bucket-1-61818, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-04 03:26:53 INFO  RpcClient:425 - Creating Bucket: vol-3-58690/bucket-1-98797, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-04 03:26:53 INFO  RpcClient:425 - Creating Bucket: vol-4-66313/bucket-1-90898, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-04 03:26:53 INFO  RpcClient:425 - Creating Bucket: vol-0-29457/bucket-2-10744, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-04 03:26:53 INFO  RpcClient:425 - Creating Bucket: vol-1-12974/bucket-2-34600, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-04 03:26:53 INFO  RpcClient:425 - Creating Bucket: vol-2-83779/bucket-2-02870, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-04 03:26:53 INFO  RpcClient:425 - Creating Bucket: vol-3-58690/bucket-2-43723, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-04 03:26:53 INFO  RpcClient:425 - Creating Bucket: vol-4-66313/bucket-2-49843, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-04 03:26:53 INFO  RpcClient:425 - Creating Bucket: vol-0-29457/bucket-3-10127, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-04 03:26:53 INFO  RpcClient:425 - Creating Bucket: vol-1-12974/bucket-3-89194, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-04 03:26:53 INFO  RpcClient:425 - Creating Bucket: vol-2-83779/bucket-3-01162, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-04 03:26:53 INFO  RpcClient:425 - Creating Bucket: vol-3-58690/bucket-3-87370, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-04 03:26:53 INFO  RpcClient:425 - Creating Bucket: vol-4-66313/bucket-3-53761, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-04 03:26:53 INFO  RpcClient:425 - Creating Bucket: vol-0-29457/bucket-4-05235, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-04 03:26:53 INFO  RpcClient:425 - Creating Bucket: vol-1-12974/bucket-4-71093, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-04 03:26:53 INFO  RpcClient:425 - Creating Bucket: vol-2-83779/bucket-4-79523, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-04 03:26:53 INFO  RpcClient:425 - Creating Bucket: vol-3-58690/bucket-4-04528, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-04 03:26:53 INFO  RpcClient:425 - Creating Bucket: vol-4-66313/bucket-4-35318, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-04 03:26:53 WARN  MetricsSystemImpl:151 - ozone-freon metrics system already initialized!
 0.00% |?                                                                                                    |  0/125 Time: 0:00:01WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil (file:/opt/hadoop/share/ozone/lib/ratis-thirdparty-misc-0.2.0.jar) to field java.nio.Buffer.address
WARNING: Please consider reporting this to the maintainers of org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
 2.40% |???                                                                                                  |  3/125 Time: 0:00:02 24.00% |?????????????????????????                                                                            |  30/125 Time: 0:00:03 51.20% |????????????????????????????????????????????????????                                                 |  64/125 Time: 0:00:04 86.40% |???????????????????????????????????????????????????????????????????????????????????????              |  108/125 Time: 0:00:05 100.00% |?????????????????????????????????????????????????????????????????????????????????????????????????????|  125/125 Time: 0:00:06

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,106
Average Time spent in bucket creation: 00:00:00,078
Average Time spent in key creation: 00:00:00,865
Average Time spent in key write: 00:00:04,242
Total bytes written: 1280000
Total Execution time: 00:00:11,366
***************************************************</msg>
<status status="PASS" endtime="20190804 03:27:03.267" starttime="20190804 03:27:03.266"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190804 03:27:03.268" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190804 03:27:03.268" starttime="20190804 03:27:03.267"></status>
</kw>
<msg timestamp="20190804 03:27:03.268" level="INFO">${result} = 2019-08-04 03:26:51 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2019-08-04 03:26:51 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2019...</msg>
<status status="PASS" endtime="20190804 03:27:03.268" starttime="20190804 03:26:50.105"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20190804 03:27:03.270" starttime="20190804 03:27:03.269"></status>
</kw>
<status status="PASS" endtime="20190804 03:27:03.270" starttime="20190804 03:27:03.269"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20190804 03:27:03.270" starttime="20190804 03:27:03.270"></status>
</kw>
<status status="PASS" endtime="20190804 03:27:03.270" critical="yes" starttime="20190804 03:26:50.104"></status>
</test>
<test id="s1-s1-t2" name="Testing audit parser">
<kw name="Get Environment Variable" library="OperatingSystem">
<doc>Returns the value of an environment variable with the given name.</doc>
<arguments>
<arg>HADOOP_LOG_DIR</arg>
<arg>/var/log/hadoop</arg>
</arguments>
<assign>
<var>${logdir}</var>
</assign>
<msg timestamp="20190804 03:27:03.274" level="INFO">${logdir} = /var/log/hadoop</msg>
<status status="PASS" endtime="20190804 03:27:03.274" starttime="20190804 03:27:03.274"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ls -t "${logdir}" | grep om-audit | head -1</arg>
</arguments>
<assign>
<var>${logfile}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190804 03:27:03.276" level="INFO">Running command 'ls -t "/var/log/hadoop" | grep om-audit | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20190804 03:27:03.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20190804 03:27:03.286" level="INFO">${output} = om-audit-54be74501b87.log</msg>
<status status="PASS" endtime="20190804 03:27:03.286" starttime="20190804 03:27:03.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190804 03:27:03.287" level="INFO">om-audit-54be74501b87.log</msg>
<status status="PASS" endtime="20190804 03:27:03.288" starttime="20190804 03:27:03.287"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190804 03:27:03.288" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190804 03:27:03.288" starttime="20190804 03:27:03.288"></status>
</kw>
<msg timestamp="20190804 03:27:03.289" level="INFO">${logfile} = om-audit-54be74501b87.log</msg>
<status status="PASS" endtime="20190804 03:27:03.289" starttime="20190804 03:27:03.274"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" load "${logdir}/${logfile}"</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190804 03:27:03.291" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" load "/var/log/hadoop/om-audit-54be74501b87.log" 2&gt;&amp;1'.</msg>
<msg timestamp="20190804 03:27:09.112" level="INFO">${rc} = 0</msg>
<msg timestamp="20190804 03:27:09.112" level="INFO">${output} = /var/log/hadoop/om-audit-54be74501b87.log has been loaded successfully</msg>
<status status="PASS" endtime="20190804 03:27:09.112" starttime="20190804 03:27:03.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190804 03:27:09.114" level="INFO">/var/log/hadoop/om-audit-54be74501b87.log has been loaded successfully</msg>
<status status="PASS" endtime="20190804 03:27:09.115" starttime="20190804 03:27:09.113"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190804 03:27:09.116" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190804 03:27:09.116" starttime="20190804 03:27:09.115"></status>
</kw>
<status status="PASS" endtime="20190804 03:27:09.117" starttime="20190804 03:27:03.289"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" template top5cmds</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190804 03:27:09.121" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" template top5cmds 2&gt;&amp;1'.</msg>
<msg timestamp="20190804 03:27:09.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20190804 03:27:09.991" level="INFO">${output} = ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190804 03:27:09.991" starttime="20190804 03:27:09.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190804 03:27:09.993" level="INFO">ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190804 03:27:09.993" starttime="20190804 03:27:09.992"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190804 03:27:09.994" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190804 03:27:09.994" starttime="20190804 03:27:09.993"></status>
</kw>
<msg timestamp="20190804 03:27:09.994" level="INFO">${result} = ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190804 03:27:09.994" starttime="20190804 03:27:09.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ALLOCATE_KEY</arg>
</arguments>
<status status="PASS" endtime="20190804 03:27:09.995" starttime="20190804 03:27:09.995"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" template top5users</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190804 03:27:09.998" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" template top5users 2&gt;&amp;1'.</msg>
<msg timestamp="20190804 03:27:10.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20190804 03:27:10.858" level="INFO">${output} = hadoop	280	
</msg>
<status status="PASS" endtime="20190804 03:27:10.858" starttime="20190804 03:27:09.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190804 03:27:10.860" level="INFO">hadoop	280	
</msg>
<status status="PASS" endtime="20190804 03:27:10.860" starttime="20190804 03:27:10.859"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190804 03:27:10.861" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190804 03:27:10.861" starttime="20190804 03:27:10.860"></status>
</kw>
<msg timestamp="20190804 03:27:10.862" level="INFO">${result} = hadoop	280	
</msg>
<status status="PASS" endtime="20190804 03:27:10.862" starttime="20190804 03:27:09.995"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Set username</arg>
</arguments>
<status status="PASS" endtime="20190804 03:27:10.863" starttime="20190804 03:27:10.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${user}</arg>
</arguments>
<status status="PASS" endtime="20190804 03:27:10.864" starttime="20190804 03:27:10.864"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'"</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190804 03:27:10.868" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20190804 03:27:11.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20190804 03:27:11.675" level="INFO">${output} = 5	
</msg>
<status status="PASS" endtime="20190804 03:27:11.675" starttime="20190804 03:27:10.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190804 03:27:11.676" level="INFO">5	
</msg>
<status status="PASS" endtime="20190804 03:27:11.676" starttime="20190804 03:27:11.675"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190804 03:27:11.676" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190804 03:27:11.677" starttime="20190804 03:27:11.676"></status>
</kw>
<msg timestamp="20190804 03:27:11.677" level="INFO">${result} = 5	
</msg>
<status status="PASS" endtime="20190804 03:27:11.677" starttime="20190804 03:27:10.865"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190804 03:27:11.678" level="INFO">${result} = 5.0</msg>
<status status="PASS" endtime="20190804 03:27:11.678" starttime="20190804 03:27:11.677"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}&gt;${count}</arg>
</arguments>
<status status="PASS" endtime="20190804 03:27:11.679" starttime="20190804 03:27:11.678"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'"</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190804 03:27:11.681" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20190804 03:27:12.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20190804 03:27:12.391" level="INFO">${output} = 25	
</msg>
<status status="PASS" endtime="20190804 03:27:12.391" starttime="20190804 03:27:11.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190804 03:27:12.392" level="INFO">25	
</msg>
<status status="PASS" endtime="20190804 03:27:12.392" starttime="20190804 03:27:12.391"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190804 03:27:12.393" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190804 03:27:12.393" starttime="20190804 03:27:12.393"></status>
</kw>
<msg timestamp="20190804 03:27:12.394" level="INFO">${result} = 25	
</msg>
<status status="PASS" endtime="20190804 03:27:12.394" starttime="20190804 03:27:11.679"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190804 03:27:12.395" level="INFO">${result} = 25.0</msg>
<status status="PASS" endtime="20190804 03:27:12.395" starttime="20190804 03:27:12.394"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}&gt;${count}</arg>
</arguments>
<status status="PASS" endtime="20190804 03:27:12.396" starttime="20190804 03:27:12.395"></status>
</kw>
<status status="PASS" endtime="20190804 03:27:12.396" critical="yes" starttime="20190804 03:27:03.271"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20190804 03:27:12.397" starttime="20190804 03:26:50.076"></status>
</suite>
<status status="PASS" endtime="20190804 03:27:12.400" starttime="20190804 03:26:50.047"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-auditparser" pass="2">ozone-auditparser</stat>
<stat fail="0" id="s1-s1" name="Auditparser" pass="2">ozone-auditparser.Auditparser</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
