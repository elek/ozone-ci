<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20190829 08:13:55.230" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/auditparser" id="s1" name="ozone-topology-auditparser">
<suite source="/opt/hadoop/smoketest/auditparser/auditparser.robot" id="s1-s1" name="Auditparser">
<test id="s1-s1-t1" name="Initiating freon to generate data">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190829 08:13:55.290" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 2&gt;&amp;1'.</msg>
<msg timestamp="20190829 08:14:40.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20190829 08:14:40.578" level="INFO">${output} = 
 0.00% |?                                                                                                    |  0/125 Time: 0:00:00 0.00% |?                                                         ...</msg>
<status status="PASS" endtime="20190829 08:14:40.578" starttime="20190829 08:13:55.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190829 08:14:40.580" level="INFO">
 0.00% |?                                                                                                    |  0/125 Time: 0:00:00 0.00% |?                                                                                                    |  0/125 Time: 0:00:01 0.00% |?                                                                                                    |  0/125 Time: 0:00:02 0.00% |?                                                                                                    |  0/125 Time: 0:00:03 0.00% |?                                                                                                    |  0/125 Time: 0:00:04WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil (file:/opt/hadoop/share/ozone/lib/ratis-thirdparty-misc-0.2.0.jar) to field java.nio.Buffer.address
WARNING: Please consider reporting this to the maintainers of org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
 0.00% |?                                                                                                    |  0/125 Time: 0:00:05 0.00% |?                                                                                                    |  0/125 Time: 0:00:06 0.00% |?                                                                                                    |  0/125 Time: 0:00:07 0.00% |?                                                                                                    |  0/125 Time: 0:00:08 0.00% |?                                                                                                    |  0/125 Time: 0:00:09 0.00% |?                                                                                                    |  0/125 Time: 0:00:10 0.00% |?                                                                                                    |  0/125 Time: 0:00:11 0.00% |?                                                                                                    |  0/125 Time: 0:00:12 0.00% |?                                                                                                    |  0/125 Time: 0:00:13 0.00% |?                                                                                                    |  0/125 Time: 0:00:14 0.00% |?                                                                                                    |  0/125 Time: 0:00:15 0.00% |?                                                                                                    |  0/125 Time: 0:00:16 0.00% |?                                                                                                    |  0/125 Time: 0:00:17 0.00% |?                                                                                                    |  0/125 Time: 0:00:18 0.80% |?                                                                                                    |  1/125 Time: 0:00:19 0.80% |?                                                                                                    |  1/125 Time: 0:00:20 0.80% |?                                                                                                    |  1/125 Time: 0:00:21 0.80% |?                                                                                                    |  1/125 Time: 0:00:22 0.80% |?                                                                                                    |  1/125 Time: 0:00:23 0.80% |?                                                                                                    |  1/125 Time: 0:00:24 0.80% |?                                                                                                    |  1/125 Time: 0:00:25 0.80% |?                                                                                                    |  1/125 Time: 0:00:26 0.80% |?                                                                                                    |  1/125 Time: 0:00:27 0.80% |?                                                                                                    |  1/125 Time: 0:00:28 0.80% |?                                                                                                    |  1/125 Time: 0:00:29 0.80% |?                                                                                                    |  1/125 Time: 0:00:30 1.60% |??                                                                                                   |  2/125 Time: 0:00:31 4.80% |?????                                                                                                |  6/125 Time: 0:00:32 11.20% |????????????                                                                                         |  14/125 Time: 0:00:33 21.60% |??????????????????????                                                                               |  27/125 Time: 0:00:34 28.80% |?????????????????????????????                                                                        |  36/125 Time: 0:00:35 41.60% |??????????????????????????????????????????                                                           |  52/125 Time: 0:00:36 52.80% |?????????????????????????????????????????????????????                                                |  66/125 Time: 0:00:37 72.00% |?????????????????????????????????????????????????????????????????????????                            |  90/125 Time: 0:00:38 97.60% |??????????????????????????????????????????????????????????????????????????????????????????????????   |  122/125 Time: 0:00:39 100.00% |?????????????????????????????????????????????????????????????????????????????????????????????????????|  125/125 Time: 0:00:40

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:01,288
Average Time spent in bucket creation: 00:00:00,167
Average Time spent in key creation: 00:00:02,077
Average Time spent in key write: 00:00:35,433
Total bytes written: 1280000
Total Execution time: 00:00:42,746
***************************************************</msg>
<status status="PASS" endtime="20190829 08:14:40.581" starttime="20190829 08:14:40.579"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190829 08:14:40.582" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190829 08:14:40.582" starttime="20190829 08:14:40.581"></status>
</kw>
<msg timestamp="20190829 08:14:40.583" level="INFO">${result} = 
 0.00% |?                                                                                                    |  0/125 Time: 0:00:00 0.00% |?                                                         ...</msg>
<status status="PASS" endtime="20190829 08:14:40.583" starttime="20190829 08:13:55.288"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20190829 08:14:40.589" starttime="20190829 08:14:40.588"></status>
</kw>
<status status="PASS" endtime="20190829 08:14:40.589" starttime="20190829 08:14:40.583"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20190829 08:14:40.590" starttime="20190829 08:14:40.589"></status>
</kw>
<status status="PASS" endtime="20190829 08:14:40.590" critical="yes" starttime="20190829 08:13:55.287"></status>
</test>
<test id="s1-s1-t2" name="Testing audit parser">
<kw name="Get Environment Variable" library="OperatingSystem">
<doc>Returns the value of an environment variable with the given name.</doc>
<arguments>
<arg>HADOOP_LOG_DIR</arg>
<arg>/var/log/hadoop</arg>
</arguments>
<assign>
<var>${logdir}</var>
</assign>
<msg timestamp="20190829 08:14:40.593" level="INFO">${logdir} = /var/log/hadoop</msg>
<status status="PASS" endtime="20190829 08:14:40.593" starttime="20190829 08:14:40.592"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ls -t "${logdir}" | grep om-audit | head -1</arg>
</arguments>
<assign>
<var>${logfile}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190829 08:14:40.596" level="INFO">Running command 'ls -t "/var/log/hadoop" | grep om-audit | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20190829 08:14:40.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20190829 08:14:40.758" level="INFO">${output} = om-audit-a15bf869147e.log</msg>
<status status="PASS" endtime="20190829 08:14:40.758" starttime="20190829 08:14:40.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190829 08:14:40.760" level="INFO">om-audit-a15bf869147e.log</msg>
<status status="PASS" endtime="20190829 08:14:40.760" starttime="20190829 08:14:40.759"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190829 08:14:40.761" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190829 08:14:40.762" starttime="20190829 08:14:40.761"></status>
</kw>
<msg timestamp="20190829 08:14:40.762" level="INFO">${logfile} = om-audit-a15bf869147e.log</msg>
<status status="PASS" endtime="20190829 08:14:40.762" starttime="20190829 08:14:40.593"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" load "${logdir}/${logfile}"</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190829 08:14:40.766" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" load "/var/log/hadoop/om-audit-a15bf869147e.log" 2&gt;&amp;1'.</msg>
<msg timestamp="20190829 08:15:14.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20190829 08:15:14.056" level="INFO">${output} = /var/log/hadoop/om-audit-a15bf869147e.log has been loaded successfully</msg>
<status status="PASS" endtime="20190829 08:15:14.056" starttime="20190829 08:14:40.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190829 08:15:14.057" level="INFO">/var/log/hadoop/om-audit-a15bf869147e.log has been loaded successfully</msg>
<status status="PASS" endtime="20190829 08:15:14.057" starttime="20190829 08:15:14.056"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190829 08:15:14.058" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190829 08:15:14.058" starttime="20190829 08:15:14.057"></status>
</kw>
<status status="PASS" endtime="20190829 08:15:14.058" starttime="20190829 08:14:40.763"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" template top5cmds</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190829 08:15:14.061" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" template top5cmds 2&gt;&amp;1'.</msg>
<msg timestamp="20190829 08:15:14.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20190829 08:15:14.975" level="INFO">${output} = ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190829 08:15:14.975" starttime="20190829 08:15:14.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190829 08:15:14.976" level="INFO">ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190829 08:15:14.977" starttime="20190829 08:15:14.976"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190829 08:15:14.977" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190829 08:15:14.977" starttime="20190829 08:15:14.977"></status>
</kw>
<msg timestamp="20190829 08:15:14.978" level="INFO">${result} = ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190829 08:15:14.978" starttime="20190829 08:15:14.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ALLOCATE_KEY</arg>
</arguments>
<status status="PASS" endtime="20190829 08:15:14.978" starttime="20190829 08:15:14.978"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" template top5users</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190829 08:15:14.981" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" template top5users 2&gt;&amp;1'.</msg>
<msg timestamp="20190829 08:15:16.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20190829 08:15:16.847" level="INFO">${output} = hadoop	280	
</msg>
<status status="PASS" endtime="20190829 08:15:16.847" starttime="20190829 08:15:14.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190829 08:15:16.849" level="INFO">hadoop	280	
</msg>
<status status="PASS" endtime="20190829 08:15:16.849" starttime="20190829 08:15:16.848"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190829 08:15:16.850" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190829 08:15:16.850" starttime="20190829 08:15:16.849"></status>
</kw>
<msg timestamp="20190829 08:15:16.851" level="INFO">${result} = hadoop	280	
</msg>
<status status="PASS" endtime="20190829 08:15:16.851" starttime="20190829 08:15:14.979"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Set username</arg>
</arguments>
<status status="PASS" endtime="20190829 08:15:16.852" starttime="20190829 08:15:16.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${user}</arg>
</arguments>
<status status="PASS" endtime="20190829 08:15:16.853" starttime="20190829 08:15:16.852"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'"</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190829 08:15:16.857" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20190829 08:15:17.804" level="INFO">${rc} = 0</msg>
<msg timestamp="20190829 08:15:17.804" level="INFO">${output} = 5	
</msg>
<status status="PASS" endtime="20190829 08:15:17.804" starttime="20190829 08:15:16.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190829 08:15:17.806" level="INFO">5	
</msg>
<status status="PASS" endtime="20190829 08:15:17.806" starttime="20190829 08:15:17.805"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190829 08:15:17.807" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190829 08:15:17.807" starttime="20190829 08:15:17.806"></status>
</kw>
<msg timestamp="20190829 08:15:17.808" level="INFO">${result} = 5	
</msg>
<status status="PASS" endtime="20190829 08:15:17.808" starttime="20190829 08:15:16.853"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190829 08:15:17.809" level="INFO">${result} = 5.0</msg>
<status status="PASS" endtime="20190829 08:15:17.809" starttime="20190829 08:15:17.808"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}&gt;${count}</arg>
</arguments>
<status status="PASS" endtime="20190829 08:15:17.810" starttime="20190829 08:15:17.809"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'"</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190829 08:15:17.814" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20190829 08:15:18.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20190829 08:15:18.645" level="INFO">${output} = 25	
</msg>
<status status="PASS" endtime="20190829 08:15:18.645" starttime="20190829 08:15:17.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190829 08:15:18.647" level="INFO">25	
</msg>
<status status="PASS" endtime="20190829 08:15:18.647" starttime="20190829 08:15:18.646"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190829 08:15:18.648" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190829 08:15:18.648" starttime="20190829 08:15:18.647"></status>
</kw>
<msg timestamp="20190829 08:15:18.649" level="INFO">${result} = 25	
</msg>
<status status="PASS" endtime="20190829 08:15:18.649" starttime="20190829 08:15:17.810"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190829 08:15:18.650" level="INFO">${result} = 25.0</msg>
<status status="PASS" endtime="20190829 08:15:18.650" starttime="20190829 08:15:18.649"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}&gt;${count}</arg>
</arguments>
<status status="PASS" endtime="20190829 08:15:18.652" starttime="20190829 08:15:18.651"></status>
</kw>
<status status="PASS" endtime="20190829 08:15:18.652" critical="yes" starttime="20190829 08:14:40.591"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20190829 08:15:18.653" starttime="20190829 08:13:55.261"></status>
</suite>
<status status="PASS" endtime="20190829 08:15:18.657" starttime="20190829 08:13:55.231"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-topology-auditparser" pass="2">ozone-topology-auditparser</stat>
<stat fail="0" id="s1-s1" name="Auditparser" pass="2">ozone-topology-auditparser.Auditparser</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
