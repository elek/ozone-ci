<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20190820 20:51:40.062" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/auditparser" id="s1" name="ozone-auditparser">
<suite source="/opt/hadoop/smoketest/auditparser/auditparser.robot" id="s1-s1" name="Auditparser">
<test id="s1-s1-t1" name="Initiating freon to generate data">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190820 20:51:40.115" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 2&gt;&amp;1'.</msg>
<msg timestamp="20190820 20:51:53.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20190820 20:51:53.408" level="INFO">${output} = 2019-08-20 20:51:41 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2019-08-20 20:51:41 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2019...</msg>
<status status="PASS" endtime="20190820 20:51:53.408" starttime="20190820 20:51:40.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190820 20:51:53.409" level="INFO">2019-08-20 20:51:41 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2019-08-20 20:51:41 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2019-08-20 20:51:41 INFO  MetricsSystemImpl:191 - ozone-freon metrics system started
2019-08-20 20:51:42 INFO  RandomKeyGenerator:275 - Number of Threads: 1
2019-08-20 20:51:42 INFO  RandomKeyGenerator:280 - Number of Volumes: 5.
2019-08-20 20:51:42 INFO  RandomKeyGenerator:281 - Number of Buckets per Volume: 5.
2019-08-20 20:51:42 INFO  RandomKeyGenerator:282 - Number of Keys per Bucket: 5.
2019-08-20 20:51:42 INFO  RandomKeyGenerator:283 - Key size: 10240 bytes
2019-08-20 20:51:42 INFO  RandomKeyGenerator:284 - Buffer size: 4096 bytes
2019-08-20 20:51:42 INFO  RandomKeyGenerator:304 - Starting progress bar Thread.

 0.00% |?                                                                                                    |  0/125 Time: 0:00:002019-08-20 20:51:42 INFO  RpcClient:292 - Creating Volume: vol-0-66420, with hadoop as owner.
2019-08-20 20:51:43 INFO  RpcClient:292 - Creating Volume: vol-1-50104, with hadoop as owner.
2019-08-20 20:51:43 INFO  RpcClient:292 - Creating Volume: vol-2-81231, with hadoop as owner.
2019-08-20 20:51:43 INFO  RpcClient:292 - Creating Volume: vol-3-93687, with hadoop as owner.
2019-08-20 20:51:43 INFO  RpcClient:292 - Creating Volume: vol-4-11462, with hadoop as owner.
2019-08-20 20:51:43 INFO  RpcClient:431 - Creating Bucket: vol-0-66420/bucket-0-83739, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 20:51:43 INFO  RpcClient:431 - Creating Bucket: vol-1-50104/bucket-0-00472, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 20:51:43 INFO  RpcClient:431 - Creating Bucket: vol-2-81231/bucket-0-36164, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 20:51:43 INFO  RpcClient:431 - Creating Bucket: vol-3-93687/bucket-0-65032, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 20:51:43 INFO  RpcClient:431 - Creating Bucket: vol-4-11462/bucket-0-67192, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 20:51:43 INFO  RpcClient:431 - Creating Bucket: vol-0-66420/bucket-1-36345, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 20:51:43 INFO  RpcClient:431 - Creating Bucket: vol-1-50104/bucket-1-86190, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 20:51:43 INFO  RpcClient:431 - Creating Bucket: vol-2-81231/bucket-1-90278, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 20:51:43 INFO  RpcClient:431 - Creating Bucket: vol-3-93687/bucket-1-07530, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 20:51:43 INFO  RpcClient:431 - Creating Bucket: vol-4-11462/bucket-1-87817, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 20:51:43 INFO  RpcClient:431 - Creating Bucket: vol-0-66420/bucket-2-14891, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 20:51:43 INFO  RpcClient:431 - Creating Bucket: vol-1-50104/bucket-2-47121, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 20:51:43 INFO  RpcClient:431 - Creating Bucket: vol-2-81231/bucket-2-68057, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 20:51:43 INFO  RpcClient:431 - Creating Bucket: vol-3-93687/bucket-2-84632, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 20:51:43 INFO  RpcClient:431 - Creating Bucket: vol-4-11462/bucket-2-96200, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 20:51:43 INFO  RpcClient:431 - Creating Bucket: vol-0-66420/bucket-3-75019, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 20:51:43 INFO  RpcClient:431 - Creating Bucket: vol-1-50104/bucket-3-33745, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 20:51:43 INFO  RpcClient:431 - Creating Bucket: vol-2-81231/bucket-3-55268, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 20:51:43 INFO  RpcClient:431 - Creating Bucket: vol-3-93687/bucket-3-36675, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 20:51:43 INFO  RpcClient:431 - Creating Bucket: vol-4-11462/bucket-3-06977, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 20:51:43 INFO  RpcClient:431 - Creating Bucket: vol-0-66420/bucket-4-08118, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 20:51:43 INFO  RpcClient:431 - Creating Bucket: vol-1-50104/bucket-4-08971, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 20:51:43 INFO  RpcClient:431 - Creating Bucket: vol-2-81231/bucket-4-46619, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 20:51:43 INFO  RpcClient:431 - Creating Bucket: vol-3-93687/bucket-4-38394, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 20:51:43 INFO  RpcClient:431 - Creating Bucket: vol-4-11462/bucket-4-02911, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 20:51:43 WARN  MetricsSystemImpl:151 - ozone-freon metrics system already initialized!
 0.00% |?                                                                                                    |  0/125 Time: 0:00:01WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil (file:/opt/hadoop/share/ozone/lib/ratis-thirdparty-misc-0.2.0.jar) to field java.nio.Buffer.address
WARNING: Please consider reporting this to the maintainers of org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
 1.60% |??                                                                                                   |  2/125 Time: 0:00:02 22.40% |???????????????????????                                                                              |  28/125 Time: 0:00:03 45.60% |??????????????????????????????????????????????                                                       |  57/125 Time: 0:00:04 79.20% |????????????????????????????????????????????????????????????????????????????????                     |  99/125 Time: 0:00:05 100.00% |?????????????????????????????????????????????????????????????????????????????????????????????????????|  125/125 Time: 0:00:06

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,097
Average Time spent in bucket creation: 00:00:00,075
Average Time spent in key creation: 00:00:00,857
Average Time spent in key write: 00:00:04,432
Total bytes written: 1280000
Total Execution time: 00:00:11,344
***************************************************</msg>
<status status="PASS" endtime="20190820 20:51:53.410" starttime="20190820 20:51:53.408"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190820 20:51:53.411" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 20:51:53.411" starttime="20190820 20:51:53.410"></status>
</kw>
<msg timestamp="20190820 20:51:53.411" level="INFO">${result} = 2019-08-20 20:51:41 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2019-08-20 20:51:41 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2019...</msg>
<status status="PASS" endtime="20190820 20:51:53.411" starttime="20190820 20:51:40.113"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20190820 20:51:53.416" starttime="20190820 20:51:53.415"></status>
</kw>
<status status="PASS" endtime="20190820 20:51:53.416" starttime="20190820 20:51:53.412"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20190820 20:51:53.417" starttime="20190820 20:51:53.416"></status>
</kw>
<status status="PASS" endtime="20190820 20:51:53.417" critical="yes" starttime="20190820 20:51:40.112"></status>
</test>
<test id="s1-s1-t2" name="Testing audit parser">
<kw name="Get Environment Variable" library="OperatingSystem">
<doc>Returns the value of an environment variable with the given name.</doc>
<arguments>
<arg>HADOOP_LOG_DIR</arg>
<arg>/var/log/hadoop</arg>
</arguments>
<assign>
<var>${logdir}</var>
</assign>
<msg timestamp="20190820 20:51:53.419" level="INFO">${logdir} = /var/log/hadoop</msg>
<status status="PASS" endtime="20190820 20:51:53.419" starttime="20190820 20:51:53.418"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ls -t "${logdir}" | grep om-audit | head -1</arg>
</arguments>
<assign>
<var>${logfile}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190820 20:51:53.422" level="INFO">Running command 'ls -t "/var/log/hadoop" | grep om-audit | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20190820 20:51:53.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20190820 20:51:53.432" level="INFO">${output} = om-audit-519c2c6a0944.log</msg>
<status status="PASS" endtime="20190820 20:51:53.432" starttime="20190820 20:51:53.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190820 20:51:53.433" level="INFO">om-audit-519c2c6a0944.log</msg>
<status status="PASS" endtime="20190820 20:51:53.434" starttime="20190820 20:51:53.432"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190820 20:51:53.434" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 20:51:53.435" starttime="20190820 20:51:53.434"></status>
</kw>
<msg timestamp="20190820 20:51:53.435" level="INFO">${logfile} = om-audit-519c2c6a0944.log</msg>
<status status="PASS" endtime="20190820 20:51:53.435" starttime="20190820 20:51:53.419"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" load "${logdir}/${logfile}"</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190820 20:51:53.439" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" load "/var/log/hadoop/om-audit-519c2c6a0944.log" 2&gt;&amp;1'.</msg>
<msg timestamp="20190820 20:52:07.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20190820 20:52:07.001" level="INFO">${output} = /var/log/hadoop/om-audit-519c2c6a0944.log has been loaded successfully</msg>
<status status="PASS" endtime="20190820 20:52:07.001" starttime="20190820 20:51:53.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190820 20:52:07.002" level="INFO">/var/log/hadoop/om-audit-519c2c6a0944.log has been loaded successfully</msg>
<status status="PASS" endtime="20190820 20:52:07.003" starttime="20190820 20:52:07.002"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190820 20:52:07.003" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 20:52:07.003" starttime="20190820 20:52:07.003"></status>
</kw>
<status status="PASS" endtime="20190820 20:52:07.004" starttime="20190820 20:51:53.436"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" template top5cmds</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190820 20:52:07.006" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" template top5cmds 2&gt;&amp;1'.</msg>
<msg timestamp="20190820 20:52:07.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20190820 20:52:07.928" level="INFO">${output} = ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190820 20:52:07.928" starttime="20190820 20:52:07.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190820 20:52:07.930" level="INFO">ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190820 20:52:07.930" starttime="20190820 20:52:07.929"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190820 20:52:07.931" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 20:52:07.931" starttime="20190820 20:52:07.930"></status>
</kw>
<msg timestamp="20190820 20:52:07.932" level="INFO">${result} = ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190820 20:52:07.932" starttime="20190820 20:52:07.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ALLOCATE_KEY</arg>
</arguments>
<status status="PASS" endtime="20190820 20:52:07.933" starttime="20190820 20:52:07.932"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" template top5users</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190820 20:52:07.936" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" template top5users 2&gt;&amp;1'.</msg>
<msg timestamp="20190820 20:52:08.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20190820 20:52:08.775" level="INFO">${output} = hadoop	280	
</msg>
<status status="PASS" endtime="20190820 20:52:08.775" starttime="20190820 20:52:07.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190820 20:52:08.776" level="INFO">hadoop	280	
</msg>
<status status="PASS" endtime="20190820 20:52:08.776" starttime="20190820 20:52:08.776"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190820 20:52:08.777" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 20:52:08.777" starttime="20190820 20:52:08.776"></status>
</kw>
<msg timestamp="20190820 20:52:08.777" level="INFO">${result} = hadoop	280	
</msg>
<status status="PASS" endtime="20190820 20:52:08.777" starttime="20190820 20:52:07.933"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Set username</arg>
</arguments>
<status status="PASS" endtime="20190820 20:52:08.778" starttime="20190820 20:52:08.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${user}</arg>
</arguments>
<status status="PASS" endtime="20190820 20:52:08.779" starttime="20190820 20:52:08.778"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'"</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190820 20:52:08.782" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20190820 20:52:09.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20190820 20:52:09.590" level="INFO">${output} = 5	
</msg>
<status status="PASS" endtime="20190820 20:52:09.591" starttime="20190820 20:52:08.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190820 20:52:09.592" level="INFO">5	
</msg>
<status status="PASS" endtime="20190820 20:52:09.592" starttime="20190820 20:52:09.591"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190820 20:52:09.592" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 20:52:09.592" starttime="20190820 20:52:09.592"></status>
</kw>
<msg timestamp="20190820 20:52:09.593" level="INFO">${result} = 5	
</msg>
<status status="PASS" endtime="20190820 20:52:09.593" starttime="20190820 20:52:08.779"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190820 20:52:09.593" level="INFO">${result} = 5.0</msg>
<status status="PASS" endtime="20190820 20:52:09.594" starttime="20190820 20:52:09.593"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}&gt;${count}</arg>
</arguments>
<status status="PASS" endtime="20190820 20:52:09.594" starttime="20190820 20:52:09.594"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'"</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190820 20:52:09.597" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20190820 20:52:10.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20190820 20:52:10.344" level="INFO">${output} = 25	
</msg>
<status status="PASS" endtime="20190820 20:52:10.344" starttime="20190820 20:52:09.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190820 20:52:10.346" level="INFO">25	
</msg>
<status status="PASS" endtime="20190820 20:52:10.346" starttime="20190820 20:52:10.345"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190820 20:52:10.347" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 20:52:10.347" starttime="20190820 20:52:10.346"></status>
</kw>
<msg timestamp="20190820 20:52:10.347" level="INFO">${result} = 25	
</msg>
<status status="PASS" endtime="20190820 20:52:10.348" starttime="20190820 20:52:09.595"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190820 20:52:10.348" level="INFO">${result} = 25.0</msg>
<status status="PASS" endtime="20190820 20:52:10.348" starttime="20190820 20:52:10.348"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}&gt;${count}</arg>
</arguments>
<status status="PASS" endtime="20190820 20:52:10.349" starttime="20190820 20:52:10.349"></status>
</kw>
<status status="PASS" endtime="20190820 20:52:10.350" critical="yes" starttime="20190820 20:51:53.418"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20190820 20:52:10.351" starttime="20190820 20:51:40.088"></status>
</suite>
<status status="PASS" endtime="20190820 20:52:10.354" starttime="20190820 20:51:40.063"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-auditparser" pass="2">ozone-auditparser</stat>
<stat fail="0" id="s1-s1" name="Auditparser" pass="2">ozone-auditparser.Auditparser</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
