<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20190821 19:28:24.114" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/auditparser" id="s1" name="ozone-auditparser">
<suite source="/opt/hadoop/smoketest/auditparser/auditparser.robot" id="s1-s1" name="Auditparser">
<test id="s1-s1-t1" name="Initiating freon to generate data">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190821 19:28:24.169" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 2&gt;&amp;1'.</msg>
<msg timestamp="20190821 19:28:37.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20190821 19:28:37.275" level="INFO">${output} = 2019-08-21 19:28:25 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2019-08-21 19:28:25 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2019...</msg>
<status status="PASS" endtime="20190821 19:28:37.275" starttime="20190821 19:28:24.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190821 19:28:37.277" level="INFO">2019-08-21 19:28:25 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2019-08-21 19:28:25 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2019-08-21 19:28:25 INFO  MetricsSystemImpl:191 - ozone-freon metrics system started
2019-08-21 19:28:26 INFO  RandomKeyGenerator:275 - Number of Threads: 1
2019-08-21 19:28:26 INFO  RandomKeyGenerator:280 - Number of Volumes: 5.
2019-08-21 19:28:26 INFO  RandomKeyGenerator:281 - Number of Buckets per Volume: 5.
2019-08-21 19:28:26 INFO  RandomKeyGenerator:282 - Number of Keys per Bucket: 5.
2019-08-21 19:28:26 INFO  RandomKeyGenerator:283 - Key size: 10240 bytes
2019-08-21 19:28:26 INFO  RandomKeyGenerator:284 - Buffer size: 4096 bytes
2019-08-21 19:28:26 INFO  RandomKeyGenerator:304 - Starting progress bar Thread.

 0.00% |?                                                                                                    |  0/125 Time: 0:00:002019-08-21 19:28:26 INFO  RpcClient:292 - Creating Volume: vol-0-43255, with hadoop as owner.
2019-08-21 19:28:26 INFO  RpcClient:292 - Creating Volume: vol-1-80815, with hadoop as owner.
2019-08-21 19:28:26 INFO  RpcClient:292 - Creating Volume: vol-2-51323, with hadoop as owner.
2019-08-21 19:28:26 INFO  RpcClient:292 - Creating Volume: vol-3-65649, with hadoop as owner.
2019-08-21 19:28:26 INFO  RpcClient:292 - Creating Volume: vol-4-61292, with hadoop as owner.
2019-08-21 19:28:26 INFO  RpcClient:431 - Creating Bucket: vol-0-43255/bucket-0-59121, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 19:28:26 INFO  RpcClient:431 - Creating Bucket: vol-1-80815/bucket-0-16989, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 19:28:26 INFO  RpcClient:431 - Creating Bucket: vol-2-51323/bucket-0-78868, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 19:28:26 INFO  RpcClient:431 - Creating Bucket: vol-3-65649/bucket-0-28290, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 19:28:26 INFO  RpcClient:431 - Creating Bucket: vol-4-61292/bucket-0-26475, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 19:28:26 INFO  RpcClient:431 - Creating Bucket: vol-0-43255/bucket-1-45577, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 19:28:26 INFO  RpcClient:431 - Creating Bucket: vol-1-80815/bucket-1-57655, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 19:28:26 INFO  RpcClient:431 - Creating Bucket: vol-2-51323/bucket-1-46633, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 19:28:26 INFO  RpcClient:431 - Creating Bucket: vol-3-65649/bucket-1-24823, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 19:28:26 INFO  RpcClient:431 - Creating Bucket: vol-4-61292/bucket-1-36979, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 19:28:26 INFO  RpcClient:431 - Creating Bucket: vol-0-43255/bucket-2-09470, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 19:28:26 INFO  RpcClient:431 - Creating Bucket: vol-1-80815/bucket-2-77379, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 19:28:26 INFO  RpcClient:431 - Creating Bucket: vol-2-51323/bucket-2-11341, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 19:28:26 INFO  RpcClient:431 - Creating Bucket: vol-3-65649/bucket-2-55007, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 19:28:26 INFO  RpcClient:431 - Creating Bucket: vol-4-61292/bucket-2-27536, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 19:28:26 INFO  RpcClient:431 - Creating Bucket: vol-0-43255/bucket-3-84456, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 19:28:26 INFO  RpcClient:431 - Creating Bucket: vol-1-80815/bucket-3-74913, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 19:28:26 INFO  RpcClient:431 - Creating Bucket: vol-2-51323/bucket-3-66639, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 19:28:26 INFO  RpcClient:431 - Creating Bucket: vol-3-65649/bucket-3-21475, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 19:28:26 INFO  RpcClient:431 - Creating Bucket: vol-4-61292/bucket-3-59075, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 19:28:26 INFO  RpcClient:431 - Creating Bucket: vol-0-43255/bucket-4-29258, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 19:28:26 INFO  RpcClient:431 - Creating Bucket: vol-1-80815/bucket-4-42041, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 19:28:26 INFO  RpcClient:431 - Creating Bucket: vol-2-51323/bucket-4-63104, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 19:28:26 INFO  RpcClient:431 - Creating Bucket: vol-3-65649/bucket-4-89954, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 19:28:26 INFO  RpcClient:431 - Creating Bucket: vol-4-61292/bucket-4-85244, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 19:28:27 WARN  MetricsSystemImpl:151 - ozone-freon metrics system already initialized!
 0.00% |?                                                                                                    |  0/125 Time: 0:00:01WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil (file:/opt/hadoop/share/ozone/lib/ratis-thirdparty-misc-0.2.0.jar) to field java.nio.Buffer.address
WARNING: Please consider reporting this to the maintainers of org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
 1.60% |??                                                                                                   |  2/125 Time: 0:00:02 24.80% |?????????????????????????                                                                            |  31/125 Time: 0:00:03 56.00% |?????????????????????????????????????????????????????????                                            |  70/125 Time: 0:00:04 87.20% |????????????????????????????????????????????????????????????????????????????????????????             |  109/125 Time: 0:00:05 100.00% |?????????????????????????????????????????????????????????????????????????????????????????????????????|  125/125 Time: 0:00:06

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,075
Average Time spent in bucket creation: 00:00:00,075
Average Time spent in key creation: 00:00:00,908
Average Time spent in key write: 00:00:04,230
Total bytes written: 1280000
Total Execution time: 00:00:11,323
***************************************************</msg>
<status status="PASS" endtime="20190821 19:28:37.277" starttime="20190821 19:28:37.276"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190821 19:28:37.278" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190821 19:28:37.278" starttime="20190821 19:28:37.277"></status>
</kw>
<msg timestamp="20190821 19:28:37.278" level="INFO">${result} = 2019-08-21 19:28:25 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2019-08-21 19:28:25 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2019...</msg>
<status status="PASS" endtime="20190821 19:28:37.278" starttime="20190821 19:28:24.167"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20190821 19:28:37.282" starttime="20190821 19:28:37.281"></status>
</kw>
<status status="PASS" endtime="20190821 19:28:37.282" starttime="20190821 19:28:37.279"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20190821 19:28:37.282" starttime="20190821 19:28:37.282"></status>
</kw>
<status status="PASS" endtime="20190821 19:28:37.283" critical="yes" starttime="20190821 19:28:24.167"></status>
</test>
<test id="s1-s1-t2" name="Testing audit parser">
<kw name="Get Environment Variable" library="OperatingSystem">
<doc>Returns the value of an environment variable with the given name.</doc>
<arguments>
<arg>HADOOP_LOG_DIR</arg>
<arg>/var/log/hadoop</arg>
</arguments>
<assign>
<var>${logdir}</var>
</assign>
<msg timestamp="20190821 19:28:37.284" level="INFO">${logdir} = /var/log/hadoop</msg>
<status status="PASS" endtime="20190821 19:28:37.284" starttime="20190821 19:28:37.284"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ls -t "${logdir}" | grep om-audit | head -1</arg>
</arguments>
<assign>
<var>${logfile}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190821 19:28:37.287" level="INFO">Running command 'ls -t "/var/log/hadoop" | grep om-audit | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20190821 19:28:37.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20190821 19:28:37.314" level="INFO">${output} = om-audit-a4d73e398141.log</msg>
<status status="PASS" endtime="20190821 19:28:37.314" starttime="20190821 19:28:37.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190821 19:28:37.315" level="INFO">om-audit-a4d73e398141.log</msg>
<status status="PASS" endtime="20190821 19:28:37.315" starttime="20190821 19:28:37.314"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190821 19:28:37.315" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190821 19:28:37.316" starttime="20190821 19:28:37.315"></status>
</kw>
<msg timestamp="20190821 19:28:37.316" level="INFO">${logfile} = om-audit-a4d73e398141.log</msg>
<status status="PASS" endtime="20190821 19:28:37.316" starttime="20190821 19:28:37.285"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" load "${logdir}/${logfile}"</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190821 19:28:37.318" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" load "/var/log/hadoop/om-audit-a4d73e398141.log" 2&gt;&amp;1'.</msg>
<msg timestamp="20190821 19:28:51.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20190821 19:28:51.900" level="INFO">${output} = /var/log/hadoop/om-audit-a4d73e398141.log has been loaded successfully</msg>
<status status="PASS" endtime="20190821 19:28:51.900" starttime="20190821 19:28:37.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190821 19:28:51.901" level="INFO">/var/log/hadoop/om-audit-a4d73e398141.log has been loaded successfully</msg>
<status status="PASS" endtime="20190821 19:28:51.901" starttime="20190821 19:28:51.901"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190821 19:28:51.902" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190821 19:28:51.902" starttime="20190821 19:28:51.902"></status>
</kw>
<status status="PASS" endtime="20190821 19:28:51.903" starttime="20190821 19:28:37.316"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" template top5cmds</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190821 19:28:51.906" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" template top5cmds 2&gt;&amp;1'.</msg>
<msg timestamp="20190821 19:28:52.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20190821 19:28:52.736" level="INFO">${output} = ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190821 19:28:52.736" starttime="20190821 19:28:51.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190821 19:28:52.737" level="INFO">ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190821 19:28:52.737" starttime="20190821 19:28:52.736"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190821 19:28:52.738" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190821 19:28:52.738" starttime="20190821 19:28:52.738"></status>
</kw>
<msg timestamp="20190821 19:28:52.739" level="INFO">${result} = ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190821 19:28:52.739" starttime="20190821 19:28:51.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ALLOCATE_KEY</arg>
</arguments>
<status status="PASS" endtime="20190821 19:28:52.740" starttime="20190821 19:28:52.739"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" template top5users</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190821 19:28:52.743" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" template top5users 2&gt;&amp;1'.</msg>
<msg timestamp="20190821 19:28:53.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20190821 19:28:53.611" level="INFO">${output} = hadoop	280	
</msg>
<status status="PASS" endtime="20190821 19:28:53.611" starttime="20190821 19:28:52.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190821 19:28:53.613" level="INFO">hadoop	280	
</msg>
<status status="PASS" endtime="20190821 19:28:53.613" starttime="20190821 19:28:53.612"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190821 19:28:53.614" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190821 19:28:53.614" starttime="20190821 19:28:53.613"></status>
</kw>
<msg timestamp="20190821 19:28:53.615" level="INFO">${result} = hadoop	280	
</msg>
<status status="PASS" endtime="20190821 19:28:53.615" starttime="20190821 19:28:52.740"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Set username</arg>
</arguments>
<status status="PASS" endtime="20190821 19:28:53.616" starttime="20190821 19:28:53.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${user}</arg>
</arguments>
<status status="PASS" endtime="20190821 19:28:53.617" starttime="20190821 19:28:53.616"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'"</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190821 19:28:53.621" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20190821 19:28:54.517" level="INFO">${rc} = 0</msg>
<msg timestamp="20190821 19:28:54.517" level="INFO">${output} = 5	
</msg>
<status status="PASS" endtime="20190821 19:28:54.517" starttime="20190821 19:28:53.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190821 19:28:54.519" level="INFO">5	
</msg>
<status status="PASS" endtime="20190821 19:28:54.519" starttime="20190821 19:28:54.518"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190821 19:28:54.520" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190821 19:28:54.520" starttime="20190821 19:28:54.519"></status>
</kw>
<msg timestamp="20190821 19:28:54.520" level="INFO">${result} = 5	
</msg>
<status status="PASS" endtime="20190821 19:28:54.520" starttime="20190821 19:28:53.617"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190821 19:28:54.522" level="INFO">${result} = 5.0</msg>
<status status="PASS" endtime="20190821 19:28:54.522" starttime="20190821 19:28:54.521"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}&gt;${count}</arg>
</arguments>
<status status="PASS" endtime="20190821 19:28:54.523" starttime="20190821 19:28:54.522"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'"</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190821 19:28:54.526" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20190821 19:28:55.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20190821 19:28:55.442" level="INFO">${output} = 25	
</msg>
<status status="PASS" endtime="20190821 19:28:55.442" starttime="20190821 19:28:54.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190821 19:28:55.443" level="INFO">25	
</msg>
<status status="PASS" endtime="20190821 19:28:55.444" starttime="20190821 19:28:55.443"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190821 19:28:55.444" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190821 19:28:55.444" starttime="20190821 19:28:55.444"></status>
</kw>
<msg timestamp="20190821 19:28:55.445" level="INFO">${result} = 25	
</msg>
<status status="PASS" endtime="20190821 19:28:55.445" starttime="20190821 19:28:54.523"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190821 19:28:55.445" level="INFO">${result} = 25.0</msg>
<status status="PASS" endtime="20190821 19:28:55.445" starttime="20190821 19:28:55.445"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}&gt;${count}</arg>
</arguments>
<status status="PASS" endtime="20190821 19:28:55.446" starttime="20190821 19:28:55.446"></status>
</kw>
<status status="PASS" endtime="20190821 19:28:55.446" critical="yes" starttime="20190821 19:28:37.283"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20190821 19:28:55.447" starttime="20190821 19:28:24.141"></status>
</suite>
<status status="PASS" endtime="20190821 19:28:55.449" starttime="20190821 19:28:24.115"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-auditparser" pass="2">ozone-auditparser</stat>
<stat fail="0" id="s1-s1" name="Auditparser" pass="2">ozone-auditparser.Auditparser</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
