<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20190821 06:56:36.267" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/auditparser" id="s1" name="ozone-auditparser">
<suite source="/opt/hadoop/smoketest/auditparser/auditparser.robot" id="s1-s1" name="Auditparser">
<test id="s1-s1-t1" name="Initiating freon to generate data">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190821 06:56:36.327" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 2&gt;&amp;1'.</msg>
<msg timestamp="20190821 06:56:49.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20190821 06:56:49.358" level="INFO">${output} = 2019-08-21 06:56:37 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2019-08-21 06:56:37 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2019...</msg>
<status status="PASS" endtime="20190821 06:56:49.358" starttime="20190821 06:56:36.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190821 06:56:49.359" level="INFO">2019-08-21 06:56:37 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2019-08-21 06:56:37 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2019-08-21 06:56:37 INFO  MetricsSystemImpl:191 - ozone-freon metrics system started
2019-08-21 06:56:38 INFO  RandomKeyGenerator:275 - Number of Threads: 1
2019-08-21 06:56:38 INFO  RandomKeyGenerator:280 - Number of Volumes: 5.
2019-08-21 06:56:38 INFO  RandomKeyGenerator:281 - Number of Buckets per Volume: 5.
2019-08-21 06:56:38 INFO  RandomKeyGenerator:282 - Number of Keys per Bucket: 5.
2019-08-21 06:56:38 INFO  RandomKeyGenerator:283 - Key size: 10240 bytes
2019-08-21 06:56:38 INFO  RandomKeyGenerator:284 - Buffer size: 4096 bytes
2019-08-21 06:56:38 INFO  RandomKeyGenerator:304 - Starting progress bar Thread.

 0.00% |?                                                                                                    |  0/125 Time: 0:00:002019-08-21 06:56:38 INFO  RpcClient:292 - Creating Volume: vol-0-23251, with hadoop as owner.
2019-08-21 06:56:38 INFO  RpcClient:292 - Creating Volume: vol-1-52132, with hadoop as owner.
2019-08-21 06:56:38 INFO  RpcClient:292 - Creating Volume: vol-2-11282, with hadoop as owner.
2019-08-21 06:56:38 INFO  RpcClient:292 - Creating Volume: vol-3-05399, with hadoop as owner.
2019-08-21 06:56:38 INFO  RpcClient:292 - Creating Volume: vol-4-58110, with hadoop as owner.
2019-08-21 06:56:38 INFO  RpcClient:431 - Creating Bucket: vol-0-23251/bucket-0-16350, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 06:56:38 INFO  RpcClient:431 - Creating Bucket: vol-1-52132/bucket-0-96207, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 06:56:38 INFO  RpcClient:431 - Creating Bucket: vol-2-11282/bucket-0-30220, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 06:56:38 INFO  RpcClient:431 - Creating Bucket: vol-3-05399/bucket-0-13138, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 06:56:38 INFO  RpcClient:431 - Creating Bucket: vol-4-58110/bucket-0-14311, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 06:56:38 INFO  RpcClient:431 - Creating Bucket: vol-0-23251/bucket-1-80158, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 06:56:38 INFO  RpcClient:431 - Creating Bucket: vol-1-52132/bucket-1-39883, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 06:56:38 INFO  RpcClient:431 - Creating Bucket: vol-2-11282/bucket-1-07328, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 06:56:39 INFO  RpcClient:431 - Creating Bucket: vol-3-05399/bucket-1-74773, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 06:56:39 INFO  RpcClient:431 - Creating Bucket: vol-4-58110/bucket-1-48279, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 06:56:39 INFO  RpcClient:431 - Creating Bucket: vol-0-23251/bucket-2-50293, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 06:56:39 INFO  RpcClient:431 - Creating Bucket: vol-1-52132/bucket-2-85780, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 06:56:39 INFO  RpcClient:431 - Creating Bucket: vol-2-11282/bucket-2-71160, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 06:56:39 INFO  RpcClient:431 - Creating Bucket: vol-3-05399/bucket-2-75932, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 06:56:39 INFO  RpcClient:431 - Creating Bucket: vol-4-58110/bucket-2-76532, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 06:56:39 INFO  RpcClient:431 - Creating Bucket: vol-0-23251/bucket-3-14865, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 06:56:39 INFO  RpcClient:431 - Creating Bucket: vol-1-52132/bucket-3-30319, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 06:56:39 INFO  RpcClient:431 - Creating Bucket: vol-2-11282/bucket-3-40851, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 06:56:39 INFO  RpcClient:431 - Creating Bucket: vol-3-05399/bucket-3-65200, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 06:56:39 INFO  RpcClient:431 - Creating Bucket: vol-4-58110/bucket-3-47194, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 06:56:39 INFO  RpcClient:431 - Creating Bucket: vol-0-23251/bucket-4-04096, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 06:56:39 INFO  RpcClient:431 - Creating Bucket: vol-1-52132/bucket-4-78118, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 06:56:39 INFO  RpcClient:431 - Creating Bucket: vol-2-11282/bucket-4-42204, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 06:56:39 INFO  RpcClient:431 - Creating Bucket: vol-3-05399/bucket-4-62359, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 06:56:39 INFO  RpcClient:431 - Creating Bucket: vol-4-58110/bucket-4-70476, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 06:56:39 WARN  MetricsSystemImpl:151 - ozone-freon metrics system already initialized!
 0.00% |?                                                                                                    |  0/125 Time: 0:00:01WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil (file:/opt/hadoop/share/ozone/lib/ratis-thirdparty-misc-0.2.0.jar) to field java.nio.Buffer.address
WARNING: Please consider reporting this to the maintainers of org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
 2.40% |???                                                                                                  |  3/125 Time: 0:00:02 23.20% |????????????????????????                                                                             |  29/125 Time: 0:00:03 49.60% |??????????????????????????????????????????????????                                                   |  62/125 Time: 0:00:04 80.80% |?????????????????????????????????????????????????????????????????????????????????                    |  101/125 Time: 0:00:05 100.00% |?????????????????????????????????????????????????????????????????????????????????????????????????????|  125/125 Time: 0:00:06

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,073
Average Time spent in bucket creation: 00:00:00,075
Average Time spent in key creation: 00:00:00,833
Average Time spent in key write: 00:00:04,568
Total bytes written: 1280000
Total Execution time: 00:00:11,283
***************************************************</msg>
<status status="PASS" endtime="20190821 06:56:49.360" starttime="20190821 06:56:49.359"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190821 06:56:49.360" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190821 06:56:49.360" starttime="20190821 06:56:49.360"></status>
</kw>
<msg timestamp="20190821 06:56:49.361" level="INFO">${result} = 2019-08-21 06:56:37 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2019-08-21 06:56:37 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2019...</msg>
<status status="PASS" endtime="20190821 06:56:49.361" starttime="20190821 06:56:36.325"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20190821 06:56:49.364" starttime="20190821 06:56:49.363"></status>
</kw>
<status status="PASS" endtime="20190821 06:56:49.364" starttime="20190821 06:56:49.361"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20190821 06:56:49.364" starttime="20190821 06:56:49.364"></status>
</kw>
<status status="PASS" endtime="20190821 06:56:49.364" critical="yes" starttime="20190821 06:56:36.324"></status>
</test>
<test id="s1-s1-t2" name="Testing audit parser">
<kw name="Get Environment Variable" library="OperatingSystem">
<doc>Returns the value of an environment variable with the given name.</doc>
<arguments>
<arg>HADOOP_LOG_DIR</arg>
<arg>/var/log/hadoop</arg>
</arguments>
<assign>
<var>${logdir}</var>
</assign>
<msg timestamp="20190821 06:56:49.366" level="INFO">${logdir} = /var/log/hadoop</msg>
<status status="PASS" endtime="20190821 06:56:49.366" starttime="20190821 06:56:49.365"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ls -t "${logdir}" | grep om-audit | head -1</arg>
</arguments>
<assign>
<var>${logfile}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190821 06:56:49.368" level="INFO">Running command 'ls -t "/var/log/hadoop" | grep om-audit | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20190821 06:56:49.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20190821 06:56:49.392" level="INFO">${output} = om-audit-ff6fb0a1c57a.log</msg>
<status status="PASS" endtime="20190821 06:56:49.392" starttime="20190821 06:56:49.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190821 06:56:49.393" level="INFO">om-audit-ff6fb0a1c57a.log</msg>
<status status="PASS" endtime="20190821 06:56:49.393" starttime="20190821 06:56:49.392"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190821 06:56:49.393" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190821 06:56:49.393" starttime="20190821 06:56:49.393"></status>
</kw>
<msg timestamp="20190821 06:56:49.394" level="INFO">${logfile} = om-audit-ff6fb0a1c57a.log</msg>
<status status="PASS" endtime="20190821 06:56:49.394" starttime="20190821 06:56:49.366"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" load "${logdir}/${logfile}"</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190821 06:56:49.396" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" load "/var/log/hadoop/om-audit-ff6fb0a1c57a.log" 2&gt;&amp;1'.</msg>
<msg timestamp="20190821 06:57:05.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20190821 06:57:05.493" level="INFO">${output} = /var/log/hadoop/om-audit-ff6fb0a1c57a.log has been loaded successfully</msg>
<status status="PASS" endtime="20190821 06:57:05.493" starttime="20190821 06:56:49.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190821 06:57:05.494" level="INFO">/var/log/hadoop/om-audit-ff6fb0a1c57a.log has been loaded successfully</msg>
<status status="PASS" endtime="20190821 06:57:05.495" starttime="20190821 06:57:05.494"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190821 06:57:05.495" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190821 06:57:05.495" starttime="20190821 06:57:05.495"></status>
</kw>
<status status="PASS" endtime="20190821 06:57:05.495" starttime="20190821 06:56:49.394"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" template top5cmds</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190821 06:57:05.498" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" template top5cmds 2&gt;&amp;1'.</msg>
<msg timestamp="20190821 06:57:06.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20190821 06:57:06.319" level="INFO">${output} = ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190821 06:57:06.319" starttime="20190821 06:57:05.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190821 06:57:06.320" level="INFO">ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190821 06:57:06.320" starttime="20190821 06:57:06.319"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190821 06:57:06.321" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190821 06:57:06.321" starttime="20190821 06:57:06.321"></status>
</kw>
<msg timestamp="20190821 06:57:06.322" level="INFO">${result} = ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190821 06:57:06.322" starttime="20190821 06:57:05.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ALLOCATE_KEY</arg>
</arguments>
<status status="PASS" endtime="20190821 06:57:06.322" starttime="20190821 06:57:06.322"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" template top5users</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190821 06:57:06.325" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" template top5users 2&gt;&amp;1'.</msg>
<msg timestamp="20190821 06:57:07.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20190821 06:57:07.092" level="INFO">${output} = hadoop	280	
</msg>
<status status="PASS" endtime="20190821 06:57:07.092" starttime="20190821 06:57:06.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190821 06:57:07.093" level="INFO">hadoop	280	
</msg>
<status status="PASS" endtime="20190821 06:57:07.093" starttime="20190821 06:57:07.093"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190821 06:57:07.094" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190821 06:57:07.094" starttime="20190821 06:57:07.093"></status>
</kw>
<msg timestamp="20190821 06:57:07.094" level="INFO">${result} = hadoop	280	
</msg>
<status status="PASS" endtime="20190821 06:57:07.094" starttime="20190821 06:57:06.322"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Set username</arg>
</arguments>
<status status="PASS" endtime="20190821 06:57:07.095" starttime="20190821 06:57:07.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${user}</arg>
</arguments>
<status status="PASS" endtime="20190821 06:57:07.096" starttime="20190821 06:57:07.095"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'"</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190821 06:57:07.098" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20190821 06:57:07.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20190821 06:57:07.802" level="INFO">${output} = 5	
</msg>
<status status="PASS" endtime="20190821 06:57:07.803" starttime="20190821 06:57:07.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190821 06:57:07.804" level="INFO">5	
</msg>
<status status="PASS" endtime="20190821 06:57:07.804" starttime="20190821 06:57:07.803"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190821 06:57:07.804" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190821 06:57:07.804" starttime="20190821 06:57:07.804"></status>
</kw>
<msg timestamp="20190821 06:57:07.805" level="INFO">${result} = 5	
</msg>
<status status="PASS" endtime="20190821 06:57:07.805" starttime="20190821 06:57:07.096"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190821 06:57:07.805" level="INFO">${result} = 5.0</msg>
<status status="PASS" endtime="20190821 06:57:07.805" starttime="20190821 06:57:07.805"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}&gt;${count}</arg>
</arguments>
<status status="PASS" endtime="20190821 06:57:07.806" starttime="20190821 06:57:07.805"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'"</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190821 06:57:07.808" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20190821 06:57:08.562" level="INFO">${rc} = 0</msg>
<msg timestamp="20190821 06:57:08.562" level="INFO">${output} = 25	
</msg>
<status status="PASS" endtime="20190821 06:57:08.563" starttime="20190821 06:57:07.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190821 06:57:08.563" level="INFO">25	
</msg>
<status status="PASS" endtime="20190821 06:57:08.564" starttime="20190821 06:57:08.563"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190821 06:57:08.564" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190821 06:57:08.564" starttime="20190821 06:57:08.564"></status>
</kw>
<msg timestamp="20190821 06:57:08.564" level="INFO">${result} = 25	
</msg>
<status status="PASS" endtime="20190821 06:57:08.564" starttime="20190821 06:57:07.806"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190821 06:57:08.565" level="INFO">${result} = 25.0</msg>
<status status="PASS" endtime="20190821 06:57:08.565" starttime="20190821 06:57:08.565"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}&gt;${count}</arg>
</arguments>
<status status="PASS" endtime="20190821 06:57:08.566" starttime="20190821 06:57:08.565"></status>
</kw>
<status status="PASS" endtime="20190821 06:57:08.566" critical="yes" starttime="20190821 06:56:49.365"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20190821 06:57:08.567" starttime="20190821 06:56:36.301"></status>
</suite>
<status status="PASS" endtime="20190821 06:57:08.569" starttime="20190821 06:56:36.268"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-auditparser" pass="2">ozone-auditparser</stat>
<stat fail="0" id="s1-s1" name="Auditparser" pass="2">ozone-auditparser.Auditparser</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
