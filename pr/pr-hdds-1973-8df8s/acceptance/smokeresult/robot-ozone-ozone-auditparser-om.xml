<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20190820 21:22:11.282" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/auditparser" id="s1" name="ozone-auditparser">
<suite source="/opt/hadoop/smoketest/auditparser/auditparser.robot" id="s1-s1" name="Auditparser">
<test id="s1-s1-t1" name="Initiating freon to generate data">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190820 21:22:11.336" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 2&gt;&amp;1'.</msg>
<msg timestamp="20190820 21:22:24.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20190820 21:22:24.691" level="INFO">${output} = 2019-08-20 21:22:12 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2019-08-20 21:22:12 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2019...</msg>
<status status="PASS" endtime="20190820 21:22:24.692" starttime="20190820 21:22:11.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190820 21:22:24.693" level="INFO">2019-08-20 21:22:12 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2019-08-20 21:22:12 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2019-08-20 21:22:12 INFO  MetricsSystemImpl:191 - ozone-freon metrics system started
2019-08-20 21:22:14 INFO  RandomKeyGenerator:275 - Number of Threads: 1
2019-08-20 21:22:14 INFO  RandomKeyGenerator:280 - Number of Volumes: 5.
2019-08-20 21:22:14 INFO  RandomKeyGenerator:281 - Number of Buckets per Volume: 5.
2019-08-20 21:22:14 INFO  RandomKeyGenerator:282 - Number of Keys per Bucket: 5.
2019-08-20 21:22:14 INFO  RandomKeyGenerator:283 - Key size: 10240 bytes
2019-08-20 21:22:14 INFO  RandomKeyGenerator:284 - Buffer size: 4096 bytes
2019-08-20 21:22:14 INFO  RandomKeyGenerator:304 - Starting progress bar Thread.

 0.00% |?                                                                                                    |  0/125 Time: 0:00:002019-08-20 21:22:14 INFO  RpcClient:292 - Creating Volume: vol-0-97106, with hadoop as owner.
2019-08-20 21:22:14 INFO  RpcClient:292 - Creating Volume: vol-1-03467, with hadoop as owner.
2019-08-20 21:22:14 INFO  RpcClient:292 - Creating Volume: vol-2-51343, with hadoop as owner.
2019-08-20 21:22:14 INFO  RpcClient:292 - Creating Volume: vol-3-10565, with hadoop as owner.
2019-08-20 21:22:14 INFO  RpcClient:292 - Creating Volume: vol-4-44090, with hadoop as owner.
2019-08-20 21:22:14 INFO  RpcClient:431 - Creating Bucket: vol-0-97106/bucket-0-23837, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 21:22:14 INFO  RpcClient:431 - Creating Bucket: vol-1-03467/bucket-0-78581, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 21:22:14 INFO  RpcClient:431 - Creating Bucket: vol-2-51343/bucket-0-63257, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 21:22:14 INFO  RpcClient:431 - Creating Bucket: vol-3-10565/bucket-0-83179, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 21:22:14 INFO  RpcClient:431 - Creating Bucket: vol-4-44090/bucket-0-48416, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 21:22:14 INFO  RpcClient:431 - Creating Bucket: vol-0-97106/bucket-1-57377, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 21:22:14 INFO  RpcClient:431 - Creating Bucket: vol-1-03467/bucket-1-20359, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 21:22:14 INFO  RpcClient:431 - Creating Bucket: vol-2-51343/bucket-1-58856, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 21:22:14 INFO  RpcClient:431 - Creating Bucket: vol-3-10565/bucket-1-31630, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 21:22:14 INFO  RpcClient:431 - Creating Bucket: vol-4-44090/bucket-1-89654, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 21:22:14 INFO  RpcClient:431 - Creating Bucket: vol-0-97106/bucket-2-89477, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 21:22:14 INFO  RpcClient:431 - Creating Bucket: vol-1-03467/bucket-2-05659, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 21:22:14 INFO  RpcClient:431 - Creating Bucket: vol-2-51343/bucket-2-52187, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 21:22:14 INFO  RpcClient:431 - Creating Bucket: vol-3-10565/bucket-2-33955, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 21:22:14 INFO  RpcClient:431 - Creating Bucket: vol-4-44090/bucket-2-18496, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 21:22:14 INFO  RpcClient:431 - Creating Bucket: vol-0-97106/bucket-3-81949, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 21:22:14 INFO  RpcClient:431 - Creating Bucket: vol-1-03467/bucket-3-96229, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 21:22:14 INFO  RpcClient:431 - Creating Bucket: vol-2-51343/bucket-3-42427, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 21:22:14 INFO  RpcClient:431 - Creating Bucket: vol-3-10565/bucket-3-68107, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 21:22:14 INFO  RpcClient:431 - Creating Bucket: vol-4-44090/bucket-3-47598, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 21:22:14 INFO  RpcClient:431 - Creating Bucket: vol-0-97106/bucket-4-24852, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 21:22:14 INFO  RpcClient:431 - Creating Bucket: vol-1-03467/bucket-4-30887, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 21:22:14 INFO  RpcClient:431 - Creating Bucket: vol-2-51343/bucket-4-09758, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 21:22:14 INFO  RpcClient:431 - Creating Bucket: vol-3-10565/bucket-4-05298, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 21:22:14 INFO  RpcClient:431 - Creating Bucket: vol-4-44090/bucket-4-65695, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 21:22:14 WARN  MetricsSystemImpl:151 - ozone-freon metrics system already initialized!
 0.00% |?                                                                                                    |  0/125 Time: 0:00:01WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil (file:/opt/hadoop/share/ozone/lib/ratis-thirdparty-misc-0.2.0.jar) to field java.nio.Buffer.address
WARNING: Please consider reporting this to the maintainers of org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
 0.80% |?                                                                                                    |  1/125 Time: 0:00:02 16.80% |?????????????????                                                                                    |  21/125 Time: 0:00:03 41.60% |??????????????????????????????????????????                                                           |  52/125 Time: 0:00:04 68.00% |?????????????????????????????????????????????????????????????????????                                |  85/125 Time: 0:00:05 100.00% |?????????????????????????????????????????????????????????????????????????????????????????????????????|  125/125 Time: 0:00:06

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,080
Average Time spent in bucket creation: 00:00:00,080
Average Time spent in key creation: 00:00:00,864
Average Time spent in key write: 00:00:04,674
Total bytes written: 1280000
Total Execution time: 00:00:11,422
***************************************************</msg>
<status status="PASS" endtime="20190820 21:22:24.694" starttime="20190820 21:22:24.692"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190820 21:22:24.695" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 21:22:24.695" starttime="20190820 21:22:24.694"></status>
</kw>
<msg timestamp="20190820 21:22:24.696" level="INFO">${result} = 2019-08-20 21:22:12 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2019-08-20 21:22:12 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2019...</msg>
<status status="PASS" endtime="20190820 21:22:24.696" starttime="20190820 21:22:11.334"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20190820 21:22:24.701" starttime="20190820 21:22:24.700"></status>
</kw>
<status status="PASS" endtime="20190820 21:22:24.701" starttime="20190820 21:22:24.696"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20190820 21:22:24.702" starttime="20190820 21:22:24.701"></status>
</kw>
<status status="PASS" endtime="20190820 21:22:24.702" critical="yes" starttime="20190820 21:22:11.333"></status>
</test>
<test id="s1-s1-t2" name="Testing audit parser">
<kw name="Get Environment Variable" library="OperatingSystem">
<doc>Returns the value of an environment variable with the given name.</doc>
<arguments>
<arg>HADOOP_LOG_DIR</arg>
<arg>/var/log/hadoop</arg>
</arguments>
<assign>
<var>${logdir}</var>
</assign>
<msg timestamp="20190820 21:22:24.704" level="INFO">${logdir} = /var/log/hadoop</msg>
<status status="PASS" endtime="20190820 21:22:24.704" starttime="20190820 21:22:24.704"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ls -t "${logdir}" | grep om-audit | head -1</arg>
</arguments>
<assign>
<var>${logfile}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190820 21:22:24.708" level="INFO">Running command 'ls -t "/var/log/hadoop" | grep om-audit | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20190820 21:22:24.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20190820 21:22:24.717" level="INFO">${output} = om-audit-18be55371b06.log</msg>
<status status="PASS" endtime="20190820 21:22:24.717" starttime="20190820 21:22:24.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190820 21:22:24.719" level="INFO">om-audit-18be55371b06.log</msg>
<status status="PASS" endtime="20190820 21:22:24.719" starttime="20190820 21:22:24.718"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190820 21:22:24.720" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 21:22:24.720" starttime="20190820 21:22:24.719"></status>
</kw>
<msg timestamp="20190820 21:22:24.721" level="INFO">${logfile} = om-audit-18be55371b06.log</msg>
<status status="PASS" endtime="20190820 21:22:24.721" starttime="20190820 21:22:24.705"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" load "${logdir}/${logfile}"</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190820 21:22:24.724" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" load "/var/log/hadoop/om-audit-18be55371b06.log" 2&gt;&amp;1'.</msg>
<msg timestamp="20190820 21:22:32.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20190820 21:22:32.697" level="INFO">${output} = /var/log/hadoop/om-audit-18be55371b06.log has been loaded successfully</msg>
<status status="PASS" endtime="20190820 21:22:32.697" starttime="20190820 21:22:24.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190820 21:22:32.698" level="INFO">/var/log/hadoop/om-audit-18be55371b06.log has been loaded successfully</msg>
<status status="PASS" endtime="20190820 21:22:32.698" starttime="20190820 21:22:32.698"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190820 21:22:32.699" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 21:22:32.699" starttime="20190820 21:22:32.699"></status>
</kw>
<status status="PASS" endtime="20190820 21:22:32.700" starttime="20190820 21:22:24.721"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" template top5cmds</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190820 21:22:32.702" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" template top5cmds 2&gt;&amp;1'.</msg>
<msg timestamp="20190820 21:22:33.644" level="INFO">${rc} = 0</msg>
<msg timestamp="20190820 21:22:33.644" level="INFO">${output} = ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190820 21:22:33.645" starttime="20190820 21:22:32.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190820 21:22:33.646" level="INFO">ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190820 21:22:33.647" starttime="20190820 21:22:33.645"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190820 21:22:33.648" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 21:22:33.648" starttime="20190820 21:22:33.647"></status>
</kw>
<msg timestamp="20190820 21:22:33.648" level="INFO">${result} = ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190820 21:22:33.649" starttime="20190820 21:22:32.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ALLOCATE_KEY</arg>
</arguments>
<status status="PASS" endtime="20190820 21:22:33.650" starttime="20190820 21:22:33.649"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" template top5users</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190820 21:22:33.654" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" template top5users 2&gt;&amp;1'.</msg>
<msg timestamp="20190820 21:22:34.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20190820 21:22:34.497" level="INFO">${output} = hadoop	280	
</msg>
<status status="PASS" endtime="20190820 21:22:34.497" starttime="20190820 21:22:33.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190820 21:22:34.498" level="INFO">hadoop	280	
</msg>
<status status="PASS" endtime="20190820 21:22:34.498" starttime="20190820 21:22:34.498"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190820 21:22:34.499" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 21:22:34.499" starttime="20190820 21:22:34.499"></status>
</kw>
<msg timestamp="20190820 21:22:34.500" level="INFO">${result} = hadoop	280	
</msg>
<status status="PASS" endtime="20190820 21:22:34.500" starttime="20190820 21:22:33.650"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Set username</arg>
</arguments>
<status status="PASS" endtime="20190820 21:22:34.500" starttime="20190820 21:22:34.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${user}</arg>
</arguments>
<status status="PASS" endtime="20190820 21:22:34.501" starttime="20190820 21:22:34.501"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'"</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190820 21:22:34.504" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20190820 21:22:35.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20190820 21:22:35.358" level="INFO">${output} = 5	
</msg>
<status status="PASS" endtime="20190820 21:22:35.358" starttime="20190820 21:22:34.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190820 21:22:35.359" level="INFO">5	
</msg>
<status status="PASS" endtime="20190820 21:22:35.359" starttime="20190820 21:22:35.359"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190820 21:22:35.360" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 21:22:35.360" starttime="20190820 21:22:35.360"></status>
</kw>
<msg timestamp="20190820 21:22:35.360" level="INFO">${result} = 5	
</msg>
<status status="PASS" endtime="20190820 21:22:35.361" starttime="20190820 21:22:34.501"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190820 21:22:35.361" level="INFO">${result} = 5.0</msg>
<status status="PASS" endtime="20190820 21:22:35.361" starttime="20190820 21:22:35.361"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}&gt;${count}</arg>
</arguments>
<status status="PASS" endtime="20190820 21:22:35.362" starttime="20190820 21:22:35.361"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'"</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190820 21:22:35.364" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20190820 21:22:36.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20190820 21:22:36.221" level="INFO">${output} = 25	
</msg>
<status status="PASS" endtime="20190820 21:22:36.221" starttime="20190820 21:22:35.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190820 21:22:36.223" level="INFO">25	
</msg>
<status status="PASS" endtime="20190820 21:22:36.223" starttime="20190820 21:22:36.222"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190820 21:22:36.224" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 21:22:36.224" starttime="20190820 21:22:36.223"></status>
</kw>
<msg timestamp="20190820 21:22:36.225" level="INFO">${result} = 25	
</msg>
<status status="PASS" endtime="20190820 21:22:36.225" starttime="20190820 21:22:35.362"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190820 21:22:36.226" level="INFO">${result} = 25.0</msg>
<status status="PASS" endtime="20190820 21:22:36.226" starttime="20190820 21:22:36.225"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}&gt;${count}</arg>
</arguments>
<status status="PASS" endtime="20190820 21:22:36.227" starttime="20190820 21:22:36.227"></status>
</kw>
<status status="PASS" endtime="20190820 21:22:36.228" critical="yes" starttime="20190820 21:22:24.703"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20190820 21:22:36.229" starttime="20190820 21:22:11.308"></status>
</suite>
<status status="PASS" endtime="20190820 21:22:36.233" starttime="20190820 21:22:11.283"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-auditparser" pass="2">ozone-auditparser</stat>
<stat fail="0" id="s1-s1" name="Auditparser" pass="2">ozone-auditparser.Auditparser</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
