<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20190820 21:27:33.273" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/auditparser" id="s1" name="ozone-auditparser">
<suite source="/opt/hadoop/smoketest/auditparser/auditparser.robot" id="s1-s1" name="Auditparser">
<test id="s1-s1-t1" name="Initiating freon to generate data">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190820 21:27:33.327" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 2&gt;&amp;1'.</msg>
<msg timestamp="20190820 21:27:46.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20190820 21:27:46.429" level="INFO">${output} = 2019-08-20 21:27:34 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2019-08-20 21:27:34 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2019...</msg>
<status status="PASS" endtime="20190820 21:27:46.429" starttime="20190820 21:27:33.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190820 21:27:46.431" level="INFO">2019-08-20 21:27:34 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2019-08-20 21:27:34 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2019-08-20 21:27:34 INFO  MetricsSystemImpl:191 - ozone-freon metrics system started
2019-08-20 21:27:35 INFO  RandomKeyGenerator:275 - Number of Threads: 1
2019-08-20 21:27:35 INFO  RandomKeyGenerator:280 - Number of Volumes: 5.
2019-08-20 21:27:35 INFO  RandomKeyGenerator:281 - Number of Buckets per Volume: 5.
2019-08-20 21:27:35 INFO  RandomKeyGenerator:282 - Number of Keys per Bucket: 5.
2019-08-20 21:27:35 INFO  RandomKeyGenerator:283 - Key size: 10240 bytes
2019-08-20 21:27:35 INFO  RandomKeyGenerator:284 - Buffer size: 4096 bytes
2019-08-20 21:27:35 INFO  RandomKeyGenerator:304 - Starting progress bar Thread.

 0.00% |?                                                                                                    |  0/125 Time: 0:00:002019-08-20 21:27:35 INFO  RpcClient:292 - Creating Volume: vol-0-77953, with hadoop as owner.
2019-08-20 21:27:36 INFO  RpcClient:292 - Creating Volume: vol-1-75968, with hadoop as owner.
2019-08-20 21:27:36 INFO  RpcClient:292 - Creating Volume: vol-2-56225, with hadoop as owner.
2019-08-20 21:27:36 INFO  RpcClient:292 - Creating Volume: vol-3-40341, with hadoop as owner.
2019-08-20 21:27:36 INFO  RpcClient:292 - Creating Volume: vol-4-96425, with hadoop as owner.
2019-08-20 21:27:36 INFO  RpcClient:431 - Creating Bucket: vol-0-77953/bucket-0-14860, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 21:27:36 INFO  RpcClient:431 - Creating Bucket: vol-1-75968/bucket-0-39023, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 21:27:36 INFO  RpcClient:431 - Creating Bucket: vol-2-56225/bucket-0-68932, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 21:27:36 INFO  RpcClient:431 - Creating Bucket: vol-3-40341/bucket-0-65664, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 21:27:36 INFO  RpcClient:431 - Creating Bucket: vol-4-96425/bucket-0-97601, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 21:27:36 INFO  RpcClient:431 - Creating Bucket: vol-0-77953/bucket-1-40137, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 21:27:36 INFO  RpcClient:431 - Creating Bucket: vol-1-75968/bucket-1-81395, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 21:27:36 INFO  RpcClient:431 - Creating Bucket: vol-2-56225/bucket-1-26009, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 21:27:36 INFO  RpcClient:431 - Creating Bucket: vol-3-40341/bucket-1-51866, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 21:27:36 INFO  RpcClient:431 - Creating Bucket: vol-4-96425/bucket-1-38957, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 21:27:36 INFO  RpcClient:431 - Creating Bucket: vol-0-77953/bucket-2-58235, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 21:27:36 INFO  RpcClient:431 - Creating Bucket: vol-1-75968/bucket-2-61540, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 21:27:36 INFO  RpcClient:431 - Creating Bucket: vol-2-56225/bucket-2-39274, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 21:27:36 INFO  RpcClient:431 - Creating Bucket: vol-3-40341/bucket-2-68311, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 21:27:36 INFO  RpcClient:431 - Creating Bucket: vol-4-96425/bucket-2-58668, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 21:27:36 INFO  RpcClient:431 - Creating Bucket: vol-0-77953/bucket-3-80091, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 21:27:36 INFO  RpcClient:431 - Creating Bucket: vol-1-75968/bucket-3-49470, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 21:27:36 INFO  RpcClient:431 - Creating Bucket: vol-2-56225/bucket-3-98195, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 21:27:36 INFO  RpcClient:431 - Creating Bucket: vol-3-40341/bucket-3-06509, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 21:27:36 INFO  RpcClient:431 - Creating Bucket: vol-4-96425/bucket-3-97357, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 21:27:36 INFO  RpcClient:431 - Creating Bucket: vol-0-77953/bucket-4-22548, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 21:27:36 INFO  RpcClient:431 - Creating Bucket: vol-1-75968/bucket-4-47069, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 21:27:36 INFO  RpcClient:431 - Creating Bucket: vol-2-56225/bucket-4-04807, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 21:27:36 INFO  RpcClient:431 - Creating Bucket: vol-3-40341/bucket-4-99606, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 21:27:36 INFO  RpcClient:431 - Creating Bucket: vol-4-96425/bucket-4-84252, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 21:27:36 WARN  MetricsSystemImpl:151 - ozone-freon metrics system already initialized!
 0.00% |?                                                                                                    |  0/125 Time: 0:00:01WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil (file:/opt/hadoop/share/ozone/lib/ratis-thirdparty-misc-0.2.0.jar) to field java.nio.Buffer.address
WARNING: Please consider reporting this to the maintainers of org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
 0.80% |?                                                                                                    |  1/125 Time: 0:00:02 17.60% |??????????????????                                                                                   |  22/125 Time: 0:00:03 42.40% |???????????????????????????????????????????                                                          |  53/125 Time: 0:00:04 82.40% |???????????????????????????????????????????????????????????????????????????????????                  |  103/125 Time: 0:00:05 100.00% |?????????????????????????????????????????????????????????????????????????????????????????????????????|  125/125 Time: 0:00:06

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,166
Average Time spent in bucket creation: 00:00:00,085
Average Time spent in key creation: 00:00:00,849
Average Time spent in key write: 00:00:04,226
Total bytes written: 1280000
Total Execution time: 00:00:11,307
***************************************************</msg>
<status status="PASS" endtime="20190820 21:27:46.431" starttime="20190820 21:27:46.430"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190820 21:27:46.432" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 21:27:46.433" starttime="20190820 21:27:46.432"></status>
</kw>
<msg timestamp="20190820 21:27:46.433" level="INFO">${result} = 2019-08-20 21:27:34 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2019-08-20 21:27:34 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2019...</msg>
<status status="PASS" endtime="20190820 21:27:46.433" starttime="20190820 21:27:33.325"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20190820 21:27:46.438" starttime="20190820 21:27:46.437"></status>
</kw>
<status status="PASS" endtime="20190820 21:27:46.438" starttime="20190820 21:27:46.434"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20190820 21:27:46.439" starttime="20190820 21:27:46.438"></status>
</kw>
<status status="PASS" endtime="20190820 21:27:46.439" critical="yes" starttime="20190820 21:27:33.324"></status>
</test>
<test id="s1-s1-t2" name="Testing audit parser">
<kw name="Get Environment Variable" library="OperatingSystem">
<doc>Returns the value of an environment variable with the given name.</doc>
<arguments>
<arg>HADOOP_LOG_DIR</arg>
<arg>/var/log/hadoop</arg>
</arguments>
<assign>
<var>${logdir}</var>
</assign>
<msg timestamp="20190820 21:27:46.441" level="INFO">${logdir} = /var/log/hadoop</msg>
<status status="PASS" endtime="20190820 21:27:46.441" starttime="20190820 21:27:46.441"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ls -t "${logdir}" | grep om-audit | head -1</arg>
</arguments>
<assign>
<var>${logfile}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190820 21:27:46.445" level="INFO">Running command 'ls -t "/var/log/hadoop" | grep om-audit | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20190820 21:27:46.466" level="INFO">${rc} = 0</msg>
<msg timestamp="20190820 21:27:46.466" level="INFO">${output} = om-audit-b658fa3c3e3c.log</msg>
<status status="PASS" endtime="20190820 21:27:46.466" starttime="20190820 21:27:46.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190820 21:27:46.468" level="INFO">om-audit-b658fa3c3e3c.log</msg>
<status status="PASS" endtime="20190820 21:27:46.468" starttime="20190820 21:27:46.467"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190820 21:27:46.469" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 21:27:46.469" starttime="20190820 21:27:46.468"></status>
</kw>
<msg timestamp="20190820 21:27:46.469" level="INFO">${logfile} = om-audit-b658fa3c3e3c.log</msg>
<status status="PASS" endtime="20190820 21:27:46.469" starttime="20190820 21:27:46.442"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" load "${logdir}/${logfile}"</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190820 21:27:46.472" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" load "/var/log/hadoop/om-audit-b658fa3c3e3c.log" 2&gt;&amp;1'.</msg>
<msg timestamp="20190820 21:27:56.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20190820 21:27:56.024" level="INFO">${output} = /var/log/hadoop/om-audit-b658fa3c3e3c.log has been loaded successfully</msg>
<status status="PASS" endtime="20190820 21:27:56.024" starttime="20190820 21:27:46.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190820 21:27:56.025" level="INFO">/var/log/hadoop/om-audit-b658fa3c3e3c.log has been loaded successfully</msg>
<status status="PASS" endtime="20190820 21:27:56.025" starttime="20190820 21:27:56.025"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190820 21:27:56.027" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 21:27:56.027" starttime="20190820 21:27:56.026"></status>
</kw>
<status status="PASS" endtime="20190820 21:27:56.028" starttime="20190820 21:27:46.470"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" template top5cmds</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190820 21:27:56.031" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" template top5cmds 2&gt;&amp;1'.</msg>
<msg timestamp="20190820 21:27:56.921" level="INFO">${rc} = 0</msg>
<msg timestamp="20190820 21:27:56.921" level="INFO">${output} = ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190820 21:27:56.921" starttime="20190820 21:27:56.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190820 21:27:56.922" level="INFO">ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190820 21:27:56.923" starttime="20190820 21:27:56.922"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190820 21:27:56.923" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 21:27:56.923" starttime="20190820 21:27:56.923"></status>
</kw>
<msg timestamp="20190820 21:27:56.924" level="INFO">${result} = ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190820 21:27:56.924" starttime="20190820 21:27:56.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ALLOCATE_KEY</arg>
</arguments>
<status status="PASS" endtime="20190820 21:27:56.925" starttime="20190820 21:27:56.924"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" template top5users</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190820 21:27:56.928" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" template top5users 2&gt;&amp;1'.</msg>
<msg timestamp="20190820 21:27:57.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20190820 21:27:57.681" level="INFO">${output} = hadoop	280	
</msg>
<status status="PASS" endtime="20190820 21:27:57.682" starttime="20190820 21:27:56.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190820 21:27:57.683" level="INFO">hadoop	280	
</msg>
<status status="PASS" endtime="20190820 21:27:57.683" starttime="20190820 21:27:57.682"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190820 21:27:57.683" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 21:27:57.683" starttime="20190820 21:27:57.683"></status>
</kw>
<msg timestamp="20190820 21:27:57.684" level="INFO">${result} = hadoop	280	
</msg>
<status status="PASS" endtime="20190820 21:27:57.684" starttime="20190820 21:27:56.925"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Set username</arg>
</arguments>
<status status="PASS" endtime="20190820 21:27:57.684" starttime="20190820 21:27:57.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${user}</arg>
</arguments>
<status status="PASS" endtime="20190820 21:27:57.685" starttime="20190820 21:27:57.685"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'"</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190820 21:27:57.687" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20190820 21:27:58.635" level="INFO">${rc} = 0</msg>
<msg timestamp="20190820 21:27:58.636" level="INFO">${output} = 5	
</msg>
<status status="PASS" endtime="20190820 21:27:58.636" starttime="20190820 21:27:57.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190820 21:27:58.637" level="INFO">5	
</msg>
<status status="PASS" endtime="20190820 21:27:58.637" starttime="20190820 21:27:58.636"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190820 21:27:58.637" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 21:27:58.638" starttime="20190820 21:27:58.637"></status>
</kw>
<msg timestamp="20190820 21:27:58.638" level="INFO">${result} = 5	
</msg>
<status status="PASS" endtime="20190820 21:27:58.638" starttime="20190820 21:27:57.685"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190820 21:27:58.639" level="INFO">${result} = 5.0</msg>
<status status="PASS" endtime="20190820 21:27:58.639" starttime="20190820 21:27:58.638"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}&gt;${count}</arg>
</arguments>
<status status="PASS" endtime="20190820 21:27:58.639" starttime="20190820 21:27:58.639"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'"</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190820 21:27:58.642" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20190820 21:27:59.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20190820 21:27:59.568" level="INFO">${output} = 25	
</msg>
<status status="PASS" endtime="20190820 21:27:59.569" starttime="20190820 21:27:58.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190820 21:27:59.570" level="INFO">25	
</msg>
<status status="PASS" endtime="20190820 21:27:59.570" starttime="20190820 21:27:59.569"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190820 21:27:59.571" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 21:27:59.571" starttime="20190820 21:27:59.570"></status>
</kw>
<msg timestamp="20190820 21:27:59.572" level="INFO">${result} = 25	
</msg>
<status status="PASS" endtime="20190820 21:27:59.572" starttime="20190820 21:27:58.639"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190820 21:27:59.573" level="INFO">${result} = 25.0</msg>
<status status="PASS" endtime="20190820 21:27:59.573" starttime="20190820 21:27:59.572"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}&gt;${count}</arg>
</arguments>
<status status="PASS" endtime="20190820 21:27:59.574" starttime="20190820 21:27:59.573"></status>
</kw>
<status status="PASS" endtime="20190820 21:27:59.574" critical="yes" starttime="20190820 21:27:46.440"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20190820 21:27:59.575" starttime="20190820 21:27:33.299"></status>
</suite>
<status status="PASS" endtime="20190820 21:27:59.579" starttime="20190820 21:27:33.274"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-auditparser" pass="2">ozone-auditparser</stat>
<stat fail="0" id="s1-s1" name="Auditparser" pass="2">ozone-auditparser.Auditparser</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
