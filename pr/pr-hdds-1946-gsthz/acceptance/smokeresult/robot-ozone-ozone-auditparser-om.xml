<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20190820 18:42:41.743" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/auditparser" id="s1" name="ozone-auditparser">
<suite source="/opt/hadoop/smoketest/auditparser/auditparser.robot" id="s1-s1" name="Auditparser">
<test id="s1-s1-t1" name="Initiating freon to generate data">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190820 18:42:41.802" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 2&gt;&amp;1'.</msg>
<msg timestamp="20190820 18:42:55.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20190820 18:42:55.141" level="INFO">${output} = 2019-08-20 18:42:42 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2019-08-20 18:42:42 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2019...</msg>
<status status="PASS" endtime="20190820 18:42:55.142" starttime="20190820 18:42:41.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190820 18:42:55.143" level="INFO">2019-08-20 18:42:42 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2019-08-20 18:42:42 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2019-08-20 18:42:42 INFO  MetricsSystemImpl:191 - ozone-freon metrics system started
2019-08-20 18:42:44 INFO  RandomKeyGenerator:275 - Number of Threads: 1
2019-08-20 18:42:44 INFO  RandomKeyGenerator:280 - Number of Volumes: 5.
2019-08-20 18:42:44 INFO  RandomKeyGenerator:281 - Number of Buckets per Volume: 5.
2019-08-20 18:42:44 INFO  RandomKeyGenerator:282 - Number of Keys per Bucket: 5.
2019-08-20 18:42:44 INFO  RandomKeyGenerator:283 - Key size: 10240 bytes
2019-08-20 18:42:44 INFO  RandomKeyGenerator:284 - Buffer size: 4096 bytes
2019-08-20 18:42:44 INFO  RandomKeyGenerator:304 - Starting progress bar Thread.

 0.00% |?                                                                                                    |  0/125 Time: 0:00:002019-08-20 18:42:44 INFO  RpcClient:292 - Creating Volume: vol-0-03499, with hadoop as owner.
2019-08-20 18:42:44 INFO  RpcClient:292 - Creating Volume: vol-1-36393, with hadoop as owner.
2019-08-20 18:42:44 INFO  RpcClient:292 - Creating Volume: vol-2-45012, with hadoop as owner.
2019-08-20 18:42:44 INFO  RpcClient:292 - Creating Volume: vol-3-03694, with hadoop as owner.
2019-08-20 18:42:44 INFO  RpcClient:292 - Creating Volume: vol-4-82324, with hadoop as owner.
2019-08-20 18:42:44 INFO  RpcClient:431 - Creating Bucket: vol-0-03499/bucket-0-66817, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 18:42:44 INFO  RpcClient:431 - Creating Bucket: vol-1-36393/bucket-0-81762, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 18:42:44 INFO  RpcClient:431 - Creating Bucket: vol-2-45012/bucket-0-64708, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 18:42:44 INFO  RpcClient:431 - Creating Bucket: vol-3-03694/bucket-0-88605, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 18:42:44 INFO  RpcClient:431 - Creating Bucket: vol-4-82324/bucket-0-62820, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 18:42:44 INFO  RpcClient:431 - Creating Bucket: vol-0-03499/bucket-1-27193, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 18:42:44 INFO  RpcClient:431 - Creating Bucket: vol-1-36393/bucket-1-27939, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 18:42:44 INFO  RpcClient:431 - Creating Bucket: vol-2-45012/bucket-1-39031, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 18:42:44 INFO  RpcClient:431 - Creating Bucket: vol-3-03694/bucket-1-98973, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 18:42:44 INFO  RpcClient:431 - Creating Bucket: vol-4-82324/bucket-1-69042, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 18:42:44 INFO  RpcClient:431 - Creating Bucket: vol-0-03499/bucket-2-76375, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 18:42:44 INFO  RpcClient:431 - Creating Bucket: vol-1-36393/bucket-2-34346, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 18:42:44 INFO  RpcClient:431 - Creating Bucket: vol-2-45012/bucket-2-91814, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 18:42:44 INFO  RpcClient:431 - Creating Bucket: vol-3-03694/bucket-2-21939, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 18:42:44 INFO  RpcClient:431 - Creating Bucket: vol-4-82324/bucket-2-73491, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 18:42:44 INFO  RpcClient:431 - Creating Bucket: vol-0-03499/bucket-3-76950, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 18:42:44 INFO  RpcClient:431 - Creating Bucket: vol-1-36393/bucket-3-05213, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 18:42:44 INFO  RpcClient:431 - Creating Bucket: vol-2-45012/bucket-3-75419, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 18:42:44 INFO  RpcClient:431 - Creating Bucket: vol-3-03694/bucket-3-05887, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 18:42:44 INFO  RpcClient:431 - Creating Bucket: vol-4-82324/bucket-3-46079, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 18:42:44 INFO  RpcClient:431 - Creating Bucket: vol-0-03499/bucket-4-85658, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 18:42:44 INFO  RpcClient:431 - Creating Bucket: vol-1-36393/bucket-4-13837, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 18:42:44 INFO  RpcClient:431 - Creating Bucket: vol-2-45012/bucket-4-01164, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 18:42:44 INFO  RpcClient:431 - Creating Bucket: vol-3-03694/bucket-4-40205, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 18:42:44 INFO  RpcClient:431 - Creating Bucket: vol-4-82324/bucket-4-64363, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 18:42:45 WARN  MetricsSystemImpl:151 - ozone-freon metrics system already initialized!
 0.00% |?                                                                                                    |  0/125 Time: 0:00:01WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil (file:/opt/hadoop/share/ozone/lib/ratis-thirdparty-misc-0.2.0.jar) to field java.nio.Buffer.address
WARNING: Please consider reporting this to the maintainers of org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
 0.00% |?                                                                                                    |  0/125 Time: 0:00:02 8.80% |?????????                                                                                            |  11/125 Time: 0:00:03 33.60% |??????????????????????????????????                                                                   |  42/125 Time: 0:00:04 68.80% |?????????????????????????????????????????????????????????????????????                                |  86/125 Time: 0:00:05 100.00% |?????????????????????????????????????????????????????????????????????????????????????????????????????|  125/125 Time: 0:00:06

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,118
Average Time spent in bucket creation: 00:00:00,109
Average Time spent in key creation: 00:00:00,799
Average Time spent in key write: 00:00:04,698
Total bytes written: 1280000
Total Execution time: 00:00:11,439
***************************************************</msg>
<status status="PASS" endtime="20190820 18:42:55.143" starttime="20190820 18:42:55.142"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190820 18:42:55.143" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 18:42:55.144" starttime="20190820 18:42:55.143"></status>
</kw>
<msg timestamp="20190820 18:42:55.144" level="INFO">${result} = 2019-08-20 18:42:42 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2019-08-20 18:42:42 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2019...</msg>
<status status="PASS" endtime="20190820 18:42:55.144" starttime="20190820 18:42:41.799"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20190820 18:42:55.147" starttime="20190820 18:42:55.147"></status>
</kw>
<status status="PASS" endtime="20190820 18:42:55.147" starttime="20190820 18:42:55.144"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20190820 18:42:55.148" starttime="20190820 18:42:55.147"></status>
</kw>
<status status="PASS" endtime="20190820 18:42:55.148" critical="yes" starttime="20190820 18:42:41.797"></status>
</test>
<test id="s1-s1-t2" name="Testing audit parser">
<kw name="Get Environment Variable" library="OperatingSystem">
<doc>Returns the value of an environment variable with the given name.</doc>
<arguments>
<arg>HADOOP_LOG_DIR</arg>
<arg>/var/log/hadoop</arg>
</arguments>
<assign>
<var>${logdir}</var>
</assign>
<msg timestamp="20190820 18:42:55.149" level="INFO">${logdir} = /var/log/hadoop</msg>
<status status="PASS" endtime="20190820 18:42:55.149" starttime="20190820 18:42:55.149"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ls -t "${logdir}" | grep om-audit | head -1</arg>
</arguments>
<assign>
<var>${logfile}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190820 18:42:55.151" level="INFO">Running command 'ls -t "/var/log/hadoop" | grep om-audit | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20190820 18:42:55.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20190820 18:42:55.181" level="INFO">${output} = om-audit-055344d5f4d5.log</msg>
<status status="PASS" endtime="20190820 18:42:55.181" starttime="20190820 18:42:55.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190820 18:42:55.183" level="INFO">om-audit-055344d5f4d5.log</msg>
<status status="PASS" endtime="20190820 18:42:55.183" starttime="20190820 18:42:55.182"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190820 18:42:55.184" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 18:42:55.184" starttime="20190820 18:42:55.184"></status>
</kw>
<msg timestamp="20190820 18:42:55.185" level="INFO">${logfile} = om-audit-055344d5f4d5.log</msg>
<status status="PASS" endtime="20190820 18:42:55.185" starttime="20190820 18:42:55.149"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" load "${logdir}/${logfile}"</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190820 18:42:55.188" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" load "/var/log/hadoop/om-audit-055344d5f4d5.log" 2&gt;&amp;1'.</msg>
<msg timestamp="20190820 18:43:14.733" level="INFO">${rc} = 0</msg>
<msg timestamp="20190820 18:43:14.733" level="INFO">${output} = /var/log/hadoop/om-audit-055344d5f4d5.log has been loaded successfully</msg>
<status status="PASS" endtime="20190820 18:43:14.734" starttime="20190820 18:42:55.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190820 18:43:14.735" level="INFO">/var/log/hadoop/om-audit-055344d5f4d5.log has been loaded successfully</msg>
<status status="PASS" endtime="20190820 18:43:14.735" starttime="20190820 18:43:14.734"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190820 18:43:14.736" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 18:43:14.736" starttime="20190820 18:43:14.735"></status>
</kw>
<status status="PASS" endtime="20190820 18:43:14.736" starttime="20190820 18:42:55.185"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" template top5cmds</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190820 18:43:14.739" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" template top5cmds 2&gt;&amp;1'.</msg>
<msg timestamp="20190820 18:43:15.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20190820 18:43:15.501" level="INFO">${output} = ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190820 18:43:15.501" starttime="20190820 18:43:14.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190820 18:43:15.503" level="INFO">ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190820 18:43:15.503" starttime="20190820 18:43:15.502"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190820 18:43:15.503" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 18:43:15.503" starttime="20190820 18:43:15.503"></status>
</kw>
<msg timestamp="20190820 18:43:15.504" level="INFO">${result} = ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190820 18:43:15.504" starttime="20190820 18:43:14.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ALLOCATE_KEY</arg>
</arguments>
<status status="PASS" endtime="20190820 18:43:15.504" starttime="20190820 18:43:15.504"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" template top5users</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190820 18:43:15.507" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" template top5users 2&gt;&amp;1'.</msg>
<msg timestamp="20190820 18:43:16.304" level="INFO">${rc} = 0</msg>
<msg timestamp="20190820 18:43:16.304" level="INFO">${output} = hadoop	280	
</msg>
<status status="PASS" endtime="20190820 18:43:16.304" starttime="20190820 18:43:15.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190820 18:43:16.306" level="INFO">hadoop	280	
</msg>
<status status="PASS" endtime="20190820 18:43:16.306" starttime="20190820 18:43:16.305"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190820 18:43:16.307" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 18:43:16.307" starttime="20190820 18:43:16.306"></status>
</kw>
<msg timestamp="20190820 18:43:16.307" level="INFO">${result} = hadoop	280	
</msg>
<status status="PASS" endtime="20190820 18:43:16.307" starttime="20190820 18:43:15.505"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Set username</arg>
</arguments>
<status status="PASS" endtime="20190820 18:43:16.309" starttime="20190820 18:43:16.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${user}</arg>
</arguments>
<status status="PASS" endtime="20190820 18:43:16.309" starttime="20190820 18:43:16.309"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'"</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190820 18:43:16.313" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20190820 18:43:17.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20190820 18:43:17.140" level="INFO">${output} = 5	
</msg>
<status status="PASS" endtime="20190820 18:43:17.140" starttime="20190820 18:43:16.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190820 18:43:17.141" level="INFO">5	
</msg>
<status status="PASS" endtime="20190820 18:43:17.141" starttime="20190820 18:43:17.140"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190820 18:43:17.142" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 18:43:17.142" starttime="20190820 18:43:17.141"></status>
</kw>
<msg timestamp="20190820 18:43:17.142" level="INFO">${result} = 5	
</msg>
<status status="PASS" endtime="20190820 18:43:17.142" starttime="20190820 18:43:16.310"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190820 18:43:17.143" level="INFO">${result} = 5.0</msg>
<status status="PASS" endtime="20190820 18:43:17.143" starttime="20190820 18:43:17.142"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}&gt;${count}</arg>
</arguments>
<status status="PASS" endtime="20190820 18:43:17.143" starttime="20190820 18:43:17.143"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'"</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190820 18:43:17.145" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20190820 18:43:17.889" level="INFO">${rc} = 0</msg>
<msg timestamp="20190820 18:43:17.889" level="INFO">${output} = 25	
</msg>
<status status="PASS" endtime="20190820 18:43:17.889" starttime="20190820 18:43:17.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190820 18:43:17.891" level="INFO">25	
</msg>
<status status="PASS" endtime="20190820 18:43:17.891" starttime="20190820 18:43:17.890"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190820 18:43:17.892" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 18:43:17.892" starttime="20190820 18:43:17.891"></status>
</kw>
<msg timestamp="20190820 18:43:17.892" level="INFO">${result} = 25	
</msg>
<status status="PASS" endtime="20190820 18:43:17.893" starttime="20190820 18:43:17.143"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190820 18:43:17.893" level="INFO">${result} = 25.0</msg>
<status status="PASS" endtime="20190820 18:43:17.894" starttime="20190820 18:43:17.893"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}&gt;${count}</arg>
</arguments>
<status status="PASS" endtime="20190820 18:43:17.894" starttime="20190820 18:43:17.894"></status>
</kw>
<status status="PASS" endtime="20190820 18:43:17.895" critical="yes" starttime="20190820 18:42:55.148"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20190820 18:43:17.896" starttime="20190820 18:42:41.769"></status>
</suite>
<status status="PASS" endtime="20190820 18:43:17.899" starttime="20190820 18:42:41.744"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-auditparser" pass="2">ozone-auditparser</stat>
<stat fail="0" id="s1-s1" name="Auditparser" pass="2">ozone-auditparser.Auditparser</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
