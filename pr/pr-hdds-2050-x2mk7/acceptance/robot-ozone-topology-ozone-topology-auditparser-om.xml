<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20190829 01:55:38.685" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/auditparser" id="s1" name="ozone-topology-auditparser">
<suite source="/opt/hadoop/smoketest/auditparser/auditparser.robot" id="s1-s1" name="Auditparser">
<test id="s1-s1-t1" name="Initiating freon to generate data">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190829 01:55:38.743" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 2&gt;&amp;1'.</msg>
<msg timestamp="20190829 01:57:30.800" level="INFO">${rc} = 255</msg>
<msg timestamp="20190829 01:57:30.800" level="INFO">${output} = Connection refused</msg>
<status status="PASS" endtime="20190829 01:57:30.800" starttime="20190829 01:55:38.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190829 01:57:30.802" level="INFO">Connection refused</msg>
<status status="PASS" endtime="20190829 01:57:30.802" starttime="20190829 01:57:30.801"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190829 01:57:30.803" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20190829 01:57:30.804" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20190829 01:57:30.804" starttime="20190829 01:57:30.802"></status>
</kw>
<status status="FAIL" endtime="20190829 01:57:30.807" starttime="20190829 01:55:38.740"></status>
</kw>
<status status="FAIL" endtime="20190829 01:57:30.807" critical="yes" starttime="20190829 01:55:38.739">255 != 0</status>
</test>
<test id="s1-s1-t2" name="Testing audit parser">
<kw name="Get Environment Variable" library="OperatingSystem">
<doc>Returns the value of an environment variable with the given name.</doc>
<arguments>
<arg>HADOOP_LOG_DIR</arg>
<arg>/var/log/hadoop</arg>
</arguments>
<assign>
<var>${logdir}</var>
</assign>
<msg timestamp="20190829 01:57:30.810" level="INFO">${logdir} = /var/log/hadoop</msg>
<status status="PASS" endtime="20190829 01:57:30.810" starttime="20190829 01:57:30.809"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ls -t "${logdir}" | grep om-audit | head -1</arg>
</arguments>
<assign>
<var>${logfile}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190829 01:57:30.813" level="INFO">Running command 'ls -t "/var/log/hadoop" | grep om-audit | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20190829 01:57:30.822" level="INFO">${rc} = 0</msg>
<msg timestamp="20190829 01:57:30.822" level="INFO">${output} = </msg>
<status status="PASS" endtime="20190829 01:57:30.822" starttime="20190829 01:57:30.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190829 01:57:30.824" level="INFO"></msg>
<status status="PASS" endtime="20190829 01:57:30.824" starttime="20190829 01:57:30.823"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190829 01:57:30.825" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190829 01:57:30.825" starttime="20190829 01:57:30.824"></status>
</kw>
<msg timestamp="20190829 01:57:30.825" level="INFO">${logfile} = </msg>
<status status="PASS" endtime="20190829 01:57:30.826" starttime="20190829 01:57:30.810"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" load "${logdir}/${logfile}"</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190829 01:57:30.828" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" load "/var/log/hadoop/" 2&gt;&amp;1'.</msg>
<msg timestamp="20190829 01:57:31.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20190829 01:57:31.731" level="INFO">${output} = Failed to load /var/log/hadoop/</msg>
<status status="PASS" endtime="20190829 01:57:31.731" starttime="20190829 01:57:30.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190829 01:57:31.733" level="INFO">Failed to load /var/log/hadoop/</msg>
<status status="PASS" endtime="20190829 01:57:31.733" starttime="20190829 01:57:31.732"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190829 01:57:31.734" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190829 01:57:31.734" starttime="20190829 01:57:31.733"></status>
</kw>
<status status="PASS" endtime="20190829 01:57:31.735" starttime="20190829 01:57:30.826"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" template top5cmds</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190829 01:57:31.738" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" template top5cmds 2&gt;&amp;1'.</msg>
<msg timestamp="20190829 01:57:32.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20190829 01:57:32.581" level="INFO">${output} = </msg>
<status status="PASS" endtime="20190829 01:57:32.581" starttime="20190829 01:57:31.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190829 01:57:32.582" level="INFO"></msg>
<status status="PASS" endtime="20190829 01:57:32.582" starttime="20190829 01:57:32.581"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190829 01:57:32.583" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190829 01:57:32.584" starttime="20190829 01:57:32.583"></status>
</kw>
<msg timestamp="20190829 01:57:32.584" level="INFO">${result} = </msg>
<status status="PASS" endtime="20190829 01:57:32.584" starttime="20190829 01:57:31.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ALLOCATE_KEY</arg>
</arguments>
<msg timestamp="20190829 01:57:32.585" level="FAIL">'' does not contain 'ALLOCATE_KEY'</msg>
<status status="FAIL" endtime="20190829 01:57:32.585" starttime="20190829 01:57:32.584"></status>
</kw>
<status status="FAIL" endtime="20190829 01:57:32.586" critical="yes" starttime="20190829 01:57:30.808">'' does not contain 'ALLOCATE_KEY'</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" endtime="20190829 01:57:32.587" starttime="20190829 01:55:38.711"></status>
</suite>
<status status="FAIL" endtime="20190829 01:57:32.591" starttime="20190829 01:55:38.685"></status>
</suite>
<statistics>
<total>
<stat fail="2" pass="0">Critical Tests</stat>
<stat fail="2" pass="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="2" id="s1" name="ozone-topology-auditparser" pass="0">ozone-topology-auditparser</stat>
<stat fail="2" id="s1-s1" name="Auditparser" pass="0">ozone-topology-auditparser.Auditparser</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
