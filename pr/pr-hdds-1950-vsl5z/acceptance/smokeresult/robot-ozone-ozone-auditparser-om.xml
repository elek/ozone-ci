<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20190820 15:01:29.189" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/auditparser" id="s1" name="ozone-auditparser">
<suite source="/opt/hadoop/smoketest/auditparser/auditparser.robot" id="s1-s1" name="Auditparser">
<test id="s1-s1-t1" name="Initiating freon to generate data">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190820 15:01:29.244" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 2&gt;&amp;1'.</msg>
<msg timestamp="20190820 15:01:42.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20190820 15:01:42.137" level="INFO">${output} = 2019-08-20 15:01:30 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2019-08-20 15:01:30 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2019...</msg>
<status status="PASS" endtime="20190820 15:01:42.137" starttime="20190820 15:01:29.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190820 15:01:42.139" level="INFO">2019-08-20 15:01:30 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2019-08-20 15:01:30 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2019-08-20 15:01:30 INFO  MetricsSystemImpl:191 - ozone-freon metrics system started
2019-08-20 15:01:31 INFO  RandomKeyGenerator:275 - Number of Threads: 1
2019-08-20 15:01:31 INFO  RandomKeyGenerator:280 - Number of Volumes: 5.
2019-08-20 15:01:31 INFO  RandomKeyGenerator:281 - Number of Buckets per Volume: 5.
2019-08-20 15:01:31 INFO  RandomKeyGenerator:282 - Number of Keys per Bucket: 5.
2019-08-20 15:01:31 INFO  RandomKeyGenerator:283 - Key size: 10240 bytes
2019-08-20 15:01:31 INFO  RandomKeyGenerator:284 - Buffer size: 4096 bytes
2019-08-20 15:01:31 INFO  RandomKeyGenerator:304 - Starting progress bar Thread.

 0.00% |?                                                                                                    |  0/125 Time: 0:00:002019-08-20 15:01:31 INFO  RpcClient:292 - Creating Volume: vol-0-86582, with hadoop as owner.
2019-08-20 15:01:31 INFO  RpcClient:292 - Creating Volume: vol-1-91427, with hadoop as owner.
2019-08-20 15:01:31 INFO  RpcClient:292 - Creating Volume: vol-2-90924, with hadoop as owner.
2019-08-20 15:01:31 INFO  RpcClient:292 - Creating Volume: vol-3-13028, with hadoop as owner.
2019-08-20 15:01:31 INFO  RpcClient:292 - Creating Volume: vol-4-86799, with hadoop as owner.
2019-08-20 15:01:31 INFO  RpcClient:431 - Creating Bucket: vol-0-86582/bucket-0-29815, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 15:01:31 INFO  RpcClient:431 - Creating Bucket: vol-1-91427/bucket-0-79400, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 15:01:31 INFO  RpcClient:431 - Creating Bucket: vol-2-90924/bucket-0-09646, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 15:01:31 INFO  RpcClient:431 - Creating Bucket: vol-3-13028/bucket-0-87520, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 15:01:31 INFO  RpcClient:431 - Creating Bucket: vol-4-86799/bucket-0-18329, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 15:01:31 INFO  RpcClient:431 - Creating Bucket: vol-0-86582/bucket-1-72090, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 15:01:31 INFO  RpcClient:431 - Creating Bucket: vol-1-91427/bucket-1-24864, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 15:01:31 INFO  RpcClient:431 - Creating Bucket: vol-2-90924/bucket-1-80140, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 15:01:31 INFO  RpcClient:431 - Creating Bucket: vol-3-13028/bucket-1-10998, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 15:01:31 INFO  RpcClient:431 - Creating Bucket: vol-4-86799/bucket-1-40187, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 15:01:31 INFO  RpcClient:431 - Creating Bucket: vol-0-86582/bucket-2-40881, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 15:01:31 INFO  RpcClient:431 - Creating Bucket: vol-1-91427/bucket-2-19297, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 15:01:31 INFO  RpcClient:431 - Creating Bucket: vol-2-90924/bucket-2-29962, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 15:01:31 INFO  RpcClient:431 - Creating Bucket: vol-3-13028/bucket-2-33508, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 15:01:31 INFO  RpcClient:431 - Creating Bucket: vol-4-86799/bucket-2-33889, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 15:01:31 INFO  RpcClient:431 - Creating Bucket: vol-0-86582/bucket-3-39791, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 15:01:31 INFO  RpcClient:431 - Creating Bucket: vol-1-91427/bucket-3-64526, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 15:01:31 INFO  RpcClient:431 - Creating Bucket: vol-2-90924/bucket-3-94564, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 15:01:31 INFO  RpcClient:431 - Creating Bucket: vol-3-13028/bucket-3-62343, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 15:01:31 INFO  RpcClient:431 - Creating Bucket: vol-4-86799/bucket-3-74472, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 15:01:31 INFO  RpcClient:431 - Creating Bucket: vol-0-86582/bucket-4-90182, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 15:01:31 INFO  RpcClient:431 - Creating Bucket: vol-1-91427/bucket-4-86556, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 15:01:31 INFO  RpcClient:431 - Creating Bucket: vol-2-90924/bucket-4-84080, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 15:01:31 INFO  RpcClient:431 - Creating Bucket: vol-3-13028/bucket-4-16082, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 15:01:31 INFO  RpcClient:431 - Creating Bucket: vol-4-86799/bucket-4-00509, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 15:01:32 WARN  MetricsSystemImpl:151 - ozone-freon metrics system already initialized!
 0.00% |?                                                                                                    |  0/125 Time: 0:00:01WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil (file:/opt/hadoop/share/ozone/lib/ratis-thirdparty-misc-0.2.0.jar) to field java.nio.Buffer.address
WARNING: Please consider reporting this to the maintainers of org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
 0.80% |?                                                                                                    |  1/125 Time: 0:00:02 20.80% |?????????????????????                                                                                |  26/125 Time: 0:00:03 49.60% |??????????????????????????????????????????????????                                                   |  62/125 Time: 0:00:04 84.80% |?????????????????????????????????????????????????????????????????????????????????????                |  106/125 Time: 0:00:05 100.00% |?????????????????????????????????????????????????????????????????????????????????????????????????????|  125/125 Time: 0:00:06

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,087
Average Time spent in bucket creation: 00:00:00,092
Average Time spent in key creation: 00:00:00,795
Average Time spent in key write: 00:00:04,463
Total bytes written: 1280000
Total Execution time: 00:00:11,207
***************************************************</msg>
<status status="PASS" endtime="20190820 15:01:42.139" starttime="20190820 15:01:42.138"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190820 15:01:42.139" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 15:01:42.139" starttime="20190820 15:01:42.139"></status>
</kw>
<msg timestamp="20190820 15:01:42.140" level="INFO">${result} = 2019-08-20 15:01:30 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2019-08-20 15:01:30 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2019...</msg>
<status status="PASS" endtime="20190820 15:01:42.140" starttime="20190820 15:01:29.242"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20190820 15:01:42.143" starttime="20190820 15:01:42.143"></status>
</kw>
<status status="PASS" endtime="20190820 15:01:42.143" starttime="20190820 15:01:42.140"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20190820 15:01:42.144" starttime="20190820 15:01:42.143"></status>
</kw>
<status status="PASS" endtime="20190820 15:01:42.144" critical="yes" starttime="20190820 15:01:29.242"></status>
</test>
<test id="s1-s1-t2" name="Testing audit parser">
<kw name="Get Environment Variable" library="OperatingSystem">
<doc>Returns the value of an environment variable with the given name.</doc>
<arguments>
<arg>HADOOP_LOG_DIR</arg>
<arg>/var/log/hadoop</arg>
</arguments>
<assign>
<var>${logdir}</var>
</assign>
<msg timestamp="20190820 15:01:42.146" level="INFO">${logdir} = /var/log/hadoop</msg>
<status status="PASS" endtime="20190820 15:01:42.146" starttime="20190820 15:01:42.145"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ls -t "${logdir}" | grep om-audit | head -1</arg>
</arguments>
<assign>
<var>${logfile}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190820 15:01:42.148" level="INFO">Running command 'ls -t "/var/log/hadoop" | grep om-audit | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20190820 15:01:42.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20190820 15:01:42.154" level="INFO">${output} = om-audit-0657041bf00c.log</msg>
<status status="PASS" endtime="20190820 15:01:42.154" starttime="20190820 15:01:42.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190820 15:01:42.156" level="INFO">om-audit-0657041bf00c.log</msg>
<status status="PASS" endtime="20190820 15:01:42.156" starttime="20190820 15:01:42.155"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190820 15:01:42.157" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 15:01:42.157" starttime="20190820 15:01:42.157"></status>
</kw>
<msg timestamp="20190820 15:01:42.158" level="INFO">${logfile} = om-audit-0657041bf00c.log</msg>
<status status="PASS" endtime="20190820 15:01:42.158" starttime="20190820 15:01:42.146"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" load "${logdir}/${logfile}"</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190820 15:01:42.161" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" load "/var/log/hadoop/om-audit-0657041bf00c.log" 2&gt;&amp;1'.</msg>
<msg timestamp="20190820 15:01:49.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20190820 15:01:49.269" level="INFO">${output} = /var/log/hadoop/om-audit-0657041bf00c.log has been loaded successfully</msg>
<status status="PASS" endtime="20190820 15:01:49.269" starttime="20190820 15:01:42.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190820 15:01:49.271" level="INFO">/var/log/hadoop/om-audit-0657041bf00c.log has been loaded successfully</msg>
<status status="PASS" endtime="20190820 15:01:49.272" starttime="20190820 15:01:49.270"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190820 15:01:49.273" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 15:01:49.273" starttime="20190820 15:01:49.272"></status>
</kw>
<status status="PASS" endtime="20190820 15:01:49.273" starttime="20190820 15:01:42.158"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" template top5cmds</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190820 15:01:49.277" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" template top5cmds 2&gt;&amp;1'.</msg>
<msg timestamp="20190820 15:01:50.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20190820 15:01:50.066" level="INFO">${output} = ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190820 15:01:50.066" starttime="20190820 15:01:49.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190820 15:01:50.067" level="INFO">ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190820 15:01:50.068" starttime="20190820 15:01:50.067"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190820 15:01:50.068" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 15:01:50.069" starttime="20190820 15:01:50.068"></status>
</kw>
<msg timestamp="20190820 15:01:50.069" level="INFO">${result} = ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190820 15:01:50.069" starttime="20190820 15:01:49.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ALLOCATE_KEY</arg>
</arguments>
<status status="PASS" endtime="20190820 15:01:50.070" starttime="20190820 15:01:50.069"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" template top5users</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190820 15:01:50.073" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" template top5users 2&gt;&amp;1'.</msg>
<msg timestamp="20190820 15:01:50.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20190820 15:01:50.824" level="INFO">${output} = hadoop	280	
</msg>
<status status="PASS" endtime="20190820 15:01:50.824" starttime="20190820 15:01:50.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190820 15:01:50.825" level="INFO">hadoop	280	
</msg>
<status status="PASS" endtime="20190820 15:01:50.825" starttime="20190820 15:01:50.824"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190820 15:01:50.826" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 15:01:50.826" starttime="20190820 15:01:50.825"></status>
</kw>
<msg timestamp="20190820 15:01:50.827" level="INFO">${result} = hadoop	280	
</msg>
<status status="PASS" endtime="20190820 15:01:50.827" starttime="20190820 15:01:50.070"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Set username</arg>
</arguments>
<status status="PASS" endtime="20190820 15:01:50.828" starttime="20190820 15:01:50.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${user}</arg>
</arguments>
<status status="PASS" endtime="20190820 15:01:50.828" starttime="20190820 15:01:50.828"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'"</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190820 15:01:50.832" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20190820 15:01:51.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20190820 15:01:51.590" level="INFO">${output} = 5	
</msg>
<status status="PASS" endtime="20190820 15:01:51.591" starttime="20190820 15:01:50.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190820 15:01:51.592" level="INFO">5	
</msg>
<status status="PASS" endtime="20190820 15:01:51.592" starttime="20190820 15:01:51.591"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190820 15:01:51.592" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 15:01:51.592" starttime="20190820 15:01:51.592"></status>
</kw>
<msg timestamp="20190820 15:01:51.593" level="INFO">${result} = 5	
</msg>
<status status="PASS" endtime="20190820 15:01:51.593" starttime="20190820 15:01:50.829"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190820 15:01:51.594" level="INFO">${result} = 5.0</msg>
<status status="PASS" endtime="20190820 15:01:51.594" starttime="20190820 15:01:51.593"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}&gt;${count}</arg>
</arguments>
<status status="PASS" endtime="20190820 15:01:51.595" starttime="20190820 15:01:51.594"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'"</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190820 15:01:51.597" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20190820 15:01:52.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20190820 15:01:52.374" level="INFO">${output} = 25	
</msg>
<status status="PASS" endtime="20190820 15:01:52.374" starttime="20190820 15:01:51.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190820 15:01:52.376" level="INFO">25	
</msg>
<status status="PASS" endtime="20190820 15:01:52.376" starttime="20190820 15:01:52.375"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190820 15:01:52.377" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 15:01:52.377" starttime="20190820 15:01:52.376"></status>
</kw>
<msg timestamp="20190820 15:01:52.377" level="INFO">${result} = 25	
</msg>
<status status="PASS" endtime="20190820 15:01:52.377" starttime="20190820 15:01:51.595"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190820 15:01:52.378" level="INFO">${result} = 25.0</msg>
<status status="PASS" endtime="20190820 15:01:52.378" starttime="20190820 15:01:52.378"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}&gt;${count}</arg>
</arguments>
<status status="PASS" endtime="20190820 15:01:52.379" starttime="20190820 15:01:52.378"></status>
</kw>
<status status="PASS" endtime="20190820 15:01:52.379" critical="yes" starttime="20190820 15:01:42.144"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20190820 15:01:52.381" starttime="20190820 15:01:29.215"></status>
</suite>
<status status="PASS" endtime="20190820 15:01:52.384" starttime="20190820 15:01:29.190"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-auditparser" pass="2">ozone-auditparser</stat>
<stat fail="0" id="s1-s1" name="Auditparser" pass="2">ozone-auditparser.Auditparser</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
