<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20190918 22:19:36.001" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/basic" id="s1" name="ozonesecure-basic">
<suite source="/opt/hadoop/smoketest/basic/basic.robot" id="s1-s1" name="Basic">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190918 22:19:36.062" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20190918 22:19:36.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20190918 22:19:36.069" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20190918 22:19:36.069" starttime="20190918 22:19:36.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190918 22:19:36.071" level="INFO">scm</msg>
<status status="PASS" endtime="20190918 22:19:36.071" starttime="20190918 22:19:36.070"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190918 22:19:36.072" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190918 22:19:36.072" starttime="20190918 22:19:36.071"></status>
</kw>
<msg timestamp="20190918 22:19:36.073" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20190918 22:19:36.073" starttime="20190918 22:19:36.060"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190918 22:19:36.077" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20190918 22:19:36.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20190918 22:19:36.092" level="INFO">${output} = </msg>
<status status="PASS" endtime="20190918 22:19:36.092" starttime="20190918 22:19:36.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190918 22:19:36.094" level="INFO"></msg>
<status status="PASS" endtime="20190918 22:19:36.094" starttime="20190918 22:19:36.093"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190918 22:19:36.095" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190918 22:19:36.095" starttime="20190918 22:19:36.094"></status>
</kw>
<status status="PASS" endtime="20190918 22:19:36.096" starttime="20190918 22:19:36.074"></status>
</kw>
<status status="PASS" endtime="20190918 22:19:36.096" starttime="20190918 22:19:36.073"></status>
</kw>
<status status="PASS" endtime="20190918 22:19:36.097" starttime="20190918 22:19:36.059"></status>
</kw>
<status status="PASS" endtime="20190918 22:19:36.097" starttime="20190918 22:19:36.059"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190918 22:19:36.101" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20190918 22:19:36.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20190918 22:19:36.140" level="INFO">${output} = HTTP/1.1 401 Authentication required
Date: Wed, 18 Sep 2019 22:19:36 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Coo...</msg>
<status status="PASS" endtime="20190918 22:19:36.140" starttime="20190918 22:19:36.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190918 22:19:36.142" level="INFO">HTTP/1.1 401 Authentication required
Date: Wed, 18 Sep 2019 22:19:36 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 293

HTTP/1.1 200 OK
Date: Wed, 18 Sep 2019 22:19:36 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCBjYB5ksagmSWp8PzYa274w3UN6NgbFdJRHmamAxA2S8WFz5d0Pbgd7/pFAAjcdvs1l/AtxWRzgly0wYIZlRpc1ww
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1568881176131&amp;s=7actDXJBWgiT6/t79t/8Mv+kpUSIsRaYBeFkQ8Yda5w="; Path=/; HttpOnly
Last-Modified: Wed, 18 Sep 2019 22:00:14 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" endtime="20190918 22:19:36.142" starttime="20190918 22:19:36.141"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190918 22:19:36.143" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190918 22:19:36.144" starttime="20190918 22:19:36.143"></status>
</kw>
<msg timestamp="20190918 22:19:36.144" level="INFO">${result} = HTTP/1.1 401 Authentication required
Date: Wed, 18 Sep 2019 22:19:36 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Coo...</msg>
<status status="PASS" endtime="20190918 22:19:36.144" starttime="20190918 22:19:36.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20190918 22:19:36.145" starttime="20190918 22:19:36.145"></status>
</kw>
<status status="PASS" endtime="20190918 22:19:36.146" critical="yes" starttime="20190918 22:19:36.058"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190918 22:19:36.151" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 2&gt;&amp;1'.</msg>
<msg timestamp="20190918 22:19:37.991" level="INFO">${rc} = 255</msg>
<msg timestamp="20190918 22:19:37.992" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20190918 22:19:37.992" starttime="20190918 22:19:36.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190918 22:19:37.994" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
om</msg>
<status status="PASS" endtime="20190918 22:19:37.994" starttime="20190918 22:19:37.993"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190918 22:19:37.996" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20190918 22:19:37.996" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20190918 22:19:37.997" starttime="20190918 22:19:37.995"></status>
</kw>
<status status="FAIL" endtime="20190918 22:19:37.997" starttime="20190918 22:19:36.148"></status>
</kw>
<status status="FAIL" endtime="20190918 22:19:37.998" critical="yes" starttime="20190918 22:19:36.146">255 != 0</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" endtime="20190918 22:19:37.999" starttime="20190918 22:19:36.030"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/ozone-shell.robot" id="s1-s2" name="Ozone-Shell">
<kw type="setup" name="Generate prefix">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20190918 22:19:38.014" level="INFO">${random} = 03851</msg>
<status status="PASS" endtime="20190918 22:19:38.014" starttime="20190918 22:19:38.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20190918 22:19:38.015" level="INFO">${prefix} = 03851</msg>
<status status="PASS" endtime="20190918 22:19:38.015" starttime="20190918 22:19:38.014"></status>
</kw>
<status status="PASS" endtime="20190918 22:19:38.015" starttime="20190918 22:19:38.012"></status>
</kw>
<test id="s1-s2-t1" name="RpcClient with port">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190918 22:19:38.022" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20190918 22:19:38.029" level="INFO">${rc} = 0</msg>
<msg timestamp="20190918 22:19:38.029" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20190918 22:19:38.029" starttime="20190918 22:19:38.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190918 22:19:38.030" level="INFO">scm</msg>
<status status="PASS" endtime="20190918 22:19:38.031" starttime="20190918 22:19:38.029"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190918 22:19:38.031" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190918 22:19:38.032" starttime="20190918 22:19:38.031"></status>
</kw>
<msg timestamp="20190918 22:19:38.032" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20190918 22:19:38.032" starttime="20190918 22:19:38.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20190918 22:19:38.035" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20190918 22:19:38.035" starttime="20190918 22:19:38.033"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190918 22:19:38.039" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20190918 22:19:38.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20190918 22:19:38.056" level="INFO">${output} = </msg>
<status status="PASS" endtime="20190918 22:19:38.056" starttime="20190918 22:19:38.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190918 22:19:38.057" level="INFO"></msg>
<status status="PASS" endtime="20190918 22:19:38.057" starttime="20190918 22:19:38.056"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190918 22:19:38.058" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190918 22:19:38.058" starttime="20190918 22:19:38.058"></status>
</kw>
<status status="PASS" endtime="20190918 22:19:38.059" starttime="20190918 22:19:38.036"></status>
</kw>
<status status="PASS" endtime="20190918 22:19:38.059" starttime="20190918 22:19:38.035"></status>
</kw>
<status status="PASS" endtime="20190918 22:19:38.059" starttime="20190918 22:19:38.018"></status>
</kw>
<status status="PASS" endtime="20190918 22:19:38.059" starttime="20190918 22:19:38.017"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190918 22:19:38.063" level="INFO">Running command 'ozone sh volume create o3://om:9862/03851-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20190918 22:19:39.111" level="INFO">${rc} = 1</msg>
<msg timestamp="20190918 22:19:39.111" level="INFO">${output} = Exception in thread "main" java.lang.NoSuchMethodError: io.opentracing.ScopeManager.activeSpan()Lio/opentracing/Span;
	at io.jaegertracing.internal.JaegerTracer$SpanBuilder.start(JaegerTracer.java:440...</msg>
<status status="PASS" endtime="20190918 22:19:39.111" starttime="20190918 22:19:38.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190918 22:19:39.112" level="INFO">Exception in thread "main" java.lang.NoSuchMethodError: io.opentracing.ScopeManager.activeSpan()Lio/opentracing/Span;
	at io.jaegertracing.internal.JaegerTracer$SpanBuilder.start(JaegerTracer.java:440)
	at io.jaegertracing.internal.JaegerTracer$SpanBuilder$1.&lt;init&gt;(JaegerTracer.java:485)
	at io.jaegertracing.internal.JaegerTracer$SpanBuilder.startActive(JaegerTracer.java:484)
	at org.apache.hadoop.ozone.web.ozShell.OzoneShell.execute(OzoneShell.java:59)
	at org.apache.hadoop.hdds.cli.GenericCli.run(GenericCli.java:56)
	at org.apache.hadoop.ozone.web.ozShell.OzoneShell.main(OzoneShell.java:53)</msg>
<status status="PASS" endtime="20190918 22:19:39.113" starttime="20190918 22:19:39.112"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190918 22:19:39.113" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20190918 22:19:39.114" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20190918 22:19:39.114" starttime="20190918 22:19:39.113"></status>
</kw>
<status status="FAIL" endtime="20190918 22:19:39.114" starttime="20190918 22:19:38.060"></status>
</kw>
<status status="FAIL" endtime="20190918 22:19:39.114" starttime="20190918 22:19:38.060"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20190918 22:19:39.115" critical="yes" starttime="20190918 22:19:38.016">1 != 0</status>
</test>
<test id="s1-s2-t2" name="RpcClient volume acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190918 22:19:39.119" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20190918 22:19:39.126" level="INFO">${rc} = 0</msg>
<msg timestamp="20190918 22:19:39.126" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20190918 22:19:39.126" starttime="20190918 22:19:39.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190918 22:19:39.127" level="INFO">scm</msg>
<status status="PASS" endtime="20190918 22:19:39.128" starttime="20190918 22:19:39.127"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190918 22:19:39.128" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190918 22:19:39.128" starttime="20190918 22:19:39.128"></status>
</kw>
<msg timestamp="20190918 22:19:39.129" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20190918 22:19:39.129" starttime="20190918 22:19:39.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20190918 22:19:39.130" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20190918 22:19:39.130" starttime="20190918 22:19:39.129"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190918 22:19:39.133" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20190918 22:19:39.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20190918 22:19:39.146" level="INFO">${output} = </msg>
<status status="PASS" endtime="20190918 22:19:39.146" starttime="20190918 22:19:39.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190918 22:19:39.147" level="INFO"></msg>
<status status="PASS" endtime="20190918 22:19:39.147" starttime="20190918 22:19:39.146"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190918 22:19:39.148" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190918 22:19:39.148" starttime="20190918 22:19:39.147"></status>
</kw>
<status status="PASS" endtime="20190918 22:19:39.148" starttime="20190918 22:19:39.130"></status>
</kw>
<status status="PASS" endtime="20190918 22:19:39.148" starttime="20190918 22:19:39.130"></status>
</kw>
<status status="PASS" endtime="20190918 22:19:39.148" starttime="20190918 22:19:39.117"></status>
</kw>
<status status="PASS" endtime="20190918 22:19:39.149" starttime="20190918 22:19:39.116"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190918 22:19:39.152" level="INFO">Running command 'ozone sh volume create o3://om:9862/03851-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20190918 22:19:40.150" level="INFO">${rc} = 1</msg>
<msg timestamp="20190918 22:19:40.150" level="INFO">${output} = Exception in thread "main" java.lang.NoSuchMethodError: io.opentracing.ScopeManager.activeSpan()Lio/opentracing/Span;
	at io.jaegertracing.internal.JaegerTracer$SpanBuilder.start(JaegerTracer.java:440...</msg>
<status status="PASS" endtime="20190918 22:19:40.151" starttime="20190918 22:19:39.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190918 22:19:40.152" level="INFO">Exception in thread "main" java.lang.NoSuchMethodError: io.opentracing.ScopeManager.activeSpan()Lio/opentracing/Span;
	at io.jaegertracing.internal.JaegerTracer$SpanBuilder.start(JaegerTracer.java:440)
	at io.jaegertracing.internal.JaegerTracer$SpanBuilder$1.&lt;init&gt;(JaegerTracer.java:485)
	at io.jaegertracing.internal.JaegerTracer$SpanBuilder.startActive(JaegerTracer.java:484)
	at org.apache.hadoop.ozone.web.ozShell.OzoneShell.execute(OzoneShell.java:59)
	at org.apache.hadoop.hdds.cli.GenericCli.run(GenericCli.java:56)
	at org.apache.hadoop.ozone.web.ozShell.OzoneShell.main(OzoneShell.java:53)</msg>
<status status="PASS" endtime="20190918 22:19:40.152" starttime="20190918 22:19:40.151"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190918 22:19:40.153" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20190918 22:19:40.154" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20190918 22:19:40.154" starttime="20190918 22:19:40.153"></status>
</kw>
<status status="FAIL" endtime="20190918 22:19:40.154" starttime="20190918 22:19:39.149"></status>
</kw>
<status status="FAIL" endtime="20190918 22:19:40.154" starttime="20190918 22:19:39.149"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20190918 22:19:40.155" critical="yes" starttime="20190918 22:19:39.115">1 != 0</status>
</test>
<test id="s1-s2-t3" name="RpcClient bucket acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190918 22:19:40.161" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20190918 22:19:40.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20190918 22:19:40.167" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20190918 22:19:40.167" starttime="20190918 22:19:40.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190918 22:19:40.169" level="INFO">scm</msg>
<status status="PASS" endtime="20190918 22:19:40.170" starttime="20190918 22:19:40.168"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190918 22:19:40.171" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190918 22:19:40.171" starttime="20190918 22:19:40.170"></status>
</kw>
<msg timestamp="20190918 22:19:40.172" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20190918 22:19:40.172" starttime="20190918 22:19:40.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20190918 22:19:40.174" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20190918 22:19:40.174" starttime="20190918 22:19:40.172"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190918 22:19:40.179" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20190918 22:19:40.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20190918 22:19:40.196" level="INFO">${output} = </msg>
<status status="PASS" endtime="20190918 22:19:40.196" starttime="20190918 22:19:40.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190918 22:19:40.198" level="INFO"></msg>
<status status="PASS" endtime="20190918 22:19:40.198" starttime="20190918 22:19:40.197"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190918 22:19:40.200" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190918 22:19:40.200" starttime="20190918 22:19:40.199"></status>
</kw>
<status status="PASS" endtime="20190918 22:19:40.200" starttime="20190918 22:19:40.175"></status>
</kw>
<status status="PASS" endtime="20190918 22:19:40.201" starttime="20190918 22:19:40.174"></status>
</kw>
<status status="PASS" endtime="20190918 22:19:40.201" starttime="20190918 22:19:40.157"></status>
</kw>
<status status="PASS" endtime="20190918 22:19:40.201" starttime="20190918 22:19:40.157"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190918 22:19:40.206" level="INFO">Running command 'ozone sh bucket create o3://om:9862/03851-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20190918 22:19:41.173" level="INFO">${rc} = 1</msg>
<msg timestamp="20190918 22:19:41.173" level="INFO">${output} = Exception in thread "main" java.lang.NoSuchMethodError: io.opentracing.ScopeManager.activeSpan()Lio/opentracing/Span;
	at io.jaegertracing.internal.JaegerTracer$SpanBuilder.start(JaegerTracer.java:440...</msg>
<status status="PASS" endtime="20190918 22:19:41.173" starttime="20190918 22:19:40.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190918 22:19:41.175" level="INFO">Exception in thread "main" java.lang.NoSuchMethodError: io.opentracing.ScopeManager.activeSpan()Lio/opentracing/Span;
	at io.jaegertracing.internal.JaegerTracer$SpanBuilder.start(JaegerTracer.java:440)
	at io.jaegertracing.internal.JaegerTracer$SpanBuilder$1.&lt;init&gt;(JaegerTracer.java:485)
	at io.jaegertracing.internal.JaegerTracer$SpanBuilder.startActive(JaegerTracer.java:484)
	at org.apache.hadoop.ozone.web.ozShell.OzoneShell.execute(OzoneShell.java:59)
	at org.apache.hadoop.hdds.cli.GenericCli.run(GenericCli.java:56)
	at org.apache.hadoop.ozone.web.ozShell.OzoneShell.main(OzoneShell.java:53)</msg>
<status status="PASS" endtime="20190918 22:19:41.176" starttime="20190918 22:19:41.174"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190918 22:19:41.177" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20190918 22:19:41.177" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20190918 22:19:41.178" starttime="20190918 22:19:41.176"></status>
</kw>
<status status="FAIL" endtime="20190918 22:19:41.178" starttime="20190918 22:19:40.203"></status>
</kw>
<status status="FAIL" endtime="20190918 22:19:41.178" starttime="20190918 22:19:40.202"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20190918 22:19:41.179" critical="yes" starttime="20190918 22:19:40.155">1 != 0</status>
</test>
<test id="s1-s2-t4" name="RpcClient key acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190918 22:19:41.186" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20190918 22:19:41.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20190918 22:19:41.194" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20190918 22:19:41.194" starttime="20190918 22:19:41.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190918 22:19:41.196" level="INFO">scm</msg>
<status status="PASS" endtime="20190918 22:19:41.197" starttime="20190918 22:19:41.195"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190918 22:19:41.198" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190918 22:19:41.198" starttime="20190918 22:19:41.197"></status>
</kw>
<msg timestamp="20190918 22:19:41.198" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20190918 22:19:41.199" starttime="20190918 22:19:41.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20190918 22:19:41.200" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20190918 22:19:41.200" starttime="20190918 22:19:41.199"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190918 22:19:41.204" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20190918 22:19:41.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20190918 22:19:41.232" level="INFO">${output} = </msg>
<status status="PASS" endtime="20190918 22:19:41.232" starttime="20190918 22:19:41.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190918 22:19:41.234" level="INFO"></msg>
<status status="PASS" endtime="20190918 22:19:41.234" starttime="20190918 22:19:41.232"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190918 22:19:41.235" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190918 22:19:41.235" starttime="20190918 22:19:41.234"></status>
</kw>
<status status="PASS" endtime="20190918 22:19:41.236" starttime="20190918 22:19:41.201"></status>
</kw>
<status status="PASS" endtime="20190918 22:19:41.236" starttime="20190918 22:19:41.200"></status>
</kw>
<status status="PASS" endtime="20190918 22:19:41.236" starttime="20190918 22:19:41.182"></status>
</kw>
<status status="PASS" endtime="20190918 22:19:41.237" starttime="20190918 22:19:41.181"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190918 22:19:41.242" level="INFO">Running command 'ozone sh key put o3://om:9862/03851-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20190918 22:19:42.277" level="INFO">${rc} = 1</msg>
<msg timestamp="20190918 22:19:42.277" level="INFO">${output} = Exception in thread "main" java.lang.NoSuchMethodError: io.opentracing.ScopeManager.activeSpan()Lio/opentracing/Span;
	at io.jaegertracing.internal.JaegerTracer$SpanBuilder.start(JaegerTracer.java:440...</msg>
<status status="PASS" endtime="20190918 22:19:42.277" starttime="20190918 22:19:41.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190918 22:19:42.279" level="INFO">Exception in thread "main" java.lang.NoSuchMethodError: io.opentracing.ScopeManager.activeSpan()Lio/opentracing/Span;
	at io.jaegertracing.internal.JaegerTracer$SpanBuilder.start(JaegerTracer.java:440)
	at io.jaegertracing.internal.JaegerTracer$SpanBuilder$1.&lt;init&gt;(JaegerTracer.java:485)
	at io.jaegertracing.internal.JaegerTracer$SpanBuilder.startActive(JaegerTracer.java:484)
	at org.apache.hadoop.ozone.web.ozShell.OzoneShell.execute(OzoneShell.java:59)
	at org.apache.hadoop.hdds.cli.GenericCli.run(GenericCli.java:56)
	at org.apache.hadoop.ozone.web.ozShell.OzoneShell.main(OzoneShell.java:53)</msg>
<status status="PASS" endtime="20190918 22:19:42.279" starttime="20190918 22:19:42.278"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190918 22:19:42.280" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20190918 22:19:42.280" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20190918 22:19:42.281" starttime="20190918 22:19:42.279"></status>
</kw>
<status status="FAIL" endtime="20190918 22:19:42.281" starttime="20190918 22:19:41.238"></status>
</kw>
<status status="FAIL" endtime="20190918 22:19:42.281" starttime="20190918 22:19:41.237"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20190918 22:19:42.282" critical="yes" starttime="20190918 22:19:41.180">1 != 0</status>
</test>
<test id="s1-s2-t5" name="RpcClient without host">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190918 22:19:42.288" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20190918 22:19:42.293" level="INFO">${rc} = 0</msg>
<msg timestamp="20190918 22:19:42.293" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20190918 22:19:42.293" starttime="20190918 22:19:42.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190918 22:19:42.294" level="INFO">scm</msg>
<status status="PASS" endtime="20190918 22:19:42.294" starttime="20190918 22:19:42.293"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190918 22:19:42.295" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190918 22:19:42.295" starttime="20190918 22:19:42.294"></status>
</kw>
<msg timestamp="20190918 22:19:42.295" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20190918 22:19:42.295" starttime="20190918 22:19:42.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20190918 22:19:42.296" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20190918 22:19:42.296" starttime="20190918 22:19:42.296"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190918 22:19:42.299" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20190918 22:19:42.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20190918 22:19:42.314" level="INFO">${output} = </msg>
<status status="PASS" endtime="20190918 22:19:42.314" starttime="20190918 22:19:42.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190918 22:19:42.316" level="INFO"></msg>
<status status="PASS" endtime="20190918 22:19:42.317" starttime="20190918 22:19:42.315"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190918 22:19:42.317" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190918 22:19:42.318" starttime="20190918 22:19:42.317"></status>
</kw>
<status status="PASS" endtime="20190918 22:19:42.318" starttime="20190918 22:19:42.297"></status>
</kw>
<status status="PASS" endtime="20190918 22:19:42.318" starttime="20190918 22:19:42.296"></status>
</kw>
<status status="PASS" endtime="20190918 22:19:42.319" starttime="20190918 22:19:42.284"></status>
</kw>
<status status="PASS" endtime="20190918 22:19:42.319" starttime="20190918 22:19:42.284"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190918 22:19:42.323" level="INFO">Running command 'ozone sh volume create o3:///03851-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20190918 22:19:43.394" level="INFO">${rc} = 1</msg>
<msg timestamp="20190918 22:19:43.394" level="INFO">${output} = Exception in thread "main" java.lang.NoSuchMethodError: io.opentracing.ScopeManager.activeSpan()Lio/opentracing/Span;
	at io.jaegertracing.internal.JaegerTracer$SpanBuilder.start(JaegerTracer.java:440...</msg>
<status status="PASS" endtime="20190918 22:19:43.394" starttime="20190918 22:19:42.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190918 22:19:43.397" level="INFO">Exception in thread "main" java.lang.NoSuchMethodError: io.opentracing.ScopeManager.activeSpan()Lio/opentracing/Span;
	at io.jaegertracing.internal.JaegerTracer$SpanBuilder.start(JaegerTracer.java:440)
	at io.jaegertracing.internal.JaegerTracer$SpanBuilder$1.&lt;init&gt;(JaegerTracer.java:485)
	at io.jaegertracing.internal.JaegerTracer$SpanBuilder.startActive(JaegerTracer.java:484)
	at org.apache.hadoop.ozone.web.ozShell.OzoneShell.execute(OzoneShell.java:59)
	at org.apache.hadoop.hdds.cli.GenericCli.run(GenericCli.java:56)
	at org.apache.hadoop.ozone.web.ozShell.OzoneShell.main(OzoneShell.java:53)</msg>
<status status="PASS" endtime="20190918 22:19:43.397" starttime="20190918 22:19:43.395"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190918 22:19:43.398" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20190918 22:19:43.399" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20190918 22:19:43.399" starttime="20190918 22:19:43.397"></status>
</kw>
<status status="FAIL" endtime="20190918 22:19:43.399" starttime="20190918 22:19:42.320"></status>
</kw>
<status status="FAIL" endtime="20190918 22:19:43.400" starttime="20190918 22:19:42.319"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20190918 22:19:43.400" critical="yes" starttime="20190918 22:19:42.282">1 != 0</status>
</test>
<test id="s1-s2-t6" name="RpcClient without scheme">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190918 22:19:43.406" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20190918 22:19:43.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20190918 22:19:43.414" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20190918 22:19:43.414" starttime="20190918 22:19:43.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190918 22:19:43.416" level="INFO">scm</msg>
<status status="PASS" endtime="20190918 22:19:43.416" starttime="20190918 22:19:43.415"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190918 22:19:43.417" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190918 22:19:43.417" starttime="20190918 22:19:43.416"></status>
</kw>
<msg timestamp="20190918 22:19:43.418" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20190918 22:19:43.418" starttime="20190918 22:19:43.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20190918 22:19:43.420" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20190918 22:19:43.420" starttime="20190918 22:19:43.419"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190918 22:19:43.425" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20190918 22:19:43.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20190918 22:19:43.439" level="INFO">${output} = </msg>
<status status="PASS" endtime="20190918 22:19:43.439" starttime="20190918 22:19:43.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190918 22:19:43.441" level="INFO"></msg>
<status status="PASS" endtime="20190918 22:19:43.441" starttime="20190918 22:19:43.440"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190918 22:19:43.442" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190918 22:19:43.442" starttime="20190918 22:19:43.441"></status>
</kw>
<status status="PASS" endtime="20190918 22:19:43.443" starttime="20190918 22:19:43.421"></status>
</kw>
<status status="PASS" endtime="20190918 22:19:43.443" starttime="20190918 22:19:43.420"></status>
</kw>
<status status="PASS" endtime="20190918 22:19:43.443" starttime="20190918 22:19:43.403"></status>
</kw>
<status status="PASS" endtime="20190918 22:19:43.443" starttime="20190918 22:19:43.402"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190918 22:19:43.448" level="INFO">Running command 'ozone sh volume create /03851-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20190918 22:19:44.438" level="INFO">${rc} = 1</msg>
<msg timestamp="20190918 22:19:44.438" level="INFO">${output} = Exception in thread "main" java.lang.NoSuchMethodError: io.opentracing.ScopeManager.activeSpan()Lio/opentracing/Span;
	at io.jaegertracing.internal.JaegerTracer$SpanBuilder.start(JaegerTracer.java:440...</msg>
<status status="PASS" endtime="20190918 22:19:44.438" starttime="20190918 22:19:43.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190918 22:19:44.440" level="INFO">Exception in thread "main" java.lang.NoSuchMethodError: io.opentracing.ScopeManager.activeSpan()Lio/opentracing/Span;
	at io.jaegertracing.internal.JaegerTracer$SpanBuilder.start(JaegerTracer.java:440)
	at io.jaegertracing.internal.JaegerTracer$SpanBuilder$1.&lt;init&gt;(JaegerTracer.java:485)
	at io.jaegertracing.internal.JaegerTracer$SpanBuilder.startActive(JaegerTracer.java:484)
	at org.apache.hadoop.ozone.web.ozShell.OzoneShell.execute(OzoneShell.java:59)
	at org.apache.hadoop.hdds.cli.GenericCli.run(GenericCli.java:56)
	at org.apache.hadoop.ozone.web.ozShell.OzoneShell.main(OzoneShell.java:53)</msg>
<status status="PASS" endtime="20190918 22:19:44.440" starttime="20190918 22:19:44.439"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190918 22:19:44.441" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20190918 22:19:44.441" level="FAIL">1 != 0</msg>
<status status="FAIL" endtime="20190918 22:19:44.441" starttime="20190918 22:19:44.440"></status>
</kw>
<status status="FAIL" endtime="20190918 22:19:44.442" starttime="20190918 22:19:43.445"></status>
</kw>
<status status="FAIL" endtime="20190918 22:19:44.442" starttime="20190918 22:19:43.444"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20190918 22:19:44.442" critical="yes" starttime="20190918 22:19:43.401">1 != 0</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" endtime="20190918 22:19:44.444" starttime="20190918 22:19:38.002"></status>
</suite>
<status status="FAIL" endtime="20190918 22:19:44.449" starttime="20190918 22:19:36.002"></status>
</suite>
<statistics>
<total>
<stat fail="7" pass="1">Critical Tests</stat>
<stat fail="7" pass="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="7" id="s1" name="ozonesecure-basic" pass="1">ozonesecure-basic</stat>
<stat fail="1" id="s1-s1" name="Basic" pass="1">ozonesecure-basic.Basic</stat>
<stat fail="6" id="s1-s2" name="Ozone-Shell" pass="0">ozonesecure-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
