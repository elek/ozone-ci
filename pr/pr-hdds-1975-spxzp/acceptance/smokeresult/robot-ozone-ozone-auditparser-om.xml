<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20190820 13:52:44.506" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/auditparser" id="s1" name="ozone-auditparser">
<suite source="/opt/hadoop/smoketest/auditparser/auditparser.robot" id="s1-s1" name="Auditparser">
<test id="s1-s1-t1" name="Initiating freon to generate data">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190820 13:52:44.558" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 2&gt;&amp;1'.</msg>
<msg timestamp="20190820 13:52:57.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20190820 13:52:57.423" level="INFO">${output} = 2019-08-20 13:52:45 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2019-08-20 13:52:45 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2019...</msg>
<status status="PASS" endtime="20190820 13:52:57.423" starttime="20190820 13:52:44.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190820 13:52:57.425" level="INFO">2019-08-20 13:52:45 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2019-08-20 13:52:45 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2019-08-20 13:52:45 INFO  MetricsSystemImpl:191 - ozone-freon metrics system started
2019-08-20 13:52:46 INFO  RandomKeyGenerator:275 - Number of Threads: 1
2019-08-20 13:52:46 INFO  RandomKeyGenerator:280 - Number of Volumes: 5.
2019-08-20 13:52:46 INFO  RandomKeyGenerator:281 - Number of Buckets per Volume: 5.
2019-08-20 13:52:46 INFO  RandomKeyGenerator:282 - Number of Keys per Bucket: 5.
2019-08-20 13:52:46 INFO  RandomKeyGenerator:283 - Key size: 10240 bytes
2019-08-20 13:52:46 INFO  RandomKeyGenerator:284 - Buffer size: 4096 bytes
2019-08-20 13:52:46 INFO  RandomKeyGenerator:304 - Starting progress bar Thread.

 0.00% |?                                                                                                    |  0/125 Time: 0:00:002019-08-20 13:52:46 INFO  RpcClient:292 - Creating Volume: vol-0-53346, with hadoop as owner.
2019-08-20 13:52:47 INFO  RpcClient:292 - Creating Volume: vol-1-99903, with hadoop as owner.
2019-08-20 13:52:47 INFO  RpcClient:292 - Creating Volume: vol-2-43429, with hadoop as owner.
2019-08-20 13:52:47 INFO  RpcClient:292 - Creating Volume: vol-3-62117, with hadoop as owner.
2019-08-20 13:52:47 INFO  RpcClient:292 - Creating Volume: vol-4-73436, with hadoop as owner.
2019-08-20 13:52:47 INFO  RpcClient:431 - Creating Bucket: vol-0-53346/bucket-0-55880, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 13:52:47 INFO  RpcClient:431 - Creating Bucket: vol-1-99903/bucket-0-57641, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 13:52:47 INFO  RpcClient:431 - Creating Bucket: vol-2-43429/bucket-0-62974, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 13:52:47 INFO  RpcClient:431 - Creating Bucket: vol-3-62117/bucket-0-64831, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 13:52:47 INFO  RpcClient:431 - Creating Bucket: vol-4-73436/bucket-0-99523, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 13:52:47 INFO  RpcClient:431 - Creating Bucket: vol-0-53346/bucket-1-82963, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 13:52:47 INFO  RpcClient:431 - Creating Bucket: vol-1-99903/bucket-1-42884, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 13:52:47 INFO  RpcClient:431 - Creating Bucket: vol-2-43429/bucket-1-03367, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 13:52:47 INFO  RpcClient:431 - Creating Bucket: vol-3-62117/bucket-1-91795, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 13:52:47 INFO  RpcClient:431 - Creating Bucket: vol-4-73436/bucket-1-27063, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 13:52:47 INFO  RpcClient:431 - Creating Bucket: vol-0-53346/bucket-2-54372, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 13:52:47 INFO  RpcClient:431 - Creating Bucket: vol-1-99903/bucket-2-07681, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 13:52:47 INFO  RpcClient:431 - Creating Bucket: vol-2-43429/bucket-2-12883, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 13:52:47 INFO  RpcClient:431 - Creating Bucket: vol-3-62117/bucket-2-96263, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 13:52:47 INFO  RpcClient:431 - Creating Bucket: vol-4-73436/bucket-2-54367, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 13:52:47 INFO  RpcClient:431 - Creating Bucket: vol-0-53346/bucket-3-54178, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 13:52:47 INFO  RpcClient:431 - Creating Bucket: vol-1-99903/bucket-3-85728, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 13:52:47 INFO  RpcClient:431 - Creating Bucket: vol-2-43429/bucket-3-88884, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 13:52:47 INFO  RpcClient:431 - Creating Bucket: vol-3-62117/bucket-3-48864, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 13:52:47 INFO  RpcClient:431 - Creating Bucket: vol-4-73436/bucket-3-85704, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 13:52:47 INFO  RpcClient:431 - Creating Bucket: vol-0-53346/bucket-4-16679, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 13:52:47 INFO  RpcClient:431 - Creating Bucket: vol-1-99903/bucket-4-59507, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 13:52:47 INFO  RpcClient:431 - Creating Bucket: vol-2-43429/bucket-4-69265, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 13:52:47 INFO  RpcClient:431 - Creating Bucket: vol-3-62117/bucket-4-63969, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 13:52:47 INFO  RpcClient:431 - Creating Bucket: vol-4-73436/bucket-4-78144, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 13:52:47 WARN  MetricsSystemImpl:151 - ozone-freon metrics system already initialized!
 0.00% |?                                                                                                    |  0/125 Time: 0:00:01WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil (file:/opt/hadoop/share/ozone/lib/ratis-thirdparty-misc-0.2.0.jar) to field java.nio.Buffer.address
WARNING: Please consider reporting this to the maintainers of org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
 1.60% |??                                                                                                   |  2/125 Time: 0:00:02 26.40% |???????????????????????????                                                                          |  33/125 Time: 0:00:03 63.20% |????????????????????????????????????????????????????????????????                                     |  79/125 Time: 0:00:04 91.20% |????????????????????????????????????????????????????????????????????????????????????????????         |  114/125 Time: 0:00:05 100.00% |?????????????????????????????????????????????????????????????????????????????????????????????????????|  125/125 Time: 0:00:06

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,079
Average Time spent in bucket creation: 00:00:00,110
Average Time spent in key creation: 00:00:00,787
Average Time spent in key write: 00:00:04,269
Total bytes written: 1280000
Total Execution time: 00:00:11,238
***************************************************</msg>
<status status="PASS" endtime="20190820 13:52:57.425" starttime="20190820 13:52:57.424"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190820 13:52:57.426" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 13:52:57.426" starttime="20190820 13:52:57.425"></status>
</kw>
<msg timestamp="20190820 13:52:57.426" level="INFO">${result} = 2019-08-20 13:52:45 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2019-08-20 13:52:45 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2019...</msg>
<status status="PASS" endtime="20190820 13:52:57.427" starttime="20190820 13:52:44.556"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20190820 13:52:57.431" starttime="20190820 13:52:57.430"></status>
</kw>
<status status="PASS" endtime="20190820 13:52:57.431" starttime="20190820 13:52:57.427"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20190820 13:52:57.432" starttime="20190820 13:52:57.431"></status>
</kw>
<status status="PASS" endtime="20190820 13:52:57.432" critical="yes" starttime="20190820 13:52:44.556"></status>
</test>
<test id="s1-s1-t2" name="Testing audit parser">
<kw name="Get Environment Variable" library="OperatingSystem">
<doc>Returns the value of an environment variable with the given name.</doc>
<arguments>
<arg>HADOOP_LOG_DIR</arg>
<arg>/var/log/hadoop</arg>
</arguments>
<assign>
<var>${logdir}</var>
</assign>
<msg timestamp="20190820 13:52:57.434" level="INFO">${logdir} = /var/log/hadoop</msg>
<status status="PASS" endtime="20190820 13:52:57.434" starttime="20190820 13:52:57.433"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ls -t "${logdir}" | grep om-audit | head -1</arg>
</arguments>
<assign>
<var>${logfile}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190820 13:52:57.437" level="INFO">Running command 'ls -t "/var/log/hadoop" | grep om-audit | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20190820 13:52:57.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20190820 13:52:57.444" level="INFO">${output} = om-audit-85b152cb410a.log</msg>
<status status="PASS" endtime="20190820 13:52:57.444" starttime="20190820 13:52:57.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190820 13:52:57.445" level="INFO">om-audit-85b152cb410a.log</msg>
<status status="PASS" endtime="20190820 13:52:57.445" starttime="20190820 13:52:57.444"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190820 13:52:57.446" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 13:52:57.446" starttime="20190820 13:52:57.445"></status>
</kw>
<msg timestamp="20190820 13:52:57.446" level="INFO">${logfile} = om-audit-85b152cb410a.log</msg>
<status status="PASS" endtime="20190820 13:52:57.446" starttime="20190820 13:52:57.434"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" load "${logdir}/${logfile}"</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190820 13:52:57.449" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" load "/var/log/hadoop/om-audit-85b152cb410a.log" 2&gt;&amp;1'.</msg>
<msg timestamp="20190820 13:53:10.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20190820 13:53:10.392" level="INFO">${output} = /var/log/hadoop/om-audit-85b152cb410a.log has been loaded successfully</msg>
<status status="PASS" endtime="20190820 13:53:10.392" starttime="20190820 13:52:57.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190820 13:53:10.393" level="INFO">/var/log/hadoop/om-audit-85b152cb410a.log has been loaded successfully</msg>
<status status="PASS" endtime="20190820 13:53:10.393" starttime="20190820 13:53:10.393"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190820 13:53:10.394" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 13:53:10.394" starttime="20190820 13:53:10.394"></status>
</kw>
<status status="PASS" endtime="20190820 13:53:10.394" starttime="20190820 13:52:57.447"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" template top5cmds</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190820 13:53:10.396" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" template top5cmds 2&gt;&amp;1'.</msg>
<msg timestamp="20190820 13:53:11.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20190820 13:53:11.297" level="INFO">${output} = ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190820 13:53:11.298" starttime="20190820 13:53:10.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190820 13:53:11.299" level="INFO">ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190820 13:53:11.299" starttime="20190820 13:53:11.298"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190820 13:53:11.299" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 13:53:11.299" starttime="20190820 13:53:11.299"></status>
</kw>
<msg timestamp="20190820 13:53:11.300" level="INFO">${result} = ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190820 13:53:11.300" starttime="20190820 13:53:10.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ALLOCATE_KEY</arg>
</arguments>
<status status="PASS" endtime="20190820 13:53:11.300" starttime="20190820 13:53:11.300"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" template top5users</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190820 13:53:11.303" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" template top5users 2&gt;&amp;1'.</msg>
<msg timestamp="20190820 13:53:12.199" level="INFO">${rc} = 0</msg>
<msg timestamp="20190820 13:53:12.199" level="INFO">${output} = hadoop	280	
</msg>
<status status="PASS" endtime="20190820 13:53:12.199" starttime="20190820 13:53:11.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190820 13:53:12.200" level="INFO">hadoop	280	
</msg>
<status status="PASS" endtime="20190820 13:53:12.200" starttime="20190820 13:53:12.200"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190820 13:53:12.201" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 13:53:12.201" starttime="20190820 13:53:12.200"></status>
</kw>
<msg timestamp="20190820 13:53:12.201" level="INFO">${result} = hadoop	280	
</msg>
<status status="PASS" endtime="20190820 13:53:12.201" starttime="20190820 13:53:11.300"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Set username</arg>
</arguments>
<status status="PASS" endtime="20190820 13:53:12.202" starttime="20190820 13:53:12.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${user}</arg>
</arguments>
<status status="PASS" endtime="20190820 13:53:12.203" starttime="20190820 13:53:12.202"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'"</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190820 13:53:12.206" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20190820 13:53:13.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20190820 13:53:13.075" level="INFO">${output} = 5	
</msg>
<status status="PASS" endtime="20190820 13:53:13.075" starttime="20190820 13:53:12.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190820 13:53:13.076" level="INFO">5	
</msg>
<status status="PASS" endtime="20190820 13:53:13.076" starttime="20190820 13:53:13.076"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190820 13:53:13.077" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 13:53:13.077" starttime="20190820 13:53:13.076"></status>
</kw>
<msg timestamp="20190820 13:53:13.077" level="INFO">${result} = 5	
</msg>
<status status="PASS" endtime="20190820 13:53:13.078" starttime="20190820 13:53:12.203"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190820 13:53:13.078" level="INFO">${result} = 5.0</msg>
<status status="PASS" endtime="20190820 13:53:13.078" starttime="20190820 13:53:13.078"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}&gt;${count}</arg>
</arguments>
<status status="PASS" endtime="20190820 13:53:13.079" starttime="20190820 13:53:13.078"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'"</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190820 13:53:13.081" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20190820 13:53:13.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20190820 13:53:13.882" level="INFO">${output} = 25	
</msg>
<status status="PASS" endtime="20190820 13:53:13.882" starttime="20190820 13:53:13.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190820 13:53:13.883" level="INFO">25	
</msg>
<status status="PASS" endtime="20190820 13:53:13.883" starttime="20190820 13:53:13.883"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190820 13:53:13.884" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 13:53:13.884" starttime="20190820 13:53:13.884"></status>
</kw>
<msg timestamp="20190820 13:53:13.884" level="INFO">${result} = 25	
</msg>
<status status="PASS" endtime="20190820 13:53:13.884" starttime="20190820 13:53:13.079"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190820 13:53:13.885" level="INFO">${result} = 25.0</msg>
<status status="PASS" endtime="20190820 13:53:13.885" starttime="20190820 13:53:13.885"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}&gt;${count}</arg>
</arguments>
<status status="PASS" endtime="20190820 13:53:13.886" starttime="20190820 13:53:13.885"></status>
</kw>
<status status="PASS" endtime="20190820 13:53:13.886" critical="yes" starttime="20190820 13:52:57.432"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20190820 13:53:13.887" starttime="20190820 13:52:44.531"></status>
</suite>
<status status="PASS" endtime="20190820 13:53:13.889" starttime="20190820 13:52:44.507"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-auditparser" pass="2">ozone-auditparser</stat>
<stat fail="0" id="s1-s1" name="Auditparser" pass="2">ozone-auditparser.Auditparser</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
