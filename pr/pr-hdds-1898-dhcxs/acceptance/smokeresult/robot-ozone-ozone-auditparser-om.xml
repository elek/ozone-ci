<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20190821 11:17:25.205" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/auditparser" id="s1" name="ozone-auditparser">
<suite source="/opt/hadoop/smoketest/auditparser/auditparser.robot" id="s1-s1" name="Auditparser">
<test id="s1-s1-t1" name="Initiating freon to generate data">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190821 11:17:25.258" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 2&gt;&amp;1'.</msg>
<msg timestamp="20190821 11:17:38.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20190821 11:17:38.601" level="INFO">${output} = 2019-08-21 11:17:26 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2019-08-21 11:17:26 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2019...</msg>
<status status="PASS" endtime="20190821 11:17:38.602" starttime="20190821 11:17:25.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190821 11:17:38.603" level="INFO">2019-08-21 11:17:26 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2019-08-21 11:17:26 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2019-08-21 11:17:26 INFO  MetricsSystemImpl:191 - ozone-freon metrics system started
2019-08-21 11:17:28 INFO  RandomKeyGenerator:275 - Number of Threads: 1
2019-08-21 11:17:28 INFO  RandomKeyGenerator:280 - Number of Volumes: 5.
2019-08-21 11:17:28 INFO  RandomKeyGenerator:281 - Number of Buckets per Volume: 5.
2019-08-21 11:17:28 INFO  RandomKeyGenerator:282 - Number of Keys per Bucket: 5.
2019-08-21 11:17:28 INFO  RandomKeyGenerator:283 - Key size: 10240 bytes
2019-08-21 11:17:28 INFO  RandomKeyGenerator:284 - Buffer size: 4096 bytes
2019-08-21 11:17:28 INFO  RandomKeyGenerator:304 - Starting progress bar Thread.

 0.00% |?                                                                                                    |  0/125 Time: 0:00:002019-08-21 11:17:28 INFO  RpcClient:292 - Creating Volume: vol-0-73593, with hadoop as owner.
2019-08-21 11:17:28 INFO  RpcClient:292 - Creating Volume: vol-1-35453, with hadoop as owner.
2019-08-21 11:17:28 INFO  RpcClient:292 - Creating Volume: vol-2-90123, with hadoop as owner.
2019-08-21 11:17:28 INFO  RpcClient:292 - Creating Volume: vol-3-34478, with hadoop as owner.
2019-08-21 11:17:28 INFO  RpcClient:292 - Creating Volume: vol-4-74702, with hadoop as owner.
2019-08-21 11:17:28 INFO  RpcClient:431 - Creating Bucket: vol-0-73593/bucket-0-49232, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 11:17:28 INFO  RpcClient:431 - Creating Bucket: vol-1-35453/bucket-0-13877, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 11:17:28 INFO  RpcClient:431 - Creating Bucket: vol-2-90123/bucket-0-87518, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 11:17:28 INFO  RpcClient:431 - Creating Bucket: vol-3-34478/bucket-0-89347, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 11:17:28 INFO  RpcClient:431 - Creating Bucket: vol-4-74702/bucket-0-88063, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 11:17:28 INFO  RpcClient:431 - Creating Bucket: vol-0-73593/bucket-1-47964, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 11:17:28 INFO  RpcClient:431 - Creating Bucket: vol-1-35453/bucket-1-27756, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 11:17:28 INFO  RpcClient:431 - Creating Bucket: vol-2-90123/bucket-1-77734, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 11:17:28 INFO  RpcClient:431 - Creating Bucket: vol-3-34478/bucket-1-12423, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 11:17:28 INFO  RpcClient:431 - Creating Bucket: vol-4-74702/bucket-1-60386, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 11:17:28 INFO  RpcClient:431 - Creating Bucket: vol-0-73593/bucket-2-31048, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 11:17:28 INFO  RpcClient:431 - Creating Bucket: vol-1-35453/bucket-2-45788, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 11:17:28 INFO  RpcClient:431 - Creating Bucket: vol-2-90123/bucket-2-10511, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 11:17:28 INFO  RpcClient:431 - Creating Bucket: vol-3-34478/bucket-2-38601, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 11:17:28 INFO  RpcClient:431 - Creating Bucket: vol-4-74702/bucket-2-71862, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 11:17:28 INFO  RpcClient:431 - Creating Bucket: vol-0-73593/bucket-3-91056, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 11:17:28 INFO  RpcClient:431 - Creating Bucket: vol-1-35453/bucket-3-70096, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 11:17:28 INFO  RpcClient:431 - Creating Bucket: vol-2-90123/bucket-3-85064, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 11:17:28 INFO  RpcClient:431 - Creating Bucket: vol-3-34478/bucket-3-80175, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 11:17:28 INFO  RpcClient:431 - Creating Bucket: vol-4-74702/bucket-3-20464, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 11:17:28 INFO  RpcClient:431 - Creating Bucket: vol-0-73593/bucket-4-60881, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 11:17:28 INFO  RpcClient:431 - Creating Bucket: vol-1-35453/bucket-4-18613, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 11:17:28 INFO  RpcClient:431 - Creating Bucket: vol-2-90123/bucket-4-04575, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 11:17:28 INFO  RpcClient:431 - Creating Bucket: vol-3-34478/bucket-4-02154, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 11:17:28 INFO  RpcClient:431 - Creating Bucket: vol-4-74702/bucket-4-71315, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-21 11:17:28 WARN  MetricsSystemImpl:151 - ozone-freon metrics system already initialized!
 0.00% |?                                                                                                    |  0/125 Time: 0:00:01WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil (file:/opt/hadoop/share/ozone/lib/ratis-thirdparty-misc-0.2.0.jar) to field java.nio.Buffer.address
WARNING: Please consider reporting this to the maintainers of org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
 0.80% |?                                                                                                    |  1/125 Time: 0:00:02 19.20% |????????????????????                                                                                 |  24/125 Time: 0:00:03 47.20% |????????????????????????????????????????????????                                                     |  59/125 Time: 0:00:04 80.00% |?????????????????????????????????????????????????????????????????????????????????                    |  100/125 Time: 0:00:05 100.00% |?????????????????????????????????????????????????????????????????????????????????????????????????????|  125/125 Time: 0:00:06

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,101
Average Time spent in bucket creation: 00:00:00,074
Average Time spent in key creation: 00:00:00,806
Average Time spent in key write: 00:00:04,532
Total bytes written: 1280000
Total Execution time: 00:00:11,464
***************************************************</msg>
<status status="PASS" endtime="20190821 11:17:38.604" starttime="20190821 11:17:38.602"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190821 11:17:38.605" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190821 11:17:38.605" starttime="20190821 11:17:38.604"></status>
</kw>
<msg timestamp="20190821 11:17:38.605" level="INFO">${result} = 2019-08-21 11:17:26 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2019-08-21 11:17:26 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2019...</msg>
<status status="PASS" endtime="20190821 11:17:38.605" starttime="20190821 11:17:25.256"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20190821 11:17:38.610" starttime="20190821 11:17:38.609"></status>
</kw>
<status status="PASS" endtime="20190821 11:17:38.610" starttime="20190821 11:17:38.606"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20190821 11:17:38.611" starttime="20190821 11:17:38.610"></status>
</kw>
<status status="PASS" endtime="20190821 11:17:38.611" critical="yes" starttime="20190821 11:17:25.255"></status>
</test>
<test id="s1-s1-t2" name="Testing audit parser">
<kw name="Get Environment Variable" library="OperatingSystem">
<doc>Returns the value of an environment variable with the given name.</doc>
<arguments>
<arg>HADOOP_LOG_DIR</arg>
<arg>/var/log/hadoop</arg>
</arguments>
<assign>
<var>${logdir}</var>
</assign>
<msg timestamp="20190821 11:17:38.613" level="INFO">${logdir} = /var/log/hadoop</msg>
<status status="PASS" endtime="20190821 11:17:38.614" starttime="20190821 11:17:38.613"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ls -t "${logdir}" | grep om-audit | head -1</arg>
</arguments>
<assign>
<var>${logfile}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190821 11:17:38.617" level="INFO">Running command 'ls -t "/var/log/hadoop" | grep om-audit | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20190821 11:17:38.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20190821 11:17:38.626" level="INFO">${output} = om-audit-e1ce373714c3.log</msg>
<status status="PASS" endtime="20190821 11:17:38.626" starttime="20190821 11:17:38.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190821 11:17:38.627" level="INFO">om-audit-e1ce373714c3.log</msg>
<status status="PASS" endtime="20190821 11:17:38.628" starttime="20190821 11:17:38.627"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190821 11:17:38.629" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190821 11:17:38.629" starttime="20190821 11:17:38.628"></status>
</kw>
<msg timestamp="20190821 11:17:38.629" level="INFO">${logfile} = om-audit-e1ce373714c3.log</msg>
<status status="PASS" endtime="20190821 11:17:38.630" starttime="20190821 11:17:38.614"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" load "${logdir}/${logfile}"</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190821 11:17:38.633" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" load "/var/log/hadoop/om-audit-e1ce373714c3.log" 2&gt;&amp;1'.</msg>
<msg timestamp="20190821 11:17:46.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20190821 11:17:46.582" level="INFO">${output} = /var/log/hadoop/om-audit-e1ce373714c3.log has been loaded successfully</msg>
<status status="PASS" endtime="20190821 11:17:46.582" starttime="20190821 11:17:38.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190821 11:17:46.584" level="INFO">/var/log/hadoop/om-audit-e1ce373714c3.log has been loaded successfully</msg>
<status status="PASS" endtime="20190821 11:17:46.584" starttime="20190821 11:17:46.583"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190821 11:17:46.585" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190821 11:17:46.585" starttime="20190821 11:17:46.584"></status>
</kw>
<status status="PASS" endtime="20190821 11:17:46.586" starttime="20190821 11:17:38.630"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" template top5cmds</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190821 11:17:46.589" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" template top5cmds 2&gt;&amp;1'.</msg>
<msg timestamp="20190821 11:17:47.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20190821 11:17:47.497" level="INFO">${output} = ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190821 11:17:47.497" starttime="20190821 11:17:46.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190821 11:17:47.499" level="INFO">ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190821 11:17:47.499" starttime="20190821 11:17:47.498"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190821 11:17:47.500" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190821 11:17:47.501" starttime="20190821 11:17:47.499"></status>
</kw>
<msg timestamp="20190821 11:17:47.501" level="INFO">${result} = ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190821 11:17:47.501" starttime="20190821 11:17:46.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ALLOCATE_KEY</arg>
</arguments>
<status status="PASS" endtime="20190821 11:17:47.502" starttime="20190821 11:17:47.502"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" template top5users</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190821 11:17:47.506" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" template top5users 2&gt;&amp;1'.</msg>
<msg timestamp="20190821 11:17:48.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20190821 11:17:48.312" level="INFO">${output} = hadoop	280	
</msg>
<status status="PASS" endtime="20190821 11:17:48.312" starttime="20190821 11:17:47.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190821 11:17:48.314" level="INFO">hadoop	280	
</msg>
<status status="PASS" endtime="20190821 11:17:48.314" starttime="20190821 11:17:48.313"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190821 11:17:48.315" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190821 11:17:48.315" starttime="20190821 11:17:48.314"></status>
</kw>
<msg timestamp="20190821 11:17:48.315" level="INFO">${result} = hadoop	280	
</msg>
<status status="PASS" endtime="20190821 11:17:48.315" starttime="20190821 11:17:47.503"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Set username</arg>
</arguments>
<status status="PASS" endtime="20190821 11:17:48.317" starttime="20190821 11:17:48.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${user}</arg>
</arguments>
<status status="PASS" endtime="20190821 11:17:48.318" starttime="20190821 11:17:48.317"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'"</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190821 11:17:48.322" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20190821 11:17:49.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20190821 11:17:49.133" level="INFO">${output} = 5	
</msg>
<status status="PASS" endtime="20190821 11:17:49.133" starttime="20190821 11:17:48.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190821 11:17:49.134" level="INFO">5	
</msg>
<status status="PASS" endtime="20190821 11:17:49.134" starttime="20190821 11:17:49.134"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190821 11:17:49.135" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190821 11:17:49.135" starttime="20190821 11:17:49.135"></status>
</kw>
<msg timestamp="20190821 11:17:49.135" level="INFO">${result} = 5	
</msg>
<status status="PASS" endtime="20190821 11:17:49.135" starttime="20190821 11:17:48.318"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190821 11:17:49.136" level="INFO">${result} = 5.0</msg>
<status status="PASS" endtime="20190821 11:17:49.136" starttime="20190821 11:17:49.135"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}&gt;${count}</arg>
</arguments>
<status status="PASS" endtime="20190821 11:17:49.137" starttime="20190821 11:17:49.136"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'"</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190821 11:17:49.139" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20190821 11:17:49.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20190821 11:17:49.978" level="INFO">${output} = 25	
</msg>
<status status="PASS" endtime="20190821 11:17:49.979" starttime="20190821 11:17:49.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190821 11:17:49.980" level="INFO">25	
</msg>
<status status="PASS" endtime="20190821 11:17:49.980" starttime="20190821 11:17:49.979"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190821 11:17:49.980" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190821 11:17:49.981" starttime="20190821 11:17:49.980"></status>
</kw>
<msg timestamp="20190821 11:17:49.981" level="INFO">${result} = 25	
</msg>
<status status="PASS" endtime="20190821 11:17:49.981" starttime="20190821 11:17:49.137"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190821 11:17:49.982" level="INFO">${result} = 25.0</msg>
<status status="PASS" endtime="20190821 11:17:49.982" starttime="20190821 11:17:49.981"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}&gt;${count}</arg>
</arguments>
<status status="PASS" endtime="20190821 11:17:49.982" starttime="20190821 11:17:49.982"></status>
</kw>
<status status="PASS" endtime="20190821 11:17:49.983" critical="yes" starttime="20190821 11:17:38.612"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20190821 11:17:49.984" starttime="20190821 11:17:25.231"></status>
</suite>
<status status="PASS" endtime="20190821 11:17:49.986" starttime="20190821 11:17:25.206"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-auditparser" pass="2">ozone-auditparser</stat>
<stat fail="0" id="s1-s1" name="Auditparser" pass="2">ozone-auditparser.Auditparser</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
