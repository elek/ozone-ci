<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20190820 14:47:07.105" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/auditparser" id="s1" name="ozone-auditparser">
<suite source="/opt/hadoop/smoketest/auditparser/auditparser.robot" id="s1-s1" name="Auditparser">
<test id="s1-s1-t1" name="Initiating freon to generate data">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190820 14:47:07.159" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 2&gt;&amp;1'.</msg>
<msg timestamp="20190820 14:47:50.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20190820 14:47:50.206" level="INFO">${output} = 2019-08-20 14:47:08 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2019-08-20 14:47:08 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2019...</msg>
<status status="PASS" endtime="20190820 14:47:50.206" starttime="20190820 14:47:07.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190820 14:47:50.208" level="INFO">2019-08-20 14:47:08 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2019-08-20 14:47:08 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2019-08-20 14:47:08 INFO  MetricsSystemImpl:191 - ozone-freon metrics system started
2019-08-20 14:47:09 INFO  RandomKeyGenerator:275 - Number of Threads: 1
2019-08-20 14:47:09 INFO  RandomKeyGenerator:280 - Number of Volumes: 5.
2019-08-20 14:47:09 INFO  RandomKeyGenerator:281 - Number of Buckets per Volume: 5.
2019-08-20 14:47:09 INFO  RandomKeyGenerator:282 - Number of Keys per Bucket: 5.
2019-08-20 14:47:09 INFO  RandomKeyGenerator:283 - Key size: 10240 bytes
2019-08-20 14:47:09 INFO  RandomKeyGenerator:284 - Buffer size: 4096 bytes
2019-08-20 14:47:09 INFO  RandomKeyGenerator:304 - Starting progress bar Thread.

 0.00% |?                                                                                                    |  0/125 Time: 0:00:002019-08-20 14:47:09 INFO  RpcClient:292 - Creating Volume: vol-0-53856, with hadoop as owner.
2019-08-20 14:47:10 INFO  RpcClient:292 - Creating Volume: vol-1-02469, with hadoop as owner.
2019-08-20 14:47:10 INFO  RpcClient:292 - Creating Volume: vol-2-42499, with hadoop as owner.
2019-08-20 14:47:10 INFO  RpcClient:292 - Creating Volume: vol-3-98561, with hadoop as owner.
2019-08-20 14:47:10 INFO  RpcClient:292 - Creating Volume: vol-4-10419, with hadoop as owner.
2019-08-20 14:47:10 INFO  RpcClient:431 - Creating Bucket: vol-0-53856/bucket-0-35921, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 14:47:10 INFO  RpcClient:431 - Creating Bucket: vol-1-02469/bucket-0-63912, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 14:47:10 INFO  RpcClient:431 - Creating Bucket: vol-2-42499/bucket-0-87810, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 14:47:10 INFO  RpcClient:431 - Creating Bucket: vol-3-98561/bucket-0-40748, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 14:47:10 INFO  RpcClient:431 - Creating Bucket: vol-4-10419/bucket-0-12372, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 14:47:10 INFO  RpcClient:431 - Creating Bucket: vol-0-53856/bucket-1-17222, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 14:47:10 INFO  RpcClient:431 - Creating Bucket: vol-1-02469/bucket-1-70397, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 14:47:10 INFO  RpcClient:431 - Creating Bucket: vol-2-42499/bucket-1-93438, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 14:47:10 INFO  RpcClient:431 - Creating Bucket: vol-3-98561/bucket-1-13007, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 14:47:10 INFO  RpcClient:431 - Creating Bucket: vol-4-10419/bucket-1-18222, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 14:47:10 INFO  RpcClient:431 - Creating Bucket: vol-0-53856/bucket-2-11088, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 14:47:10 INFO  RpcClient:431 - Creating Bucket: vol-1-02469/bucket-2-02962, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 14:47:10 INFO  RpcClient:431 - Creating Bucket: vol-2-42499/bucket-2-76311, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 14:47:10 INFO  RpcClient:431 - Creating Bucket: vol-3-98561/bucket-2-97468, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 14:47:10 INFO  RpcClient:431 - Creating Bucket: vol-4-10419/bucket-2-85105, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 14:47:10 INFO  RpcClient:431 - Creating Bucket: vol-0-53856/bucket-3-86528, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 14:47:10 INFO  RpcClient:431 - Creating Bucket: vol-1-02469/bucket-3-30530, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 14:47:10 INFO  RpcClient:431 - Creating Bucket: vol-2-42499/bucket-3-46313, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 14:47:10 INFO  RpcClient:431 - Creating Bucket: vol-3-98561/bucket-3-74673, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 14:47:10 INFO  RpcClient:431 - Creating Bucket: vol-4-10419/bucket-3-20760, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 14:47:10 INFO  RpcClient:431 - Creating Bucket: vol-0-53856/bucket-4-86638, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 14:47:10 INFO  RpcClient:431 - Creating Bucket: vol-1-02469/bucket-4-77588, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 14:47:10 INFO  RpcClient:431 - Creating Bucket: vol-2-42499/bucket-4-84678, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 14:47:10 INFO  RpcClient:431 - Creating Bucket: vol-3-98561/bucket-4-65269, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-08-20 14:47:10 INFO  RpcClient:431 - Creating Bucket: vol-4-10419/bucket-4-32989, with Versioning false and Storage Type set to DISK and Encryption set to false 
 0.00% |?                                                                                                    |  0/125 Time: 0:00:012019-08-20 14:47:11 WARN  MetricsSystemImpl:151 - ozone-freon metrics system already initialized!
 0.00% |?                                                                                                    |  0/125 Time: 0:00:02WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil (file:/opt/hadoop/share/ozone/lib/ratis-thirdparty-misc-0.2.0.jar) to field java.nio.Buffer.address
WARNING: Please consider reporting this to the maintainers of org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
 0.00% |?                                                                                                    |  0/125 Time: 0:00:03 0.00% |?                                                                                                    |  0/125 Time: 0:00:04 0.00% |?                                                                                                    |  0/125 Time: 0:00:05 0.00% |?                                                                                                    |  0/125 Time: 0:00:06 0.00% |?                                                                                                    |  0/125 Time: 0:00:07 0.00% |?                                                                                                    |  0/125 Time: 0:00:08 0.00% |?                                                                                                    |  0/125 Time: 0:00:09 0.00% |?                                                                                                    |  0/125 Time: 0:00:10 0.00% |?                                                                                                    |  0/125 Time: 0:00:11 0.00% |?                                                                                                    |  0/125 Time: 0:00:12 0.00% |?                                                                                                    |  0/125 Time: 0:00:13 0.00% |?                                                                                                    |  0/125 Time: 0:00:14 0.00% |?                                                                                                    |  0/125 Time: 0:00:15 0.00% |?                                                                                                    |  0/125 Time: 0:00:16 0.00% |?                                                                                                    |  0/125 Time: 0:00:17 0.80% |?                                                                                                    |  1/125 Time: 0:00:18 0.80% |?                                                                                                    |  1/125 Time: 0:00:19 0.80% |?                                                                                                    |  1/125 Time: 0:00:20 0.80% |?                                                                                                    |  1/125 Time: 0:00:21 0.80% |?                                                                                                    |  1/125 Time: 0:00:22 0.80% |?                                                                                                    |  1/125 Time: 0:00:23 0.80% |?                                                                                                    |  1/125 Time: 0:00:24 0.80% |?                                                                                                    |  1/125 Time: 0:00:25 0.80% |?                                                                                                    |  1/125 Time: 0:00:26 0.80% |?                                                                                                    |  1/125 Time: 0:00:27 0.80% |?                                                                                                    |  1/125 Time: 0:00:28 0.80% |?                                                                                                    |  1/125 Time: 0:00:29 0.80% |?                                                                                                    |  1/125 Time: 0:00:30 1.60% |??                                                                                                   |  2/125 Time: 0:00:31 1.60% |??                                                                                                   |  2/125 Time: 0:00:32 1.60% |??                                                                                                   |  2/125 Time: 0:00:33 18.40% |???????????????????                                                                                  |  23/125 Time: 0:00:34 47.20% |????????????????????????????????????????????????                                                     |  59/125 Time: 0:00:35 86.40% |???????????????????????????????????????????????????????????????????????????????????????              |  108/125 Time: 0:00:36 100.00% |?????????????????????????????????????????????????????????????????????????????????????????????????????|  125/125 Time: 0:00:37

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,813
Average Time spent in bucket creation: 00:00:00,091
Average Time spent in key creation: 00:00:00,842
Average Time spent in key write: 00:00:34,495
Total bytes written: 1280000
Total Execution time: 00:00:41,306
***************************************************</msg>
<status status="PASS" endtime="20190820 14:47:50.208" starttime="20190820 14:47:50.207"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190820 14:47:50.209" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 14:47:50.209" starttime="20190820 14:47:50.208"></status>
</kw>
<msg timestamp="20190820 14:47:50.209" level="INFO">${result} = 2019-08-20 14:47:08 INFO  MetricsConfig:118 - Loaded properties from hadoop-metrics2.properties
2019-08-20 14:47:08 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2019...</msg>
<status status="PASS" endtime="20190820 14:47:50.209" starttime="20190820 14:47:07.157"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20190820 14:47:50.213" starttime="20190820 14:47:50.212"></status>
</kw>
<status status="PASS" endtime="20190820 14:47:50.213" starttime="20190820 14:47:50.210"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20190820 14:47:50.214" starttime="20190820 14:47:50.213"></status>
</kw>
<status status="PASS" endtime="20190820 14:47:50.214" critical="yes" starttime="20190820 14:47:07.156"></status>
</test>
<test id="s1-s1-t2" name="Testing audit parser">
<kw name="Get Environment Variable" library="OperatingSystem">
<doc>Returns the value of an environment variable with the given name.</doc>
<arguments>
<arg>HADOOP_LOG_DIR</arg>
<arg>/var/log/hadoop</arg>
</arguments>
<assign>
<var>${logdir}</var>
</assign>
<msg timestamp="20190820 14:47:50.215" level="INFO">${logdir} = /var/log/hadoop</msg>
<status status="PASS" endtime="20190820 14:47:50.215" starttime="20190820 14:47:50.215"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ls -t "${logdir}" | grep om-audit | head -1</arg>
</arguments>
<assign>
<var>${logfile}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190820 14:47:50.218" level="INFO">Running command 'ls -t "/var/log/hadoop" | grep om-audit | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20190820 14:47:50.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20190820 14:47:50.227" level="INFO">${output} = om-audit-3aae443e0b07.log</msg>
<status status="PASS" endtime="20190820 14:47:50.227" starttime="20190820 14:47:50.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190820 14:47:50.228" level="INFO">om-audit-3aae443e0b07.log</msg>
<status status="PASS" endtime="20190820 14:47:50.229" starttime="20190820 14:47:50.228"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190820 14:47:50.229" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 14:47:50.229" starttime="20190820 14:47:50.229"></status>
</kw>
<msg timestamp="20190820 14:47:50.230" level="INFO">${logfile} = om-audit-3aae443e0b07.log</msg>
<status status="PASS" endtime="20190820 14:47:50.230" starttime="20190820 14:47:50.216"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" load "${logdir}/${logfile}"</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190820 14:47:50.232" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" load "/var/log/hadoop/om-audit-3aae443e0b07.log" 2&gt;&amp;1'.</msg>
<msg timestamp="20190820 14:47:56.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20190820 14:47:56.654" level="INFO">${output} = /var/log/hadoop/om-audit-3aae443e0b07.log has been loaded successfully</msg>
<status status="PASS" endtime="20190820 14:47:56.654" starttime="20190820 14:47:50.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190820 14:47:56.655" level="INFO">/var/log/hadoop/om-audit-3aae443e0b07.log has been loaded successfully</msg>
<status status="PASS" endtime="20190820 14:47:56.656" starttime="20190820 14:47:56.655"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190820 14:47:56.656" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 14:47:56.657" starttime="20190820 14:47:56.656"></status>
</kw>
<status status="PASS" endtime="20190820 14:47:56.657" starttime="20190820 14:47:50.230"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" template top5cmds</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190820 14:47:56.660" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" template top5cmds 2&gt;&amp;1'.</msg>
<msg timestamp="20190820 14:47:57.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20190820 14:47:57.471" level="INFO">${output} = ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190820 14:47:57.471" starttime="20190820 14:47:56.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190820 14:47:57.472" level="INFO">ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190820 14:47:57.472" starttime="20190820 14:47:57.471"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190820 14:47:57.473" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 14:47:57.473" starttime="20190820 14:47:57.472"></status>
</kw>
<msg timestamp="20190820 14:47:57.473" level="INFO">${result} = ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190820 14:47:57.473" starttime="20190820 14:47:56.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ALLOCATE_KEY</arg>
</arguments>
<status status="PASS" endtime="20190820 14:47:57.474" starttime="20190820 14:47:57.473"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" template top5users</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190820 14:47:57.476" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" template top5users 2&gt;&amp;1'.</msg>
<msg timestamp="20190820 14:47:58.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20190820 14:47:58.256" level="INFO">${output} = hadoop	280	
</msg>
<status status="PASS" endtime="20190820 14:47:58.256" starttime="20190820 14:47:57.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190820 14:47:58.257" level="INFO">hadoop	280	
</msg>
<status status="PASS" endtime="20190820 14:47:58.258" starttime="20190820 14:47:58.257"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190820 14:47:58.259" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 14:47:58.259" starttime="20190820 14:47:58.258"></status>
</kw>
<msg timestamp="20190820 14:47:58.259" level="INFO">${result} = hadoop	280	
</msg>
<status status="PASS" endtime="20190820 14:47:58.260" starttime="20190820 14:47:57.474"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Set username</arg>
</arguments>
<status status="PASS" endtime="20190820 14:47:58.261" starttime="20190820 14:47:58.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${user}</arg>
</arguments>
<status status="PASS" endtime="20190820 14:47:58.262" starttime="20190820 14:47:58.261"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'"</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190820 14:47:58.266" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20190820 14:47:59.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20190820 14:47:59.017" level="INFO">${output} = 5	
</msg>
<status status="PASS" endtime="20190820 14:47:59.017" starttime="20190820 14:47:58.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190820 14:47:59.019" level="INFO">5	
</msg>
<status status="PASS" endtime="20190820 14:47:59.019" starttime="20190820 14:47:59.018"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190820 14:47:59.019" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 14:47:59.019" starttime="20190820 14:47:59.019"></status>
</kw>
<msg timestamp="20190820 14:47:59.020" level="INFO">${result} = 5	
</msg>
<status status="PASS" endtime="20190820 14:47:59.020" starttime="20190820 14:47:58.262"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190820 14:47:59.020" level="INFO">${result} = 5.0</msg>
<status status="PASS" endtime="20190820 14:47:59.020" starttime="20190820 14:47:59.020"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}&gt;${count}</arg>
</arguments>
<status status="PASS" endtime="20190820 14:47:59.021" starttime="20190820 14:47:59.020"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'"</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190820 14:47:59.023" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20190820 14:47:59.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20190820 14:47:59.775" level="INFO">${output} = 25	
</msg>
<status status="PASS" endtime="20190820 14:47:59.775" starttime="20190820 14:47:59.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190820 14:47:59.776" level="INFO">25	
</msg>
<status status="PASS" endtime="20190820 14:47:59.776" starttime="20190820 14:47:59.776"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190820 14:47:59.777" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190820 14:47:59.777" starttime="20190820 14:47:59.776"></status>
</kw>
<msg timestamp="20190820 14:47:59.777" level="INFO">${result} = 25	
</msg>
<status status="PASS" endtime="20190820 14:47:59.777" starttime="20190820 14:47:59.021"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190820 14:47:59.778" level="INFO">${result} = 25.0</msg>
<status status="PASS" endtime="20190820 14:47:59.778" starttime="20190820 14:47:59.777"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}&gt;${count}</arg>
</arguments>
<status status="PASS" endtime="20190820 14:47:59.778" starttime="20190820 14:47:59.778"></status>
</kw>
<status status="PASS" endtime="20190820 14:47:59.779" critical="yes" starttime="20190820 14:47:50.214"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20190820 14:47:59.779" starttime="20190820 14:47:07.131"></status>
</suite>
<status status="PASS" endtime="20190820 14:47:59.781" starttime="20190820 14:47:07.106"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-auditparser" pass="2">ozone-auditparser</stat>
<stat fail="0" id="s1-s1" name="Auditparser" pass="2">ozone-auditparser.Auditparser</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
