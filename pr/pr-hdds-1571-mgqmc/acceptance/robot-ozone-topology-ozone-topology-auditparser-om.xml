<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20190904 06:55:31.667" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/auditparser" id="s1" name="ozone-topology-auditparser">
<suite source="/opt/hadoop/smoketest/auditparser/auditparser.robot" id="s1-s1" name="Auditparser">
<test id="s1-s1-t1" name="Initiating freon to generate data">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190904 06:55:31.954" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 2&gt;&amp;1'.</msg>
<msg timestamp="20190904 06:55:55.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20190904 06:55:55.368" level="INFO">${output} = 
 0.00% |?                                                                                                    |  0/125 Time: 0:00:00 0.00% |?                                                         ...</msg>
<status status="PASS" endtime="20190904 06:55:55.368" starttime="20190904 06:55:31.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190904 06:55:55.369" level="INFO">
 0.00% |?                                                                                                    |  0/125 Time: 0:00:00 0.00% |?                                                                                                    |  0/125 Time: 0:00:01 0.00% |?                                                                                                    |  0/125 Time: 0:00:02WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil (file:/opt/hadoop/share/ozone/lib/ratis-thirdparty-misc-0.2.0.jar) to field java.nio.Buffer.address
WARNING: Please consider reporting this to the maintainers of org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
 0.00% |?                                                                                                    |  0/125 Time: 0:00:03 1.60% |??                                                                                                   |  2/125 Time: 0:00:04 1.60% |??                                                                                                   |  2/125 Time: 0:00:05 1.60% |??                                                                                                   |  2/125 Time: 0:00:06 1.60% |??                                                                                                   |  2/125 Time: 0:00:07 1.60% |??                                                                                                   |  2/125 Time: 0:00:08 1.60% |??                                                                                                   |  2/125 Time: 0:00:09 1.60% |??                                                                                                   |  2/125 Time: 0:00:10 1.60% |??                                                                                                   |  2/125 Time: 0:00:11 4.80% |?????                                                                                                |  6/125 Time: 0:00:12 22.40% |???????????????????????                                                                              |  28/125 Time: 0:00:13 32.00% |?????????????????????????????????                                                                    |  40/125 Time: 0:00:14 52.00% |?????????????????????????????????????????????????????                                                |  65/125 Time: 0:00:15 75.20% |????????????????????????????????????????????????????????????????????????????                         |  94/125 Time: 0:00:16 96.00% |?????????????????????????????????????????????????????????????????????????????????????????????????    |  120/125 Time: 0:00:17 100.00% |?????????????????????????????????????????????????????????????????????????????????????????????????????|  125/125 Time: 0:00:18

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,202
Average Time spent in bucket creation: 00:00:00,151
Average Time spent in key creation: 00:00:01,247
Average Time spent in key write: 00:00:15,470
Total bytes written: 1280000
Total Execution time: 00:00:21,434
***************************************************</msg>
<status status="PASS" endtime="20190904 06:55:55.369" starttime="20190904 06:55:55.368"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190904 06:55:55.370" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190904 06:55:55.370" starttime="20190904 06:55:55.370"></status>
</kw>
<msg timestamp="20190904 06:55:55.371" level="INFO">${result} = 
 0.00% |?                                                                                                    |  0/125 Time: 0:00:00 0.00% |?                                                         ...</msg>
<status status="PASS" endtime="20190904 06:55:55.371" starttime="20190904 06:55:31.951"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20190904 06:55:55.375" starttime="20190904 06:55:55.374"></status>
</kw>
<status status="PASS" endtime="20190904 06:55:55.375" starttime="20190904 06:55:55.371"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20190904 06:55:55.375" starttime="20190904 06:55:55.375"></status>
</kw>
<status status="PASS" endtime="20190904 06:55:55.376" critical="yes" starttime="20190904 06:55:31.951"></status>
</test>
<test id="s1-s1-t2" name="Testing audit parser">
<kw name="Get Environment Variable" library="OperatingSystem">
<doc>Returns the value of an environment variable with the given name.</doc>
<arguments>
<arg>HADOOP_LOG_DIR</arg>
<arg>/var/log/hadoop</arg>
</arguments>
<assign>
<var>${logdir}</var>
</assign>
<msg timestamp="20190904 06:55:55.377" level="INFO">${logdir} = /var/log/hadoop</msg>
<status status="PASS" endtime="20190904 06:55:55.377" starttime="20190904 06:55:55.377"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ls -t "${logdir}" | grep om-audit | head -1</arg>
</arguments>
<assign>
<var>${logfile}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190904 06:55:55.380" level="INFO">Running command 'ls -t "/var/log/hadoop" | grep om-audit | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20190904 06:55:55.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20190904 06:55:55.474" level="INFO">${output} = om-audit-fad2a9782be8.log</msg>
<status status="PASS" endtime="20190904 06:55:55.474" starttime="20190904 06:55:55.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190904 06:55:55.475" level="INFO">om-audit-fad2a9782be8.log</msg>
<status status="PASS" endtime="20190904 06:55:55.475" starttime="20190904 06:55:55.474"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190904 06:55:55.475" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190904 06:55:55.476" starttime="20190904 06:55:55.475"></status>
</kw>
<msg timestamp="20190904 06:55:55.476" level="INFO">${logfile} = om-audit-fad2a9782be8.log</msg>
<status status="PASS" endtime="20190904 06:55:55.476" starttime="20190904 06:55:55.378"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" load "${logdir}/${logfile}"</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190904 06:55:55.478" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" load "/var/log/hadoop/om-audit-fad2a9782be8.log" 2&gt;&amp;1'.</msg>
<msg timestamp="20190904 06:56:03.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20190904 06:56:03.335" level="INFO">${output} = /var/log/hadoop/om-audit-fad2a9782be8.log has been loaded successfully</msg>
<status status="PASS" endtime="20190904 06:56:03.335" starttime="20190904 06:55:55.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190904 06:56:03.337" level="INFO">/var/log/hadoop/om-audit-fad2a9782be8.log has been loaded successfully</msg>
<status status="PASS" endtime="20190904 06:56:03.337" starttime="20190904 06:56:03.336"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190904 06:56:03.338" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190904 06:56:03.338" starttime="20190904 06:56:03.337"></status>
</kw>
<status status="PASS" endtime="20190904 06:56:03.339" starttime="20190904 06:55:55.476"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" template top5cmds</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190904 06:56:03.342" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" template top5cmds 2&gt;&amp;1'.</msg>
<msg timestamp="20190904 06:56:04.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20190904 06:56:04.158" level="INFO">${output} = ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190904 06:56:04.158" starttime="20190904 06:56:03.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190904 06:56:04.159" level="INFO">ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190904 06:56:04.159" starttime="20190904 06:56:04.159"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190904 06:56:04.160" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190904 06:56:04.160" starttime="20190904 06:56:04.159"></status>
</kw>
<msg timestamp="20190904 06:56:04.160" level="INFO">${result} = ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190904 06:56:04.160" starttime="20190904 06:56:03.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ALLOCATE_KEY</arg>
</arguments>
<status status="PASS" endtime="20190904 06:56:04.161" starttime="20190904 06:56:04.161"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" template top5users</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190904 06:56:04.163" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" template top5users 2&gt;&amp;1'.</msg>
<msg timestamp="20190904 06:56:05.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20190904 06:56:05.008" level="INFO">${output} = hadoop	280	
</msg>
<status status="PASS" endtime="20190904 06:56:05.008" starttime="20190904 06:56:04.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190904 06:56:05.009" level="INFO">hadoop	280	
</msg>
<status status="PASS" endtime="20190904 06:56:05.009" starttime="20190904 06:56:05.008"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190904 06:56:05.010" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190904 06:56:05.010" starttime="20190904 06:56:05.009"></status>
</kw>
<msg timestamp="20190904 06:56:05.010" level="INFO">${result} = hadoop	280	
</msg>
<status status="PASS" endtime="20190904 06:56:05.010" starttime="20190904 06:56:04.161"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Set username</arg>
</arguments>
<status status="PASS" endtime="20190904 06:56:05.011" starttime="20190904 06:56:05.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${user}</arg>
</arguments>
<status status="PASS" endtime="20190904 06:56:05.011" starttime="20190904 06:56:05.011"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'"</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190904 06:56:05.014" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20190904 06:56:05.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20190904 06:56:05.847" level="INFO">${output} = 5	
</msg>
<status status="PASS" endtime="20190904 06:56:05.847" starttime="20190904 06:56:05.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190904 06:56:05.848" level="INFO">5	
</msg>
<status status="PASS" endtime="20190904 06:56:05.848" starttime="20190904 06:56:05.847"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190904 06:56:05.848" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190904 06:56:05.848" starttime="20190904 06:56:05.848"></status>
</kw>
<msg timestamp="20190904 06:56:05.849" level="INFO">${result} = 5	
</msg>
<status status="PASS" endtime="20190904 06:56:05.849" starttime="20190904 06:56:05.012"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190904 06:56:05.849" level="INFO">${result} = 5.0</msg>
<status status="PASS" endtime="20190904 06:56:05.849" starttime="20190904 06:56:05.849"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}&gt;${count}</arg>
</arguments>
<status status="PASS" endtime="20190904 06:56:05.850" starttime="20190904 06:56:05.850"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'"</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190904 06:56:05.852" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20190904 06:56:06.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20190904 06:56:06.687" level="INFO">${output} = 25	
</msg>
<status status="PASS" endtime="20190904 06:56:06.687" starttime="20190904 06:56:05.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190904 06:56:06.689" level="INFO">25	
</msg>
<status status="PASS" endtime="20190904 06:56:06.689" starttime="20190904 06:56:06.688"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190904 06:56:06.690" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190904 06:56:06.690" starttime="20190904 06:56:06.689"></status>
</kw>
<msg timestamp="20190904 06:56:06.691" level="INFO">${result} = 25	
</msg>
<status status="PASS" endtime="20190904 06:56:06.691" starttime="20190904 06:56:05.850"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190904 06:56:06.692" level="INFO">${result} = 25.0</msg>
<status status="PASS" endtime="20190904 06:56:06.692" starttime="20190904 06:56:06.691"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}&gt;${count}</arg>
</arguments>
<status status="PASS" endtime="20190904 06:56:06.693" starttime="20190904 06:56:06.692"></status>
</kw>
<status status="PASS" endtime="20190904 06:56:06.694" critical="yes" starttime="20190904 06:55:55.376"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20190904 06:56:06.695" starttime="20190904 06:55:31.917"></status>
</suite>
<status status="PASS" endtime="20190904 06:56:06.699" starttime="20190904 06:55:31.874"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-topology-auditparser" pass="2">ozone-topology-auditparser</stat>
<stat fail="0" id="s1-s1" name="Auditparser" pass="2">ozone-topology-auditparser.Auditparser</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
