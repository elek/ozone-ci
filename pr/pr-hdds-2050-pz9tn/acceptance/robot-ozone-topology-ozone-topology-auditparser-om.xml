<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20190830 01:15:21.355" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/auditparser" id="s1" name="ozone-topology-auditparser">
<suite source="/opt/hadoop/smoketest/auditparser/auditparser.robot" id="s1-s1" name="Auditparser">
<test id="s1-s1-t1" name="Initiating freon to generate data">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190830 01:15:21.425" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 2&gt;&amp;1'.</msg>
<msg timestamp="20190830 01:17:13.755" level="INFO">${rc} = 255</msg>
<msg timestamp="20190830 01:17:13.755" level="INFO">${output} = Connection refused</msg>
<status status="PASS" endtime="20190830 01:17:13.756" starttime="20190830 01:15:21.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190830 01:17:13.757" level="INFO">Connection refused</msg>
<status status="PASS" endtime="20190830 01:17:13.757" starttime="20190830 01:17:13.756"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190830 01:17:13.758" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20190830 01:17:13.759" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20190830 01:17:13.759" starttime="20190830 01:17:13.758"></status>
</kw>
<status status="FAIL" endtime="20190830 01:17:13.763" starttime="20190830 01:15:21.422"></status>
</kw>
<status status="FAIL" endtime="20190830 01:17:13.763" critical="yes" starttime="20190830 01:15:21.422">255 != 0</status>
</test>
<test id="s1-s1-t2" name="Testing audit parser">
<kw name="Get Environment Variable" library="OperatingSystem">
<doc>Returns the value of an environment variable with the given name.</doc>
<arguments>
<arg>HADOOP_LOG_DIR</arg>
<arg>/var/log/hadoop</arg>
</arguments>
<assign>
<var>${logdir}</var>
</assign>
<msg timestamp="20190830 01:17:13.766" level="INFO">${logdir} = /var/log/hadoop</msg>
<status status="PASS" endtime="20190830 01:17:13.766" starttime="20190830 01:17:13.765"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ls -t "${logdir}" | grep om-audit | head -1</arg>
</arguments>
<assign>
<var>${logfile}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190830 01:17:13.769" level="INFO">Running command 'ls -t "/var/log/hadoop" | grep om-audit | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20190830 01:17:13.778" level="INFO">${rc} = 0</msg>
<msg timestamp="20190830 01:17:13.778" level="INFO">${output} = </msg>
<status status="PASS" endtime="20190830 01:17:13.778" starttime="20190830 01:17:13.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190830 01:17:13.779" level="INFO"></msg>
<status status="PASS" endtime="20190830 01:17:13.779" starttime="20190830 01:17:13.778"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190830 01:17:13.780" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190830 01:17:13.780" starttime="20190830 01:17:13.780"></status>
</kw>
<msg timestamp="20190830 01:17:13.781" level="INFO">${logfile} = </msg>
<status status="PASS" endtime="20190830 01:17:13.781" starttime="20190830 01:17:13.766"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" load "${logdir}/${logfile}"</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190830 01:17:13.784" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" load "/var/log/hadoop/" 2&gt;&amp;1'.</msg>
<msg timestamp="20190830 01:17:14.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20190830 01:17:14.584" level="INFO">${output} = Failed to load /var/log/hadoop/</msg>
<status status="PASS" endtime="20190830 01:17:14.584" starttime="20190830 01:17:13.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190830 01:17:14.586" level="INFO">Failed to load /var/log/hadoop/</msg>
<status status="PASS" endtime="20190830 01:17:14.586" starttime="20190830 01:17:14.585"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190830 01:17:14.587" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190830 01:17:14.588" starttime="20190830 01:17:14.587"></status>
</kw>
<status status="PASS" endtime="20190830 01:17:14.588" starttime="20190830 01:17:13.781"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" template top5cmds</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190830 01:17:14.592" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" template top5cmds 2&gt;&amp;1'.</msg>
<msg timestamp="20190830 01:17:15.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20190830 01:17:15.510" level="INFO">${output} = </msg>
<status status="PASS" endtime="20190830 01:17:15.510" starttime="20190830 01:17:14.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190830 01:17:15.512" level="INFO"></msg>
<status status="PASS" endtime="20190830 01:17:15.512" starttime="20190830 01:17:15.511"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190830 01:17:15.513" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190830 01:17:15.513" starttime="20190830 01:17:15.512"></status>
</kw>
<msg timestamp="20190830 01:17:15.513" level="INFO">${result} = </msg>
<status status="PASS" endtime="20190830 01:17:15.513" starttime="20190830 01:17:14.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ALLOCATE_KEY</arg>
</arguments>
<msg timestamp="20190830 01:17:15.515" level="FAIL">'' does not contain 'ALLOCATE_KEY'</msg>
<status status="FAIL" endtime="20190830 01:17:15.515" starttime="20190830 01:17:15.514"></status>
</kw>
<status status="FAIL" endtime="20190830 01:17:15.515" critical="yes" starttime="20190830 01:17:13.764">'' does not contain 'ALLOCATE_KEY'</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" endtime="20190830 01:17:15.517" starttime="20190830 01:15:21.391"></status>
</suite>
<status status="FAIL" endtime="20190830 01:17:15.520" starttime="20190830 01:15:21.356"></status>
</suite>
<statistics>
<total>
<stat fail="2" pass="0">Critical Tests</stat>
<stat fail="2" pass="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="2" id="s1" name="ozone-topology-auditparser" pass="0">ozone-topology-auditparser</stat>
<stat fail="2" id="s1-s1" name="Auditparser" pass="0">ozone-topology-auditparser.Auditparser</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
